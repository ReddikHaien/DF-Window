// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RemoteFortressReader.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RemoteFortressReader {

  /// <summary>Holder for reflection information generated from RemoteFortressReader.proto</summary>
  public static partial class RemoteFortressReaderReflection {

    #region Descriptor
    /// <summary>File descriptor for RemoteFortressReader.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RemoteFortressReaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpSZW1vdGVGb3J0cmVzc1JlYWRlci5wcm90bxIUUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIaF0l0ZW1kZWZJbnN0cnVtZW50LnByb3RvIigKBUNvb3JkEgkKAXgY",
            "ASABKAUSCQoBeRgCIAEoBRIJCgF6GAMgASgFIqYCCghUaWxldHlwZRIKCgJp",
            "ZBgBIAIoBRIMCgRuYW1lGAIgASgMEg8KB2NhcHRpb24YAyABKAwSMgoFc2hh",
            "cGUYBCABKA4yIy5SZW1vdGVGb3J0cmVzc1JlYWRlci5UaWxldHlwZVNoYXBl",
            "EjYKB3NwZWNpYWwYBSABKA4yJS5SZW1vdGVGb3J0cmVzc1JlYWRlci5UaWxl",
            "dHlwZVNwZWNpYWwSOAoIbWF0ZXJpYWwYBiABKA4yJi5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5UaWxldHlwZU1hdGVyaWFsEjYKB3ZhcmlhbnQYByABKA4yJS5S",
            "ZW1vdGVGb3J0cmVzc1JlYWRlci5UaWxldHlwZVZhcmlhbnQSEQoJZGlyZWN0",
            "aW9uGAggASgMIkUKDFRpbGV0eXBlTGlzdBI1Cg10aWxldHlwZV9saXN0GAEg",
            "AygLMh4uUmVtb3RlRm9ydHJlc3NSZWFkZXIuVGlsZXR5cGUiXwoPQnVpbGRp",
            "bmdFeHRlbnRzEg0KBXBvc194GAEgAigFEg0KBXBvc195GAIgAigFEg0KBXdp",
            "ZHRoGAMgAigFEg4KBmhlaWdodBgEIAIoBRIPCgdleHRlbnRzGAUgAygFIkYK",
            "DEJ1aWxkaW5nSXRlbRIoCgRpdGVtGAEgASgLMhouUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIuSXRlbRIMCgRtb2RlGAIgASgFItwDChBCdWlsZGluZ0luc3RhbmNl",
            "Eg0KBWluZGV4GAEgAigFEhEKCXBvc194X21pbhgCIAEoBRIRCglwb3NfeV9t",
            "aW4YAyABKAUSEQoJcG9zX3pfbWluGAQgASgFEhEKCXBvc194X21heBgFIAEo",
            "BRIRCglwb3NfeV9tYXgYBiABKAUSEQoJcG9zX3pfbWF4GAcgASgFEjkKDWJ1",
            "aWxkaW5nX3R5cGUYCCABKAsyIi5SZW1vdGVGb3J0cmVzc1JlYWRlci5CdWls",
            "ZGluZ1R5cGUSLwoIbWF0ZXJpYWwYCSABKAsyHS5SZW1vdGVGb3J0cmVzc1Jl",
            "YWRlci5NYXRQYWlyEhYKDmJ1aWxkaW5nX2ZsYWdzGAogASgNEg8KB2lzX3Jv",
            "b20YCyABKAgSMwoEcm9vbRgMIAEoCzIlLlJlbW90ZUZvcnRyZXNzUmVhZGVy",
            "LkJ1aWxkaW5nRXh0ZW50cxI6CglkaXJlY3Rpb24YDSABKA4yJy5SZW1vdGVG",
            "b3J0cmVzc1JlYWRlci5CdWlsZGluZ0RpcmVjdGlvbhIxCgVpdGVtcxgOIAMo",
            "CzIiLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkJ1aWxkaW5nSXRlbRIOCgZhY3Rp",
            "dmUYDyABKAUiUAoJUml2ZXJFZGdlEg8KB21pbl9wb3MYASABKAUSDwoHbWF4",
            "X3BvcxgCIAEoBRIOCgZhY3RpdmUYAyABKAUSEQoJZWxldmF0aW9uGAQgASgF",
            "IskBCglSaXZlclRpbGUSLgoFbm9ydGgYASABKAsyHy5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5SaXZlckVkZ2USLgoFc291dGgYAiABKAsyHy5SZW1vdGVGb3J0",
            "cmVzc1JlYWRlci5SaXZlckVkZ2USLQoEZWFzdBgDIAEoCzIfLlJlbW90ZUZv",
            "cnRyZXNzUmVhZGVyLlJpdmVyRWRnZRItCgR3ZXN0GAQgASgLMh8uUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuUml2ZXJFZGdlIqkBCgdTcGF0dGVyEi8KCG1hdGVy",
            "aWFsGAEgASgLMh0uUmVtb3RlRm9ydHJlc3NSZWFkZXIuTWF0UGFpchIOCgZh",
            "bW91bnQYAiABKAUSMAoFc3RhdGUYAyABKA4yIS5SZW1vdGVGb3J0cmVzc1Jl",
            "YWRlci5NYXR0ZXJTdGF0ZRIrCgRpdGVtGAQgASgLMh0uUmVtb3RlRm9ydHJl",
            "c3NSZWFkZXIuTWF0UGFpciI+CgtTcGF0dGVyUGlsZRIvCghzcGF0dGVycxgB",
            "IAMoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLlNwYXR0ZXIihAQKBEl0ZW0S",
            "CgoCaWQYASABKAUSKAoDcG9zGAIgASgLMhsuUmVtb3RlRm9ydHJlc3NSZWFk",
            "ZXIuQ29vcmQSDgoGZmxhZ3MxGAMgASgNEg4KBmZsYWdzMhgEIAEoDRIrCgR0",
            "eXBlGAUgASgLMh0uUmVtb3RlRm9ydHJlc3NSZWFkZXIuTWF0UGFpchIvCght",
            "YXRlcmlhbBgGIAEoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXIS",
            "MgoDZHllGAcgASgLMiUuUmVtb3RlRm9ydHJlc3NSZWFkZXIuQ29sb3JEZWZp",
            "bml0aW9uEhIKCnN0YWNrX3NpemUYCCABKAUSEAoIc3VicG9zX3gYCSABKAIS",
            "EAoIc3VicG9zX3kYCiABKAISEAoIc3VicG9zX3oYCyABKAISEgoKcHJvamVj",
            "dGlsZRgMIAEoCBISCgp2ZWxvY2l0eV94GA0gASgCEhIKCnZlbG9jaXR5X3kY",
            "DiABKAISEgoKdmVsb2NpdHlfehgPIAEoAhIOCgZ2b2x1bWUYECABKAUSOwoM",
            "aW1wcm92ZW1lbnRzGBEgAygLMiUuUmVtb3RlRm9ydHJlc3NSZWFkZXIuSXRl",
            "bUltcHJvdmVtZW50Ei0KBWltYWdlGBIgASgLMh4uUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIuQXJ0SW1hZ2Ui2wEKCVBsYW50VGlsZRINCgV0cnVuaxgBIAEoCBIX",
            "Cg9jb25uZWN0aW9uX2Vhc3QYAiABKAgSGAoQY29ubmVjdGlvbl9zb3V0aBgD",
            "IAEoCBIXCg9jb25uZWN0aW9uX3dlc3QYBCABKAgSGAoQY29ubmVjdGlvbl9u",
            "b3J0aBgFIAEoCBIQCghicmFuY2hlcxgGIAEoCBINCgV0d2lncxgHIAEoCBI4",
            "Cgl0aWxlX3R5cGUYCCABKA4yJS5SZW1vdGVGb3J0cmVzc1JlYWRlci5UaWxl",
            "dHlwZVNwZWNpYWwiZQoIVHJlZUluZm8SKQoEc2l6ZRgBIAEoCzIbLlJlbW90",
            "ZUZvcnRyZXNzUmVhZGVyLkNvb3JkEi4KBXRpbGVzGAIgAygLMh8uUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuUGxhbnRUaWxlIoABCg1QbGFudEluc3RhbmNlEhIK",
            "CnBsYW50X3R5cGUYASABKAUSKAoDcG9zGAIgASgLMhsuUmVtb3RlRm9ydHJl",
            "c3NSZWFkZXIuQ29vcmQSMQoJdHJlZV9pbmZvGAMgASgLMh4uUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuVHJlZUluZm8itAcKCE1hcEJsb2NrEg0KBW1hcF94GAEg",
            "AigFEg0KBW1hcF95GAIgAigFEg0KBW1hcF96GAMgAigFEg0KBXRpbGVzGAQg",
            "AygFEjAKCW1hdGVyaWFscxgFIAMoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVy",
            "Lk1hdFBhaXISNgoPbGF5ZXJfbWF0ZXJpYWxzGAYgAygLMh0uUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuTWF0UGFpchI1Cg52ZWluX21hdGVyaWFscxgHIAMoCzId",
            "LlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXISNQoOYmFzZV9tYXRlcmlh",
            "bHMYCCADKAsyHS5SZW1vdGVGb3J0cmVzc1JlYWRlci5NYXRQYWlyEg0KBW1h",
            "Z21hGAkgAygFEg0KBXdhdGVyGAogAygFEg4KBmhpZGRlbhgLIAMoCBINCgVs",
            "aWdodBgMIAMoCBIUCgxzdWJ0ZXJyYW5lYW4YDSADKAgSDwoHb3V0c2lkZRgO",
            "IAMoCBIPCgdhcXVpZmVyGA8gAygIEhYKDndhdGVyX3N0YWduYW50GBAgAygI",
            "EhIKCndhdGVyX3NhbHQYESADKAgSOQoSY29uc3RydWN0aW9uX2l0ZW1zGBIg",
            "AygLMh0uUmVtb3RlRm9ydHJlc3NSZWFkZXIuTWF0UGFpchI5CglidWlsZGlu",
            "Z3MYEyADKAsyJi5SZW1vdGVGb3J0cmVzc1JlYWRlci5CdWlsZGluZ0luc3Rh",
            "bmNlEhQKDHRyZWVfcGVyY2VudBgUIAMoBRIOCgZ0cmVlX3gYFSADKAUSDgoG",
            "dHJlZV95GBYgAygFEg4KBnRyZWVfehgXIAMoBRJGChR0aWxlX2RpZ19kZXNp",
            "Z25hdGlvbhgYIAMoDjIoLlJlbW90ZUZvcnRyZXNzUmVhZGVyLlRpbGVEaWdE",
            "ZXNpZ25hdGlvbhI2CgtzcGF0dGVyUGlsZRgZIAMoCzIhLlJlbW90ZUZvcnRy",
            "ZXNzUmVhZGVyLlNwYXR0ZXJQaWxlEikKBWl0ZW1zGBogAygLMhouUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuSXRlbRIjCht0aWxlX2RpZ19kZXNpZ25hdGlvbl9t",
            "YXJrZXIYGyADKAgSIQoZdGlsZV9kaWdfZGVzaWduYXRpb25fYXV0bxgcIAMo",
            "CBIVCg1ncmFzc19wZXJjZW50GB0gAygFEi0KBWZsb3dzGB4gAygLMh4uUmVt",
            "b3RlRm9ydHJlc3NSZWFkZXIuRmxvd0luZm8iLgoHTWF0UGFpchIQCghtYXRf",
            "dHlwZRgBIAIoBRIRCgltYXRfaW5kZXgYAiACKAUiOwoPQ29sb3JEZWZpbml0",
            "aW9uEgsKA3JlZBgBIAIoBRINCgVncmVlbhgCIAIoBRIMCgRibHVlGAMgAigF",
            "IqYCChJNYXRlcmlhbERlZmluaXRpb24SLwoIbWF0X3BhaXIYASACKAsyHS5S",
            "ZW1vdGVGb3J0cmVzc1JlYWRlci5NYXRQYWlyEgoKAmlkGAIgASgMEgwKBG5h",
            "bWUYAyABKAwSOgoLc3RhdGVfY29sb3IYBCABKAsyJS5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5Db2xvckRlZmluaXRpb24SNAoKaW5zdHJ1bWVudBgFIAEoCzIg",
            "Lkl0ZW1kZWZJbnN0cnVtZW50Lkluc3RydW1lbnREZWYSDwoHdXBfc3RlcBgG",
            "IAEoBRIRCglkb3duX3N0ZXAYByABKAUSLwoFbGF5ZXIYCCABKA4yIC5SZW1v",
            "dGVGb3J0cmVzc1JlYWRlci5Bcm1vckxheWVyIlgKDEJ1aWxkaW5nVHlwZRIV",
            "Cg1idWlsZGluZ190eXBlGAEgAigFEhgKEGJ1aWxkaW5nX3N1YnR5cGUYAiAC",
            "KAUSFwoPYnVpbGRpbmdfY3VzdG9tGAMgAigFImkKEkJ1aWxkaW5nRGVmaW5p",
            "dGlvbhI5Cg1idWlsZGluZ190eXBlGAEgAigLMiIuUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIuQnVpbGRpbmdUeXBlEgoKAmlkGAIgASgMEgwKBG5hbWUYAyABKAwi",
            "TwoMQnVpbGRpbmdMaXN0Ej8KDWJ1aWxkaW5nX2xpc3QYASADKAsyKC5SZW1v",
            "dGVGb3J0cmVzc1JlYWRlci5CdWlsZGluZ0RlZmluaXRpb24iTwoMTWF0ZXJp",
            "YWxMaXN0Ej8KDW1hdGVyaWFsX2xpc3QYASADKAsyKC5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5NYXRlcmlhbERlZmluaXRpb24iRgoESGFpchIOCgZsZW5ndGgY",
            "ASABKAUSLgoFc3R5bGUYAiABKA4yHy5SZW1vdGVGb3J0cmVzc1JlYWRlci5I",
            "YWlyU3R5bGUigQEKDEJvZHlTaXplSW5mbxIQCghzaXplX2N1chgBIAEoBRIR",
            "CglzaXplX2Jhc2UYAiABKAUSEAoIYXJlYV9jdXIYAyABKAUSEQoJYXJlYV9i",
            "YXNlGAQgASgFEhIKCmxlbmd0aF9jdXIYBSABKAUSEwoLbGVuZ3RoX2Jhc2UY",
            "BiABKAUitgIKDlVuaXRBcHBlYXJhbmNlEhYKDmJvZHlfbW9kaWZpZXJzGAEg",
            "AygFEhQKDGJwX21vZGlmaWVycxgCIAMoBRIVCg1zaXplX21vZGlmaWVyGAMg",
            "ASgFEg4KBmNvbG9ycxgEIAMoBRIoCgRoYWlyGAUgASgLMhouUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuSGFpchIpCgViZWFyZBgGIAEoCzIaLlJlbW90ZUZvcnRy",
            "ZXNzUmVhZGVyLkhhaXISLQoJbW91c3RhY2hlGAcgASgLMhouUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuSGFpchItCglzaWRlYnVybnMYCCABKAsyGi5SZW1vdGVG",
            "b3J0cmVzc1JlYWRlci5IYWlyEhwKFHBoeXNpY2FsX2Rlc2NyaXB0aW9uGAkg",
            "ASgMIoIBCg1JbnZlbnRvcnlJdGVtEjEKBG1vZGUYASABKA4yIy5SZW1vdGVG",
            "b3J0cmVzc1JlYWRlci5JbnZlbnRvcnlNb2RlEigKBGl0ZW0YAiABKAsyGi5S",
            "ZW1vdGVGb3J0cmVzc1JlYWRlci5JdGVtEhQKDGJvZHlfcGFydF9pZBgDIAEo",
            "BSJOCglXb3VuZFBhcnQSGAoQZ2xvYmFsX2xheWVyX2lkeBgBIAEoBRIUCgxi",
            "b2R5X3BhcnRfaWQYAiABKAUSEQoJbGF5ZXJfaWR4GAMgASgFIlEKCVVuaXRX",
            "b3VuZBIuCgVwYXJ0cxgBIAMoCzIfLlJlbW90ZUZvcnRyZXNzUmVhZGVyLldv",
            "dW5kUGFydBIUCgxzZXZlcmVkX3BhcnQYAiABKAgizgUKDlVuaXREZWZpbml0",
            "aW9uEgoKAmlkGAEgAigFEg8KB2lzVmFsaWQYAiABKAgSDQoFcG9zX3gYAyAB",
            "KAUSDQoFcG9zX3kYBCABKAUSDQoFcG9zX3oYBSABKAUSKwoEcmFjZRgGIAEo",
            "CzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXISPwoQcHJvZmVzc2lv",
            "bl9jb2xvchgHIAEoCzIlLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkNvbG9yRGVm",
            "aW5pdGlvbhIOCgZmbGFnczEYCCABKA0SDgoGZmxhZ3MyGAkgASgNEg4KBmZs",
            "YWdzMxgKIAEoDRISCgppc19zb2xkaWVyGAsgASgIEjUKCXNpemVfaW5mbxgM",
            "IAEoCzIiLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkJvZHlTaXplSW5mbxIMCgRu",
            "YW1lGA0gASgMEhEKCWJsb29kX21heBgOIAEoBRITCgtibG9vZF9jb3VudBgP",
            "IAEoBRI4CgphcHBlYXJhbmNlGBAgASgLMiQuUmVtb3RlRm9ydHJlc3NSZWFk",
            "ZXIuVW5pdEFwcGVhcmFuY2USFQoNcHJvZmVzc2lvbl9pZBgRIAEoBRIXCg9u",
            "b2JsZV9wb3NpdGlvbnMYEiADKAwSEAoIcmlkZXJfaWQYEyABKAUSNgoJaW52",
            "ZW50b3J5GBQgAygLMiMuUmVtb3RlRm9ydHJlc3NSZWFkZXIuSW52ZW50b3J5",
            "SXRlbRIQCghzdWJwb3NfeBgVIAEoAhIQCghzdWJwb3NfeRgWIAEoAhIQCghz",
            "dWJwb3NfehgXIAEoAhIrCgZmYWNpbmcYGCABKAsyGy5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5Db29yZBILCgNhZ2UYGSABKAUSLwoGd291bmRzGBogAygLMh8u",
            "UmVtb3RlRm9ydHJlc3NSZWFkZXIuVW5pdFdvdW5kIkcKCFVuaXRMaXN0EjsK",
            "DWNyZWF0dXJlX2xpc3QYASADKAsyJC5SZW1vdGVGb3J0cmVzc1JlYWRlci5V",
            "bml0RGVmaW5pdGlvbiJ/CgxCbG9ja1JlcXVlc3QSFQoNYmxvY2tzX25lZWRl",
            "ZBgBIAEoBRINCgVtaW5feBgCIAEoBRINCgVtYXhfeBgDIAEoBRINCgVtaW5f",
            "eRgEIAEoBRINCgVtYXhfeRgFIAEoBRINCgVtaW5fehgGIAEoBRINCgVtYXhf",
            "ehgHIAEoBSLDAQoJQmxvY2tMaXN0EjIKCm1hcF9ibG9ja3MYASADKAsyHi5S",
            "ZW1vdGVGb3J0cmVzc1JlYWRlci5NYXBCbG9jaxINCgVtYXBfeBgCIAEoBRIN",
            "CgVtYXBfeRgDIAEoBRIzCgplbmdyYXZpbmdzGAQgAygLMh8uUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuRW5ncmF2aW5nEi8KC29jZWFuX3dhdmVzGAUgAygLMhou",
            "UmVtb3RlRm9ydHJlc3NSZWFkZXIuV2F2ZSJGCghQbGFudERlZhINCgVwb3Nf",
            "eBgBIAIoBRINCgVwb3NfeRgCIAIoBRINCgVwb3NfehgDIAIoBRINCgVpbmRl",
            "eBgEIAIoBSI/CglQbGFudExpc3QSMgoKcGxhbnRfbGlzdBgBIAMoCzIeLlJl",
            "bW90ZUZvcnRyZXNzUmVhZGVyLlBsYW50RGVmIuoBCghWaWV3SW5mbxISCgp2",
            "aWV3X3Bvc194GAEgASgFEhIKCnZpZXdfcG9zX3kYAiABKAUSEgoKdmlld19w",
            "b3NfehgDIAEoBRITCgt2aWV3X3NpemVfeBgEIAEoBRITCgt2aWV3X3NpemVf",
            "eRgFIAEoBRIUCgxjdXJzb3JfcG9zX3gYBiABKAUSFAoMY3Vyc29yX3Bvc195",
            "GAcgASgFEhQKDGN1cnNvcl9wb3NfehgIIAEoBRIaCg5mb2xsb3dfdW5pdF9p",
            "ZBgJIAEoBToCLTESGgoOZm9sbG93X2l0ZW1faWQYCiABKAU6Ai0xIs0BCgdN",
            "YXBJbmZvEhQKDGJsb2NrX3NpemVfeBgBIAEoBRIUCgxibG9ja19zaXplX3kY",
            "AiABKAUSFAoMYmxvY2tfc2l6ZV96GAMgASgFEhMKC2Jsb2NrX3Bvc194GAQg",
            "ASgFEhMKC2Jsb2NrX3Bvc195GAUgASgFEhMKC2Jsb2NrX3Bvc196GAYgASgF",
            "EhIKCndvcmxkX25hbWUYByABKAwSGgoSd29ybGRfbmFtZV9lbmdsaXNoGAgg",
            "ASgMEhEKCXNhdmVfbmFtZRgJIAEoDCLbAQoFQ2xvdWQSLgoFZnJvbnQYASAB",
            "KA4yHy5SZW1vdGVGb3J0cmVzc1JlYWRlci5Gcm9udFR5cGUSMgoHY3VtdWx1",
            "cxgCIAEoDjIhLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkN1bXVsdXNUeXBlEg4K",
            "BmNpcnJ1cxgDIAEoCBIyCgdzdHJhdHVzGAQgASgOMiEuUmVtb3RlRm9ydHJl",
            "c3NSZWFkZXIuU3RyYXR1c1R5cGUSKgoDZm9nGAUgASgOMh0uUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuRm9nVHlwZSLqBAoIV29ybGRNYXASEwoLd29ybGRfd2lk",
            "dGgYASACKAUSFAoMd29ybGRfaGVpZ2h0GAIgAigFEgwKBG5hbWUYAyABKAwS",
            "FAoMbmFtZV9lbmdsaXNoGAQgASgMEhEKCWVsZXZhdGlvbhgFIAMoBRIQCghy",
            "YWluZmFsbBgGIAMoBRISCgp2ZWdldGF0aW9uGAcgAygFEhMKC3RlbXBlcmF0",
            "dXJlGAggAygFEhAKCGV2aWxuZXNzGAkgAygFEhAKCGRyYWluYWdlGAogAygF",
            "EhEKCXZvbGNhbmlzbRgLIAMoBRIQCghzYXZhZ2VyeRgMIAMoBRIrCgZjbG91",
            "ZHMYDSADKAsyGy5SZW1vdGVGb3J0cmVzc1JlYWRlci5DbG91ZBIQCghzYWxp",
            "bml0eRgOIAMoBRINCgVtYXBfeBgPIAEoBRINCgVtYXBfeRgQIAEoBRIQCghj",
            "ZW50ZXJfeBgRIAEoBRIQCghjZW50ZXJfeRgSIAEoBRIQCghjZW50ZXJfehgT",
            "IAEoBRIQCghjdXJfeWVhchgUIAEoBRIVCg1jdXJfeWVhcl90aWNrGBUgASgF",
            "EjUKC3dvcmxkX3BvbGVzGBYgASgOMiAuUmVtb3RlRm9ydHJlc3NSZWFkZXIu",
            "V29ybGRQb2xlcxI0CgtyaXZlcl90aWxlcxgXIAMoCzIfLlJlbW90ZUZvcnRy",
            "ZXNzUmVhZGVyLlJpdmVyVGlsZRIXCg93YXRlcl9lbGV2YXRpb24YGCADKAUS",
            "NgoMcmVnaW9uX3RpbGVzGBkgAygLMiAuUmVtb3RlRm9ydHJlc3NSZWFkZXIu",
            "UmVnaW9uVGlsZSJ9ChtTaXRlUmVhbGl6YXRpb25CdWlsZGluZ1dhbGwSDwoH",
            "c3RhcnRfeBgBIAEoBRIPCgdzdGFydF95GAIgASgFEg8KB3N0YXJ0X3oYAyAB",
            "KAUSDQoFZW5kX3gYBCABKAUSDQoFZW5kX3kYBSABKAUSDQoFZW5kX3oYBiAB",
            "KAUiTQocU2l0ZVJlYWxpemF0aW9uQnVpbGRpbmdUb3dlchIOCgZyb29mX3oY",
            "ASABKAUSDQoFcm91bmQYAiABKAgSDgoGZ29ibGluGAMgASgIIl8KC1RyZW5j",
            "aFNwb2tlEhMKC21vdW5kX3N0YXJ0GAEgASgFEhQKDHRyZW5jaF9zdGFydBgC",
            "IAEoBRISCgp0cmVuY2hfZW5kGAMgASgFEhEKCW1vdW5kX2VuZBgEIAEoBSJU",
            "Ch9TaXRlUmVhbGl6YXRpb25CdWlsZGluZ1RyZW5jaGVzEjEKBnNwb2tlcxgB",
            "IAMoCzIhLlJlbW90ZUZvcnRyZXNzUmVhZGVyLlRyZW5jaFNwb2tlIvoCChdT",
            "aXRlUmVhbGl6YXRpb25CdWlsZGluZxIKCgJpZBgBIAEoBRINCgVtaW5feBgD",
            "IAEoBRINCgVtaW5feRgEIAEoBRINCgVtYXhfeBgFIAEoBRINCgVtYXhfeRgG",
            "IAEoBRIvCghtYXRlcmlhbBgHIAEoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVy",
            "Lk1hdFBhaXISRAoJd2FsbF9pbmZvGAggASgLMjEuUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIuU2l0ZVJlYWxpemF0aW9uQnVpbGRpbmdXYWxsEkYKCnRvd2VyX2lu",
            "Zm8YCSABKAsyMi5SZW1vdGVGb3J0cmVzc1JlYWRlci5TaXRlUmVhbGl6YXRp",
            "b25CdWlsZGluZ1Rvd2VyEkoKC3RyZW5jaF9pbmZvGAogASgLMjUuUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuU2l0ZVJlYWxpemF0aW9uQnVpbGRpbmdUcmVuY2hl",
            "cxIMCgR0eXBlGAsgASgFIrQECgpSZWdpb25UaWxlEhEKCWVsZXZhdGlvbhgB",
            "IAEoBRIQCghyYWluZmFsbBgCIAEoBRISCgp2ZWdldGF0aW9uGAMgASgFEhMK",
            "C3RlbXBlcmF0dXJlGAQgASgFEhAKCGV2aWxuZXNzGAUgASgFEhAKCGRyYWlu",
            "YWdlGAYgASgFEhEKCXZvbGNhbmlzbRgHIAEoBRIQCghzYXZhZ2VyeRgIIAEo",
            "BRIQCghzYWxpbml0eRgJIAEoBRI0CgtyaXZlcl90aWxlcxgKIAEoCzIfLlJl",
            "bW90ZUZvcnRyZXNzUmVhZGVyLlJpdmVyVGlsZRIXCg93YXRlcl9lbGV2YXRp",
            "b24YCyABKAUSNwoQc3VyZmFjZV9tYXRlcmlhbBgMIAEoCzIdLlJlbW90ZUZv",
            "cnRyZXNzUmVhZGVyLk1hdFBhaXISNgoPcGxhbnRfbWF0ZXJpYWxzGA0gAygL",
            "Mh0uUmVtb3RlRm9ydHJlc3NSZWFkZXIuTWF0UGFpchJACglidWlsZGluZ3MY",
            "DiADKAsyLS5SZW1vdGVGb3J0cmVzc1JlYWRlci5TaXRlUmVhbGl6YXRpb25C",
            "dWlsZGluZxI2Cg9zdG9uZV9tYXRlcmlhbHMYDyADKAsyHS5SZW1vdGVGb3J0",
            "cmVzc1JlYWRlci5NYXRQYWlyEjUKDnRyZWVfbWF0ZXJpYWxzGBAgAygLMh0u",
            "UmVtb3RlRm9ydHJlc3NSZWFkZXIuTWF0UGFpchIMCgRzbm93GBEgASgFIn4K",
            "CVJlZ2lvbk1hcBINCgVtYXBfeBgBIAEoBRINCgVtYXBfeRgCIAEoBRIMCgRu",
            "YW1lGAMgASgMEhQKDG5hbWVfZW5nbGlzaBgEIAEoDBIvCgV0aWxlcxgFIAMo",
            "CzIgLlJlbW90ZUZvcnRyZXNzUmVhZGVyLlJlZ2lvblRpbGUidgoKUmVnaW9u",
            "TWFwcxIyCgp3b3JsZF9tYXBzGAEgAygLMh4uUmVtb3RlRm9ydHJlc3NSZWFk",
            "ZXIuV29ybGRNYXASNAoLcmVnaW9uX21hcHMYAiADKAsyHy5SZW1vdGVGb3J0",
            "cmVzc1JlYWRlci5SZWdpb25NYXAiigEKEVBhdHRlcm5EZXNjcmlwdG9yEgoK",
            "AmlkGAEgASgMEjUKBmNvbG9ycxgCIAMoCzIlLlJlbW90ZUZvcnRyZXNzUmVh",
            "ZGVyLkNvbG9yRGVmaW5pdGlvbhIyCgdwYXR0ZXJuGAMgASgOMiEuUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuUGF0dGVyblR5cGUisAEKEENvbG9yTW9kaWZpZXJS",
            "YXcSOQoIcGF0dGVybnMYASADKAsyJy5SZW1vdGVGb3J0cmVzc1JlYWRlci5Q",
            "YXR0ZXJuRGVzY3JpcHRvchIUCgxib2R5X3BhcnRfaWQYAiADKAUSFwoPdGlz",
            "c3VlX2xheWVyX2lkGAMgAygFEhIKCnN0YXJ0X2RhdGUYBCABKAUSEAoIZW5k",
            "X2RhdGUYBSABKAUSDAoEcGFydBgGIAEoDCJkChBCb2R5UGFydExheWVyUmF3",
            "EhIKCmxheWVyX25hbWUYASABKAwSEQoJdGlzc3VlX2lkGAIgASgFEhMKC2xh",
            "eWVyX2RlcHRoGAMgASgFEhQKDGJwX21vZGlmaWVycxgEIAMoBSKWAQoLQm9k",
            "eVBhcnRSYXcSDQoFdG9rZW4YASABKAwSEAoIY2F0ZWdvcnkYAiABKAwSDgoG",
            "cGFyZW50GAMgASgFEg0KBWZsYWdzGAQgAygIEjYKBmxheWVycxgFIAMoCzIm",
            "LlJlbW90ZUZvcnRyZXNzUmVhZGVyLkJvZHlQYXJ0TGF5ZXJSYXcSDwoHcmVs",
            "c2l6ZRgGIAEoBSJGChRCcEFwcGVhcmFuY2VNb2RpZmllchIMCgR0eXBlGAEg",
            "ASgMEg8KB21vZF9taW4YAiABKAUSDwoHbW9kX21heBgDIAEoBSJ1CglUaXNz",
            "dWVSYXcSCgoCaWQYASABKAwSDAoEbmFtZRgCIAEoDBIvCghtYXRlcmlhbBgD",
            "IAEoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXISHQoVc3Vib3Jk",
            "aW5hdGVfdG9fdGlzc3VlGAQgASgMIvcDCghDYXN0ZVJhdxINCgVpbmRleBgB",
            "IAEoBRIQCghjYXN0ZV9pZBgCIAEoDBISCgpjYXN0ZV9uYW1lGAMgAygMEhEK",
            "CWJhYnlfbmFtZRgEIAMoDBISCgpjaGlsZF9uYW1lGAUgAygMEg4KBmdlbmRl",
            "chgGIAEoBRI1Cgpib2R5X3BhcnRzGAcgAygLMiEuUmVtb3RlRm9ydHJlc3NS",
            "ZWFkZXIuQm9keVBhcnRSYXcSFQoNdG90YWxfcmVsc2l6ZRgIIAEoBRI9Cglt",
            "b2RpZmllcnMYCSADKAsyKi5SZW1vdGVGb3J0cmVzc1JlYWRlci5CcEFwcGVh",
            "cmFuY2VNb2RpZmllchIUCgxtb2RpZmllcl9pZHgYCiADKAUSEAoIcGFydF9p",
            "ZHgYCyADKAUSEQoJbGF5ZXJfaWR4GAwgAygFEk0KGWJvZHlfYXBwZWFyYW5j",
            "ZV9tb2RpZmllcnMYDSADKAsyKi5SZW1vdGVGb3J0cmVzc1JlYWRlci5CcEFw",
            "cGVhcmFuY2VNb2RpZmllchI/Cg9jb2xvcl9tb2RpZmllcnMYDiADKAsyJi5S",
            "ZW1vdGVGb3J0cmVzc1JlYWRlci5Db2xvck1vZGlmaWVyUmF3EhMKC2Rlc2Ny",
            "aXB0aW9uGA8gASgMEhIKCmFkdWx0X3NpemUYECABKAUi5QIKC0NyZWF0dXJl",
            "UmF3Eg0KBWluZGV4GAEgASgFEhMKC2NyZWF0dXJlX2lkGAIgASgMEgwKBG5h",
            "bWUYAyADKAwSGQoRZ2VuZXJhbF9iYWJ5X25hbWUYBCADKAwSGgoSZ2VuZXJh",
            "bF9jaGlsZF9uYW1lGAUgAygMEhUKDWNyZWF0dXJlX3RpbGUYBiABKAUSHQoV",
            "Y3JlYXR1cmVfc29sZGllcl90aWxlGAcgASgFEjQKBWNvbG9yGAggASgLMiUu",
            "UmVtb3RlRm9ydHJlc3NSZWFkZXIuQ29sb3JEZWZpbml0aW9uEhEKCWFkdWx0",
            "c2l6ZRgJIAEoBRItCgVjYXN0ZRgKIAMoCzIeLlJlbW90ZUZvcnRyZXNzUmVh",
            "ZGVyLkNhc3RlUmF3EjAKB3Rpc3N1ZXMYCyADKAsyHy5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5UaXNzdWVSYXcSDQoFZmxhZ3MYDCADKAgiSwoPQ3JlYXR1cmVS",
            "YXdMaXN0EjgKDWNyZWF0dXJlX3Jhd3MYASADKAsyIS5SZW1vdGVGb3J0cmVz",
            "c1JlYWRlci5DcmVhdHVyZVJhdyK7AQoEQXJteRIKCgJpZBgBIAEoBRINCgVw",
            "b3NfeBgCIAEoBRINCgVwb3NfeRgDIAEoBRINCgVwb3NfehgEIAEoBRI0CgZs",
            "ZWFkZXIYBSABKAsyJC5SZW1vdGVGb3J0cmVzc1JlYWRlci5Vbml0RGVmaW5p",
            "dGlvbhI1CgdtZW1iZXJzGAYgAygLMiQuUmVtb3RlRm9ydHJlc3NSZWFkZXIu",
            "VW5pdERlZmluaXRpb24SDQoFZmxhZ3MYByABKA0iNgoIQXJteUxpc3QSKgoG",
            "YXJtaWVzGAEgAygLMhouUmVtb3RlRm9ydHJlc3NSZWFkZXIuQXJteSJmCgtH",
            "cm93dGhQcmludBIQCghwcmlvcml0eRgBIAEoBRINCgVjb2xvchgCIAEoBRIU",
            "Cgx0aW1pbmdfc3RhcnQYAyABKAUSEgoKdGltaW5nX2VuZBgEIAEoBRIMCgR0",
            "aWxlGAUgASgFIu8CCgpUcmVlR3Jvd3RoEg0KBWluZGV4GAEgASgFEgoKAmlk",
            "GAIgASgMEgwKBG5hbWUYAyABKAwSKgoDbWF0GAQgASgLMh0uUmVtb3RlRm9y",
            "dHJlc3NSZWFkZXIuTWF0UGFpchIxCgZwcmludHMYBSADKAsyIS5SZW1vdGVG",
            "b3J0cmVzc1JlYWRlci5Hcm93dGhQcmludBIUCgx0aW1pbmdfc3RhcnQYBiAB",
            "KAUSEgoKdGltaW5nX2VuZBgHIAEoBRINCgV0d2lncxgIIAEoCBIWCg5saWdo",
            "dF9icmFuY2hlcxgJIAEoCBIWCg5oZWF2eV9icmFuY2hlcxgKIAEoCBINCgV0",
            "cnVuaxgLIAEoCBINCgVyb290cxgMIAEoCBILCgNjYXAYDSABKAgSDwoHc2Fw",
            "bGluZxgOIAEoCBIaChJ0cnVua19oZWlnaHRfc3RhcnQYDyABKAUSGAoQdHJ1",
            "bmtfaGVpZ2h0X2VuZBgQIAEoBSJ0CghQbGFudFJhdxINCgVpbmRleBgBIAEo",
            "BRIKCgJpZBgCIAEoDBIMCgRuYW1lGAMgASgMEjEKB2dyb3d0aHMYBCADKAsy",
            "IC5SZW1vdGVGb3J0cmVzc1JlYWRlci5UcmVlR3Jvd3RoEgwKBHRpbGUYBSAB",
            "KAUiQgoMUGxhbnRSYXdMaXN0EjIKCnBsYW50X3Jhd3MYASADKAsyHi5SZW1v",
            "dGVGb3J0cmVzc1JlYWRlci5QbGFudFJhdyJHCgpTY3JlZW5UaWxlEhEKCWNo",
            "YXJhY3RlchgBIAEoDRISCgpmb3JlZ3JvdW5kGAIgASgNEhIKCmJhY2tncm91",
            "bmQYAyABKA0iXwoNU2NyZWVuQ2FwdHVyZRINCgV3aWR0aBgBIAEoDRIOCgZo",
            "ZWlnaHQYAiABKA0SLwoFdGlsZXMYAyADKAsyIC5SZW1vdGVGb3J0cmVzc1Jl",
            "YWRlci5TY3JlZW5UaWxlIngKDUtleWJvYXJkRXZlbnQSDAoEdHlwZRgBIAEo",
            "DRINCgV3aGljaBgCIAEoDRINCgVzdGF0ZRgDIAEoDRIQCghzY2FuY29kZRgE",
            "IAEoDRILCgNzeW0YBSABKA0SCwoDbW9kGAYgASgNEg8KB3VuaWNvZGUYByAB",
            "KA0iewoKRGlnQ29tbWFuZBI9CgtkZXNpZ25hdGlvbhgBIAEoDjIoLlJlbW90",
            "ZUZvcnRyZXNzUmVhZGVyLlRpbGVEaWdEZXNpZ25hdGlvbhIuCglsb2NhdGlv",
            "bnMYAiADKAsyGy5SZW1vdGVGb3J0cmVzc1JlYWRlci5Db29yZCIbCgpTaW5n",
            "bGVCb29sEg0KBVZhbHVlGAEgASgIIm0KC1ZlcnNpb25JbmZvEh4KFmR3YXJm",
            "X2ZvcnRyZXNzX3ZlcnNpb24YASABKAwSFgoOZGZoYWNrX3ZlcnNpb24YAiAB",
            "KAwSJgoecmVtb3RlX2ZvcnRyZXNzX3JlYWRlcl92ZXJzaW9uGAMgASgMIjMK",
            "C0xpc3RSZXF1ZXN0EhIKCmxpc3Rfc3RhcnQYASABKAUSEAoIbGlzdF9lbmQY",
            "AiABKAUilQIKBlJlcG9ydBIMCgR0eXBlGAEgASgFEgwKBHRleHQYAiABKAwS",
            "NAoFY29sb3IYAyABKAsyJS5SZW1vdGVGb3J0cmVzc1JlYWRlci5Db2xvckRl",
            "ZmluaXRpb24SEAoIZHVyYXRpb24YBCABKAUSFAoMY29udGludWF0aW9uGAUg",
            "ASgIEhMKC3VuY29uc2Npb3VzGAYgASgIEhQKDGFubm91bmNlbWVudBgHIAEo",
            "CBIUCgxyZXBlYXRfY291bnQYCCABKAUSKAoDcG9zGAkgASgLMhsuUmVtb3Rl",
            "Rm9ydHJlc3NSZWFkZXIuQ29vcmQSCgoCaWQYCiABKAUSDAoEeWVhchgLIAEo",
            "BRIMCgR0aW1lGAwgASgFIjcKBlN0YXR1cxItCgdyZXBvcnRzGAEgAygLMhwu",
            "UmVtb3RlRm9ydHJlc3NSZWFkZXIuUmVwb3J0IiwKEFNoYXBlRGVzY3JpcHRp",
            "b3ISCgoCaWQYASABKAwSDAoEdGlsZRgCIAEoBSJCCghMYW5ndWFnZRI2CgZz",
            "aGFwZXMYASADKAsyJi5SZW1vdGVGb3J0cmVzc1JlYWRlci5TaGFwZURlc2Ny",
            "aXB0aW9yIqUBCg9JdGVtSW1wcm92ZW1lbnQSLwoIbWF0ZXJpYWwYASABKAsy",
            "HS5SZW1vdGVGb3J0cmVzc1JlYWRlci5NYXRQYWlyEg0KBXNoYXBlGAMgASgF",
            "EhUKDXNwZWNpZmljX3R5cGUYBCABKAUSLQoFaW1hZ2UYBSABKAsyHi5SZW1v",
            "dGVGb3J0cmVzc1JlYWRlci5BcnRJbWFnZRIMCgR0eXBlGAYgASgFIswBCg9B",
            "cnRJbWFnZUVsZW1lbnQSDQoFY291bnQYASABKAUSNwoEdHlwZRgCIAEoDjIp",
            "LlJlbW90ZUZvcnRyZXNzUmVhZGVyLkFydEltYWdlRWxlbWVudFR5cGUSNAoN",
            "Y3JlYXR1cmVfaXRlbRgDIAEoCzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1h",
            "dFBhaXISLwoIbWF0ZXJpYWwYBSABKAsyHS5SZW1vdGVGb3J0cmVzc1JlYWRl",
            "ci5NYXRQYWlyEgoKAmlkGAYgASgFIp8BChBBcnRJbWFnZVByb3BlcnR5Eg8K",
            "B3N1YmplY3QYASABKAUSDgoGb2JqZWN0GAIgASgFEjAKBHZlcmIYAyABKA4y",
            "Ii5SZW1vdGVGb3J0cmVzc1JlYWRlci5BcnRJbWFnZVZlcmISOAoEdHlwZRgE",
            "IAEoDjIqLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkFydEltYWdlUHJvcGVydHlU",
            "eXBlIqoBCghBcnRJbWFnZRI3CghlbGVtZW50cxgBIAMoCzIlLlJlbW90ZUZv",
            "cnRyZXNzUmVhZGVyLkFydEltYWdlRWxlbWVudBIpCgJpZBgCIAEoCzIdLlJl",
            "bW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXISOgoKcHJvcGVydGllcxgDIAMo",
            "CzImLlJlbW90ZUZvcnRyZXNzUmVhZGVyLkFydEltYWdlUHJvcGVydHkiqAIK",
            "CUVuZ3JhdmluZxIoCgNwb3MYASABKAsyGy5SZW1vdGVGb3J0cmVzc1JlYWRl",
            "ci5Db29yZBIPCgdxdWFsaXR5GAIgASgFEgwKBHRpbGUYAyABKAUSLQoFaW1h",
            "Z2UYBCABKAsyHi5SZW1vdGVGb3J0cmVzc1JlYWRlci5BcnRJbWFnZRINCgVm",
            "bG9vchgFIAEoCBIMCgR3ZXN0GAYgASgIEgwKBGVhc3QYByABKAgSDQoFbm9y",
            "dGgYCCABKAgSDQoFc291dGgYCSABKAgSDgoGaGlkZGVuGAogASgIEhEKCW5v",
            "cnRod2VzdBgLIAEoCBIRCglub3J0aGVhc3QYDCABKAgSEQoJc291dGh3ZXN0",
            "GA0gASgIEhEKCXNvdXRoZWFzdBgOIAEoCCK/AgoIRmxvd0luZm8SDQoFaW5k",
            "ZXgYASABKAUSLAoEdHlwZRgCIAEoDjIeLlJlbW90ZUZvcnRyZXNzUmVhZGVy",
            "LkZsb3dUeXBlEg8KB2RlbnNpdHkYAyABKAUSKAoDcG9zGAQgASgLMhsuUmVt",
            "b3RlRm9ydHJlc3NSZWFkZXIuQ29vcmQSKQoEZGVzdBgFIAEoCzIbLlJlbW90",
            "ZUZvcnRyZXNzUmVhZGVyLkNvb3JkEhEKCWV4cGFuZGluZxgGIAEoCBINCgVy",
            "ZXVzZRgHIAEoCBIQCghndWlkZV9pZBgIIAEoBRIvCghtYXRlcmlhbBgJIAEo",
            "CzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXISKwoEaXRlbRgKIAEo",
            "CzIdLlJlbW90ZUZvcnRyZXNzUmVhZGVyLk1hdFBhaXIiWwoEV2F2ZRIpCgRk",
            "ZXN0GAEgASgLMhsuUmVtb3RlRm9ydHJlc3NSZWFkZXIuQ29vcmQSKAoDcG9z",
            "GAIgASgLMhsuUmVtb3RlRm9ydHJlc3NSZWFkZXIuQ29vcmQqugIKDVRpbGV0",
            "eXBlU2hhcGUSFQoITk9fU0hBUEUQ////////////ARIJCgVFTVBUWRAAEgkK",
            "BUZMT09SEAESCwoHQk9VTERFUhACEgsKB1BFQkJMRVMQAxIICgRXQUxMEAQS",
            "EQoNRk9SVElGSUNBVElPThAFEgwKCFNUQUlSX1VQEAYSDgoKU1RBSVJfRE9X",
            "ThAHEhAKDFNUQUlSX1VQRE9XThAIEggKBFJBTVAQCRIMCghSQU1QX1RPUBAK",
            "Eg0KCUJST09LX0JFRBALEg0KCUJST09LX1RPUBAMEg4KClRSRUVfU0hBUEUQ",
            "DRILCgdTQVBMSU5HEA4SCQoFU0hSVUIQDxIPCgtFTkRMRVNTX1BJVBAQEgoK",
            "BkJSQU5DSBAREhAKDFRSVU5LX0JSQU5DSBASEggKBFRXSUcQEyrEAQoPVGls",
            "ZXR5cGVTcGVjaWFsEhcKCk5PX1NQRUNJQUwQ////////////ARIKCgZOT1JN",
            "QUwQABIQCgxSSVZFUl9TT1VSQ0UQARINCglXQVRFUkZBTEwQAhIKCgZTTU9P",
            "VEgQAxIMCghGVVJST1dFRBAEEgcKA1dFVBAFEggKBERFQUQQBhIKCgZXT1JO",
            "XzEQBxIKCgZXT1JOXzIQCBIKCgZXT1JOXzMQCRIJCgVUUkFDSxAKEg8KC1NN",
            "T09USF9ERUFEEAsqigMKEFRpbGV0eXBlTWF0ZXJpYWwSGAoLTk9fTUFURVJJ",
            "QUwQ////////////ARIHCgNBSVIQABIICgRTT0lMEAESCQoFU1RPTkUQAhIL",
            "CgdGRUFUVVJFEAMSDgoKTEFWQV9TVE9ORRAEEgsKB01JTkVSQUwQBRIRCg1G",
            "Uk9aRU5fTElRVUlEEAYSEAoMQ09OU1RSVUNUSU9OEAcSDwoLR1JBU1NfTElH",
            "SFQQCBIOCgpHUkFTU19EQVJLEAkSDQoJR1JBU1NfRFJZEAoSDgoKR1JBU1Nf",
            "REVBRBALEgkKBVBMQU5UEAwSBwoDSEZTEA0SDAoIQ0FNUEZJUkUQDhIICgRG",
            "SVJFEA8SCQoFQVNIRVMQEBIJCgVNQUdNQRAREg0KCURSSUZUV09PRBASEggK",
            "BFBPT0wQExIJCgVCUk9PSxAUEgkKBVJJVkVSEBUSCAoEUk9PVBAWEhEKDVRS",
            "RUVfTUFURVJJQUwQFxIMCghNVVNIUk9PTRAYEhMKD1VOREVSV09STERfR0FU",
            "RRAZKlYKD1RpbGV0eXBlVmFyaWFudBIXCgpOT19WQVJJQU5UEP//////////",
            "/wESCQoFVkFSXzEQABIJCgVWQVJfMhABEgkKBVZBUl8zEAISCQoFVkFSXzQQ",
            "AypKCgpXb3JsZFBvbGVzEgwKCE5PX1BPTEVTEAASDgoKTk9SVEhfUE9MRRAB",
            "Eg4KClNPVVRIX1BPTEUQAhIOCgpCT1RIX1BPTEVTEAMqRwoRQnVpbGRpbmdE",
            "aXJlY3Rpb24SCQoFTk9SVEgQABIICgRFQVNUEAESCQoFU09VVEgQAhIICgRX",
            "RVNUEAMSCAoETk9ORRAEKo0BChJUaWxlRGlnRGVzaWduYXRpb24SCgoGTk9f",
            "RElHEAASDwoLREVGQVVMVF9ESUcQARIVChFVUF9ET1dOX1NUQUlSX0RJRxAC",
            "Eg8KC0NIQU5ORUxfRElHEAMSDAoIUkFNUF9ESUcQBBISCg5ET1dOX1NUQUlS",
            "X0RJRxAFEhAKDFVQX1NUQUlSX0RJRxAGKnUKCUhhaXJTdHlsZRIUCgdVTktF",
            "TVBUEP///////////wESEQoNTkVBVExZX0NPTUJFRBAAEgsKB0JSQUlERUQQ",
            "ARIQCgxET1VCTEVfQlJBSUQQAhIOCgpQT05ZX1RBSUxTEAMSEAoMQ0xFQU5f",
            "U0hBVkVOEAQqnAEKDUludmVudG9yeU1vZGUSCgoGSGF1bGVkEAASCgoGV2Vh",
            "cG9uEAESCAoEV29ybhACEgwKCFBpZXJjaW5nEAMSCQoFRmxhc2sQBBIRCg1X",
            "cmFwcGVkQXJvdW5kEAUSCwoHU3R1Y2tJbhAGEgsKB0luTW91dGgQBxIHCgNQ",
            "ZXQQCBIMCghTZXduSW50bxAJEgwKCFN0cmFwcGVkEAoqTwoKQXJtb3JMYXll",
            "chIPCgtMQVlFUl9VTkRFUhAAEg4KCkxBWUVSX09WRVIQARIPCgtMQVlFUl9B",
            "Uk1PUhACEg8KC0xBWUVSX0NPVkVSEAMqUQoLTWF0dGVyU3RhdGUSCQoFU29s",
            "aWQQABIKCgZMaXF1aWQQARIHCgNHYXMQAhIKCgZQb3dkZXIQAxIJCgVQYXN0",
            "ZRAEEgsKB1ByZXNzZWQQBSpPCglGcm9udFR5cGUSDgoKRlJPTlRfTk9ORRAA",
            "Eg4KCkZST05UX1dBUk0QARIOCgpGUk9OVF9DT0xEEAISEgoORlJPTlRfT0ND",
            "TFVERUQQAypaCgtDdW11bHVzVHlwZRIQCgxDVU1VTFVTX05PTkUQABISCg5D",
            "VU1VTFVTX01FRElVTRABEhEKDUNVTVVMVVNfTVVMVEkQAhISCg5DVU1VTFVT",
            "X05JTUJVUxADKlkKC1N0cmF0dXNUeXBlEhAKDFNUUkFUVVNfTk9ORRAAEhAK",
            "DFNUUkFUVVNfQUxUTxABEhIKDlNUUkFUVVNfUFJPUEVSEAISEgoOU1RSQVRV",
            "U19OSU1CVVMQAypECgdGb2dUeXBlEgwKCEZPR19OT05FEAASDAoIRk9HX01J",
            "U1QQARIOCgpGT0dfTk9STUFMEAISDQoJRjBHX1RISUNLEAMqXQoLUGF0dGVy",
            "blR5cGUSDAoITU9OT1RPTkUQABILCgdTVFJJUEVTEAESDAoISVJJU19FWUUQ",
            "AhIJCgVTUE9UUxADEg0KCVBVUElMX0VZRRAEEgsKB01PVFRMRUQQBSprChNB",
            "cnRJbWFnZUVsZW1lbnRUeXBlEhIKDklNQUdFX0NSRUFUVVJFEAASDwoLSU1B",
            "R0VfUExBTlQQARIOCgpJTUFHRV9UUkVFEAISDwoLSU1BR0VfU0hBUEUQAxIO",
            "CgpJTUFHRV9JVEVNEAQqQgoUQXJ0SW1hZ2VQcm9wZXJ0eVR5cGUSEwoPVFJB",
            "TlNJVElWRV9WRVJCEAASFQoRSU5UUkFOU0lUSVZFX1ZFUkIQASqVCAoMQXJ0",
            "SW1hZ2VWZXJiEhIKDlZFUkJfV0lUSEVSSU5HEAASFQoRVkVSQl9TVVJST1VO",
            "REVEQlkQARITCg9WRVJCX01BU1NBQ1JJTkcQAhIRCg1WRVJCX0ZJR0hUSU5H",
            "EAMSEQoNVkVSQl9MQUJPUklORxAEEhEKDVZFUkJfR1JFRVRJTkcQBRIRCg1W",
            "RVJCX1JFRlVTSU5HEAYSEQoNVkVSQl9TUEVBS0lORxAHEhIKDlZFUkJfRU1C",
            "UkFDSU5HEAgSFQoRVkVSQl9TVFJJS0lOR0RPV04QCRIVChFWRVJCX01FTkFD",
            "SU5HUE9TRRAKEhIKDlZFUkJfVFJBVkVMSU5HEAsSEAoMVkVSQl9SQUlTSU5H",
            "EAwSDwoLVkVSQl9ISURJTkcQDRIYChRWRVJCX0xPT0tJTkdDT05GVVNFRBAO",
            "EhkKFVZFUkJfTE9PS0lOR1RFUlJJRklFRBAPEhIKDlZFUkJfREVWT1VSSU5H",
            "EBASEQoNVkVSQl9BRE1JUklORxAREhAKDFZFUkJfQlVSTklORxASEhAKDFZF",
            "UkJfV0VFUElORxATEhgKFFZFUkJfTE9PS0lOR0RFSkVDVEVEEBQSEQoNVkVS",
            "Ql9DUklOR0lORxAVEhIKDlZFUkJfU0NSRUFNSU5HEBYSGgoWVkVSQl9TVUJN",
            "SVNTSVZFR0VTVFVSRRAXEhYKElZFUkJfRkVUQUxQT1NJVElPThAYEhoKFlZF",
            "UkJfU01FQVJFRElOVE9TUElSQUwQGRIQCgxWRVJCX0ZBTExJTkcQGhINCglW",
            "RVJCX0RFQUQQGxIRCg1WRVJCX0xBVUdISU5HEBwSGAoUVkVSQl9MT09LSU5H",
            "T0ZGRU5ERUQQHRISCg5WRVJCX0JFSU5HU0hPVBAeEhkKFVZFUkJfUExBSU5U",
            "SVZFR0VTVFVSRRAfEhAKDFZFUkJfTUVMVElORxAgEhEKDVZFUkJfU0hPT1RJ",
            "TkcQIRISCg5WRVJCX1RPUlRVUklORxAiEh4KGlZFUkJfQ09NTUlUVElOR0RF",
            "UFJBVkVEQUNUECMSEAoMVkVSQl9QUkFZSU5HECQSFgoSVkVSQl9DT05URU1Q",
            "TEFUSU5HECUSEAoMVkVSQl9DT09LSU5HECYSEgoOVkVSQl9FTkdSQVZJTkcQ",
            "JxIUChBWRVJCX1BST1NUUkFUSU5HECgSEgoOVkVSQl9TVUZGRVJJTkcQKRIV",
            "ChFWRVJCX0JFSU5HSU1QQUxFRBAqEhcKE1ZFUkJfQkVJTkdDT05UT1JURUQQ",
            "KxIUChBWRVJCX0JFSU5HRkxBWUVEECwSFAoQVkVSQl9IQU5HSU5HRlJPTRAt",
            "EhcKE1ZFUkJfQkVJTkdNVVRJTEFURUQQLhIXChNWRVJCX1RSSVVNUEhBTlRQ",
            "T1NFEC8q4AEKCEZsb3dUeXBlEgoKBk1pYXNtYRAAEgkKBVN0ZWFtEAESCAoE",
            "TWlzdBACEhAKDE1hdGVyaWFsRHVzdBADEg0KCU1hZ21hTWlzdBAEEgkKBVNt",
            "b2tlEAUSDgoKRHJhZ29uZmlyZRAGEggKBEZpcmUQBxIHCgNXZWIQCBIPCgtN",
            "YXRlcmlhbEdhcxAJEhEKDU1hdGVyaWFsVmFwb3IQChINCglPY2VhbldhdmUQ",
            "CxILCgdTZWFGb2FtEAwSDQoJSXRlbUNsb3VkEA0SFQoIQ2FtcEZpcmUQ////",
            "////////AUICSAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { ItemdefInstrument.ItemDefInstrumentReflection.Descriptor },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RemoteFortressReader.TiletypeShape), typeof(global::RemoteFortressReader.TiletypeSpecial), typeof(global::RemoteFortressReader.TiletypeMaterial), typeof(global::RemoteFortressReader.TiletypeVariant), typeof(global::RemoteFortressReader.WorldPoles), typeof(global::RemoteFortressReader.BuildingDirection), typeof(global::RemoteFortressReader.TileDigDesignation), typeof(global::RemoteFortressReader.HairStyle), typeof(global::RemoteFortressReader.InventoryMode), typeof(global::RemoteFortressReader.ArmorLayer), typeof(global::RemoteFortressReader.MatterState), typeof(global::RemoteFortressReader.FrontType), typeof(global::RemoteFortressReader.CumulusType), typeof(global::RemoteFortressReader.StratusType), typeof(global::RemoteFortressReader.FogType), typeof(global::RemoteFortressReader.PatternType), typeof(global::RemoteFortressReader.ArtImageElementType), typeof(global::RemoteFortressReader.ArtImagePropertyType), typeof(global::RemoteFortressReader.ArtImageVerb), typeof(global::RemoteFortressReader.FlowType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Coord), global::RemoteFortressReader.Coord.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Tiletype), global::RemoteFortressReader.Tiletype.Parser, new[]{ "Id", "Name", "Caption", "Shape", "Special", "Material", "Variant", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.TiletypeList), global::RemoteFortressReader.TiletypeList.Parser, new[]{ "TiletypeList_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingExtents), global::RemoteFortressReader.BuildingExtents.Parser, new[]{ "PosX", "PosY", "Width", "Height", "Extents" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingItem), global::RemoteFortressReader.BuildingItem.Parser, new[]{ "Item", "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingInstance), global::RemoteFortressReader.BuildingInstance.Parser, new[]{ "Index", "PosXMin", "PosYMin", "PosZMin", "PosXMax", "PosYMax", "PosZMax", "BuildingType", "Material", "BuildingFlags", "IsRoom", "Room", "Direction", "Items", "Active" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.RiverEdge), global::RemoteFortressReader.RiverEdge.Parser, new[]{ "MinPos", "MaxPos", "Active", "Elevation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.RiverTile), global::RemoteFortressReader.RiverTile.Parser, new[]{ "North", "South", "East", "West" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Spatter), global::RemoteFortressReader.Spatter.Parser, new[]{ "Material", "Amount", "State", "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SpatterPile), global::RemoteFortressReader.SpatterPile.Parser, new[]{ "Spatters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Item), global::RemoteFortressReader.Item.Parser, new[]{ "Id", "Pos", "Flags1", "Flags2", "Type", "Material", "Dye", "StackSize", "SubposX", "SubposY", "SubposZ", "Projectile", "VelocityX", "VelocityY", "VelocityZ", "Volume", "Improvements", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantTile), global::RemoteFortressReader.PlantTile.Parser, new[]{ "Trunk", "ConnectionEast", "ConnectionSouth", "ConnectionWest", "ConnectionNorth", "Branches", "Twigs", "TileType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.TreeInfo), global::RemoteFortressReader.TreeInfo.Parser, new[]{ "Size", "Tiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantInstance), global::RemoteFortressReader.PlantInstance.Parser, new[]{ "PlantType", "Pos", "TreeInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.MapBlock), global::RemoteFortressReader.MapBlock.Parser, new[]{ "MapX", "MapY", "MapZ", "Tiles", "Materials", "LayerMaterials", "VeinMaterials", "BaseMaterials", "Magma", "Water", "Hidden", "Light", "Subterranean", "Outside", "Aquifer", "WaterStagnant", "WaterSalt", "ConstructionItems", "Buildings", "TreePercent", "TreeX", "TreeY", "TreeZ", "TileDigDesignation", "SpatterPile", "Items", "TileDigDesignationMarker", "TileDigDesignationAuto", "GrassPercent", "Flows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.MatPair), global::RemoteFortressReader.MatPair.Parser, new[]{ "MatType", "MatIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ColorDefinition), global::RemoteFortressReader.ColorDefinition.Parser, new[]{ "Red", "Green", "Blue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.MaterialDefinition), global::RemoteFortressReader.MaterialDefinition.Parser, new[]{ "MatPair", "Id", "Name", "StateColor", "Instrument", "UpStep", "DownStep", "Layer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingType), global::RemoteFortressReader.BuildingType.Parser, new[]{ "BuildingType_", "BuildingSubtype", "BuildingCustom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingDefinition), global::RemoteFortressReader.BuildingDefinition.Parser, new[]{ "BuildingType", "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BuildingList), global::RemoteFortressReader.BuildingList.Parser, new[]{ "BuildingList_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.MaterialList), global::RemoteFortressReader.MaterialList.Parser, new[]{ "MaterialList_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Hair), global::RemoteFortressReader.Hair.Parser, new[]{ "Length", "Style" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BodySizeInfo), global::RemoteFortressReader.BodySizeInfo.Parser, new[]{ "SizeCur", "SizeBase", "AreaCur", "AreaBase", "LengthCur", "LengthBase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.UnitAppearance), global::RemoteFortressReader.UnitAppearance.Parser, new[]{ "BodyModifiers", "BpModifiers", "SizeModifier", "Colors", "Hair", "Beard", "Moustache", "Sideburns", "PhysicalDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.InventoryItem), global::RemoteFortressReader.InventoryItem.Parser, new[]{ "Mode", "Item", "BodyPartId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.WoundPart), global::RemoteFortressReader.WoundPart.Parser, new[]{ "GlobalLayerIdx", "BodyPartId", "LayerIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.UnitWound), global::RemoteFortressReader.UnitWound.Parser, new[]{ "Parts", "SeveredPart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.UnitDefinition), global::RemoteFortressReader.UnitDefinition.Parser, new[]{ "Id", "IsValid", "PosX", "PosY", "PosZ", "Race", "ProfessionColor", "Flags1", "Flags2", "Flags3", "IsSoldier", "SizeInfo", "Name", "BloodMax", "BloodCount", "Appearance", "ProfessionId", "NoblePositions", "RiderId", "Inventory", "SubposX", "SubposY", "SubposZ", "Facing", "Age", "Wounds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.UnitList), global::RemoteFortressReader.UnitList.Parser, new[]{ "CreatureList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BlockRequest), global::RemoteFortressReader.BlockRequest.Parser, new[]{ "BlocksNeeded", "MinX", "MaxX", "MinY", "MaxY", "MinZ", "MaxZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BlockList), global::RemoteFortressReader.BlockList.Parser, new[]{ "MapBlocks", "MapX", "MapY", "Engravings", "OceanWaves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantDef), global::RemoteFortressReader.PlantDef.Parser, new[]{ "PosX", "PosY", "PosZ", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantList), global::RemoteFortressReader.PlantList.Parser, new[]{ "PlantList_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ViewInfo), global::RemoteFortressReader.ViewInfo.Parser, new[]{ "ViewPosX", "ViewPosY", "ViewPosZ", "ViewSizeX", "ViewSizeY", "CursorPosX", "CursorPosY", "CursorPosZ", "FollowUnitId", "FollowItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.MapInfo), global::RemoteFortressReader.MapInfo.Parser, new[]{ "BlockSizeX", "BlockSizeY", "BlockSizeZ", "BlockPosX", "BlockPosY", "BlockPosZ", "WorldName", "WorldNameEnglish", "SaveName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Cloud), global::RemoteFortressReader.Cloud.Parser, new[]{ "Front", "Cumulus", "Cirrus", "Stratus", "Fog" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.WorldMap), global::RemoteFortressReader.WorldMap.Parser, new[]{ "WorldWidth", "WorldHeight", "Name", "NameEnglish", "Elevation", "Rainfall", "Vegetation", "Temperature", "Evilness", "Drainage", "Volcanism", "Savagery", "Clouds", "Salinity", "MapX", "MapY", "CenterX", "CenterY", "CenterZ", "CurYear", "CurYearTick", "WorldPoles", "RiverTiles", "WaterElevation", "RegionTiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SiteRealizationBuildingWall), global::RemoteFortressReader.SiteRealizationBuildingWall.Parser, new[]{ "StartX", "StartY", "StartZ", "EndX", "EndY", "EndZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SiteRealizationBuildingTower), global::RemoteFortressReader.SiteRealizationBuildingTower.Parser, new[]{ "RoofZ", "Round", "Goblin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.TrenchSpoke), global::RemoteFortressReader.TrenchSpoke.Parser, new[]{ "MoundStart", "TrenchStart", "TrenchEnd", "MoundEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SiteRealizationBuildingTrenches), global::RemoteFortressReader.SiteRealizationBuildingTrenches.Parser, new[]{ "Spokes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SiteRealizationBuilding), global::RemoteFortressReader.SiteRealizationBuilding.Parser, new[]{ "Id", "MinX", "MinY", "MaxX", "MaxY", "Material", "WallInfo", "TowerInfo", "TrenchInfo", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.RegionTile), global::RemoteFortressReader.RegionTile.Parser, new[]{ "Elevation", "Rainfall", "Vegetation", "Temperature", "Evilness", "Drainage", "Volcanism", "Savagery", "Salinity", "RiverTiles", "WaterElevation", "SurfaceMaterial", "PlantMaterials", "Buildings", "StoneMaterials", "TreeMaterials", "Snow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.RegionMap), global::RemoteFortressReader.RegionMap.Parser, new[]{ "MapX", "MapY", "Name", "NameEnglish", "Tiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.RegionMaps), global::RemoteFortressReader.RegionMaps.Parser, new[]{ "WorldMaps", "RegionMaps_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PatternDescriptor), global::RemoteFortressReader.PatternDescriptor.Parser, new[]{ "Id", "Colors", "Pattern" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ColorModifierRaw), global::RemoteFortressReader.ColorModifierRaw.Parser, new[]{ "Patterns", "BodyPartId", "TissueLayerId", "StartDate", "EndDate", "Part" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BodyPartLayerRaw), global::RemoteFortressReader.BodyPartLayerRaw.Parser, new[]{ "LayerName", "TissueId", "LayerDepth", "BpModifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BodyPartRaw), global::RemoteFortressReader.BodyPartRaw.Parser, new[]{ "Token", "Category", "Parent", "Flags", "Layers", "Relsize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.BpAppearanceModifier), global::RemoteFortressReader.BpAppearanceModifier.Parser, new[]{ "Type", "ModMin", "ModMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.TissueRaw), global::RemoteFortressReader.TissueRaw.Parser, new[]{ "Id", "Name", "Material", "SubordinateToTissue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.CasteRaw), global::RemoteFortressReader.CasteRaw.Parser, new[]{ "Index", "CasteId", "CasteName", "BabyName", "ChildName", "Gender", "BodyParts", "TotalRelsize", "Modifiers", "ModifierIdx", "PartIdx", "LayerIdx", "BodyAppearanceModifiers", "ColorModifiers", "Description", "AdultSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.CreatureRaw), global::RemoteFortressReader.CreatureRaw.Parser, new[]{ "Index", "CreatureId", "Name", "GeneralBabyName", "GeneralChildName", "CreatureTile", "CreatureSoldierTile", "Color", "Adultsize", "Caste", "Tissues", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.CreatureRawList), global::RemoteFortressReader.CreatureRawList.Parser, new[]{ "CreatureRaws" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Army), global::RemoteFortressReader.Army.Parser, new[]{ "Id", "PosX", "PosY", "PosZ", "Leader", "Members", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ArmyList), global::RemoteFortressReader.ArmyList.Parser, new[]{ "Armies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.GrowthPrint), global::RemoteFortressReader.GrowthPrint.Parser, new[]{ "Priority", "Color", "TimingStart", "TimingEnd", "Tile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.TreeGrowth), global::RemoteFortressReader.TreeGrowth.Parser, new[]{ "Index", "Id", "Name", "Mat", "Prints", "TimingStart", "TimingEnd", "Twigs", "LightBranches", "HeavyBranches", "Trunk", "Roots", "Cap", "Sapling", "TrunkHeightStart", "TrunkHeightEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantRaw), global::RemoteFortressReader.PlantRaw.Parser, new[]{ "Index", "Id", "Name", "Growths", "Tile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.PlantRawList), global::RemoteFortressReader.PlantRawList.Parser, new[]{ "PlantRaws" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ScreenTile), global::RemoteFortressReader.ScreenTile.Parser, new[]{ "Character", "Foreground", "Background" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ScreenCapture), global::RemoteFortressReader.ScreenCapture.Parser, new[]{ "Width", "Height", "Tiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.KeyboardEvent), global::RemoteFortressReader.KeyboardEvent.Parser, new[]{ "Type", "Which", "State", "Scancode", "Sym", "Mod", "Unicode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.DigCommand), global::RemoteFortressReader.DigCommand.Parser, new[]{ "Designation", "Locations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.SingleBool), global::RemoteFortressReader.SingleBool.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.VersionInfo), global::RemoteFortressReader.VersionInfo.Parser, new[]{ "DwarfFortressVersion", "DfhackVersion", "RemoteFortressReaderVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ListRequest), global::RemoteFortressReader.ListRequest.Parser, new[]{ "ListStart", "ListEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Report), global::RemoteFortressReader.Report.Parser, new[]{ "Type", "Text", "Color", "Duration", "Continuation", "Unconscious", "Announcement", "RepeatCount", "Pos", "Id", "Year", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Status), global::RemoteFortressReader.Status.Parser, new[]{ "Reports" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ShapeDescriptior), global::RemoteFortressReader.ShapeDescriptior.Parser, new[]{ "Id", "Tile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Language), global::RemoteFortressReader.Language.Parser, new[]{ "Shapes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ItemImprovement), global::RemoteFortressReader.ItemImprovement.Parser, new[]{ "Material", "Shape", "SpecificType", "Image", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ArtImageElement), global::RemoteFortressReader.ArtImageElement.Parser, new[]{ "Count", "Type", "CreatureItem", "Material", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ArtImageProperty), global::RemoteFortressReader.ArtImageProperty.Parser, new[]{ "Subject", "Object", "Verb", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.ArtImage), global::RemoteFortressReader.ArtImage.Parser, new[]{ "Elements", "Id", "Properties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Engraving), global::RemoteFortressReader.Engraving.Parser, new[]{ "Pos", "Quality", "Tile", "Image", "Floor", "West", "East", "North", "South", "Hidden", "Northwest", "Northeast", "Southwest", "Southeast" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.FlowInfo), global::RemoteFortressReader.FlowInfo.Parser, new[]{ "Index", "Type", "Density", "Pos", "Dest", "Expanding", "Reuse", "GuideId", "Material", "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteFortressReader.Wave), global::RemoteFortressReader.Wave.Parser, new[]{ "Dest", "Pos" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///We use shapes, etc, because the actual tiletypes may differ between DF versions.
  /// </summary>
  public enum TiletypeShape {
    [pbr::OriginalName("NO_SHAPE")] NoShape = -1,
    [pbr::OriginalName("EMPTY")] Empty = 0,
    [pbr::OriginalName("FLOOR")] Floor = 1,
    [pbr::OriginalName("BOULDER")] Boulder = 2,
    [pbr::OriginalName("PEBBLES")] Pebbles = 3,
    [pbr::OriginalName("WALL")] Wall = 4,
    [pbr::OriginalName("FORTIFICATION")] Fortification = 5,
    [pbr::OriginalName("STAIR_UP")] StairUp = 6,
    [pbr::OriginalName("STAIR_DOWN")] StairDown = 7,
    [pbr::OriginalName("STAIR_UPDOWN")] StairUpdown = 8,
    [pbr::OriginalName("RAMP")] Ramp = 9,
    [pbr::OriginalName("RAMP_TOP")] RampTop = 10,
    [pbr::OriginalName("BROOK_BED")] BrookBed = 11,
    [pbr::OriginalName("BROOK_TOP")] BrookTop = 12,
    [pbr::OriginalName("TREE_SHAPE")] TreeShape = 13,
    [pbr::OriginalName("SAPLING")] Sapling = 14,
    [pbr::OriginalName("SHRUB")] Shrub = 15,
    [pbr::OriginalName("ENDLESS_PIT")] EndlessPit = 16,
    [pbr::OriginalName("BRANCH")] Branch = 17,
    [pbr::OriginalName("TRUNK_BRANCH")] TrunkBranch = 18,
    [pbr::OriginalName("TWIG")] Twig = 19,
  }

  public enum TiletypeSpecial {
    [pbr::OriginalName("NO_SPECIAL")] NoSpecial = -1,
    [pbr::OriginalName("NORMAL")] Normal = 0,
    [pbr::OriginalName("RIVER_SOURCE")] RiverSource = 1,
    [pbr::OriginalName("WATERFALL")] Waterfall = 2,
    [pbr::OriginalName("SMOOTH")] Smooth = 3,
    [pbr::OriginalName("FURROWED")] Furrowed = 4,
    [pbr::OriginalName("WET")] Wet = 5,
    [pbr::OriginalName("DEAD")] Dead = 6,
    [pbr::OriginalName("WORN_1")] Worn1 = 7,
    [pbr::OriginalName("WORN_2")] Worn2 = 8,
    [pbr::OriginalName("WORN_3")] Worn3 = 9,
    [pbr::OriginalName("TRACK")] Track = 10,
    [pbr::OriginalName("SMOOTH_DEAD")] SmoothDead = 11,
  }

  public enum TiletypeMaterial {
    [pbr::OriginalName("NO_MATERIAL")] NoMaterial = -1,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("AIR")] Air = 0,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("SOIL")] Soil = 1,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("STONE")] Stone = 2,
    /// <summary>
    ///ok-ish
    /// </summary>
    [pbr::OriginalName("FEATURE")] Feature = 3,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("LAVA_STONE")] LavaStone = 4,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("MINERAL")] Mineral = 5,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("FROZEN_LIQUID")] FrozenLiquid = 6,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("CONSTRUCTION")] Construction = 7,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("GRASS_LIGHT")] GrassLight = 8,
    /// <summary>
    ///ok
    /// </summary>
    [pbr::OriginalName("GRASS_DARK")] GrassDark = 9,
    [pbr::OriginalName("GRASS_DRY")] GrassDry = 10,
    [pbr::OriginalName("GRASS_DEAD")] GrassDead = 11,
    [pbr::OriginalName("PLANT")] Plant = 12,
    [pbr::OriginalName("HFS")] Hfs = 13,
    [pbr::OriginalName("CAMPFIRE")] Campfire = 14,
    [pbr::OriginalName("FIRE")] Fire = 15,
    [pbr::OriginalName("ASHES")] Ashes = 16,
    [pbr::OriginalName("MAGMA")] Magma = 17,
    [pbr::OriginalName("DRIFTWOOD")] Driftwood = 18,
    [pbr::OriginalName("POOL")] Pool = 19,
    [pbr::OriginalName("BROOK")] Brook = 20,
    [pbr::OriginalName("RIVER")] River = 21,
    [pbr::OriginalName("ROOT")] Root = 22,
    [pbr::OriginalName("TREE_MATERIAL")] TreeMaterial = 23,
    [pbr::OriginalName("MUSHROOM")] Mushroom = 24,
    [pbr::OriginalName("UNDERWORLD_GATE")] UnderworldGate = 25,
  }

  public enum TiletypeVariant {
    [pbr::OriginalName("NO_VARIANT")] NoVariant = -1,
    [pbr::OriginalName("VAR_1")] Var1 = 0,
    [pbr::OriginalName("VAR_2")] Var2 = 1,
    [pbr::OriginalName("VAR_3")] Var3 = 2,
    [pbr::OriginalName("VAR_4")] Var4 = 3,
  }

  public enum WorldPoles {
    [pbr::OriginalName("NO_POLES")] NoPoles = 0,
    [pbr::OriginalName("NORTH_POLE")] NorthPole = 1,
    [pbr::OriginalName("SOUTH_POLE")] SouthPole = 2,
    [pbr::OriginalName("BOTH_POLES")] BothPoles = 3,
  }

  public enum BuildingDirection {
    [pbr::OriginalName("NORTH")] North = 0,
    [pbr::OriginalName("EAST")] East = 1,
    [pbr::OriginalName("SOUTH")] South = 2,
    [pbr::OriginalName("WEST")] West = 3,
    [pbr::OriginalName("NONE")] None = 4,
  }

  public enum TileDigDesignation {
    /// <summary>
    ///*
    /// no designation
    /// </summary>
    [pbr::OriginalName("NO_DIG")] NoDig = 0,
    /// <summary>
    ///*
    /// dig walls, remove stairs and ramps, gather plants, fell trees
    /// </summary>
    [pbr::OriginalName("DEFAULT_DIG")] DefaultDig = 1,
    [pbr::OriginalName("UP_DOWN_STAIR_DIG")] UpDownStairDig = 2,
    [pbr::OriginalName("CHANNEL_DIG")] ChannelDig = 3,
    [pbr::OriginalName("RAMP_DIG")] RampDig = 4,
    [pbr::OriginalName("DOWN_STAIR_DIG")] DownStairDig = 5,
    [pbr::OriginalName("UP_STAIR_DIG")] UpStairDig = 6,
  }

  public enum HairStyle {
    [pbr::OriginalName("UNKEMPT")] Unkempt = -1,
    [pbr::OriginalName("NEATLY_COMBED")] NeatlyCombed = 0,
    [pbr::OriginalName("BRAIDED")] Braided = 1,
    [pbr::OriginalName("DOUBLE_BRAID")] DoubleBraid = 2,
    [pbr::OriginalName("PONY_TAILS")] PonyTails = 3,
    [pbr::OriginalName("CLEAN_SHAVEN")] CleanShaven = 4,
  }

  public enum InventoryMode {
    [pbr::OriginalName("Hauled")] Hauled = 0,
    /// <summary>
    ///*
    /// also shield, crutch
    /// </summary>
    [pbr::OriginalName("Weapon")] Weapon = 1,
    /// <summary>
    ///*
    /// quiver
    /// </summary>
    [pbr::OriginalName("Worn")] Worn = 2,
    [pbr::OriginalName("Piercing")] Piercing = 3,
    /// <summary>
    ///*
    /// attached to clothing
    /// </summary>
    [pbr::OriginalName("Flask")] Flask = 4,
    /// <summary>
    ///*
    /// e.g. bandage
    /// </summary>
    [pbr::OriginalName("WrappedAround")] WrappedAround = 5,
    [pbr::OriginalName("StuckIn")] StuckIn = 6,
    /// <summary>
    ///*
    /// string descr like Worn
    /// </summary>
    [pbr::OriginalName("InMouth")] InMouth = 7,
    /// <summary>
    ///*
    /// Left shoulder, right shoulder, or head, selected randomly using pet_seed
    /// </summary>
    [pbr::OriginalName("Pet")] Pet = 8,
    [pbr::OriginalName("SewnInto")] SewnInto = 9,
    [pbr::OriginalName("Strapped")] Strapped = 10,
  }

  public enum ArmorLayer {
    [pbr::OriginalName("LAYER_UNDER")] LayerUnder = 0,
    [pbr::OriginalName("LAYER_OVER")] LayerOver = 1,
    [pbr::OriginalName("LAYER_ARMOR")] LayerArmor = 2,
    [pbr::OriginalName("LAYER_COVER")] LayerCover = 3,
  }

  public enum MatterState {
    [pbr::OriginalName("Solid")] Solid = 0,
    [pbr::OriginalName("Liquid")] Liquid = 1,
    [pbr::OriginalName("Gas")] Gas = 2,
    [pbr::OriginalName("Powder")] Powder = 3,
    [pbr::OriginalName("Paste")] Paste = 4,
    [pbr::OriginalName("Pressed")] Pressed = 5,
  }

  public enum FrontType {
    [pbr::OriginalName("FRONT_NONE")] FrontNone = 0,
    [pbr::OriginalName("FRONT_WARM")] FrontWarm = 1,
    [pbr::OriginalName("FRONT_COLD")] FrontCold = 2,
    [pbr::OriginalName("FRONT_OCCLUDED")] FrontOccluded = 3,
  }

  public enum CumulusType {
    [pbr::OriginalName("CUMULUS_NONE")] CumulusNone = 0,
    [pbr::OriginalName("CUMULUS_MEDIUM")] CumulusMedium = 1,
    [pbr::OriginalName("CUMULUS_MULTI")] CumulusMulti = 2,
    [pbr::OriginalName("CUMULUS_NIMBUS")] CumulusNimbus = 3,
  }

  public enum StratusType {
    [pbr::OriginalName("STRATUS_NONE")] StratusNone = 0,
    [pbr::OriginalName("STRATUS_ALTO")] StratusAlto = 1,
    [pbr::OriginalName("STRATUS_PROPER")] StratusProper = 2,
    [pbr::OriginalName("STRATUS_NIMBUS")] StratusNimbus = 3,
  }

  public enum FogType {
    [pbr::OriginalName("FOG_NONE")] FogNone = 0,
    [pbr::OriginalName("FOG_MIST")] FogMist = 1,
    [pbr::OriginalName("FOG_NORMAL")] FogNormal = 2,
    [pbr::OriginalName("F0G_THICK")] F0GThick = 3,
  }

  public enum PatternType {
    [pbr::OriginalName("MONOTONE")] Monotone = 0,
    [pbr::OriginalName("STRIPES")] Stripes = 1,
    [pbr::OriginalName("IRIS_EYE")] IrisEye = 2,
    [pbr::OriginalName("SPOTS")] Spots = 3,
    [pbr::OriginalName("PUPIL_EYE")] PupilEye = 4,
    [pbr::OriginalName("MOTTLED")] Mottled = 5,
  }

  public enum ArtImageElementType {
    [pbr::OriginalName("IMAGE_CREATURE")] ImageCreature = 0,
    [pbr::OriginalName("IMAGE_PLANT")] ImagePlant = 1,
    [pbr::OriginalName("IMAGE_TREE")] ImageTree = 2,
    [pbr::OriginalName("IMAGE_SHAPE")] ImageShape = 3,
    [pbr::OriginalName("IMAGE_ITEM")] ImageItem = 4,
  }

  public enum ArtImagePropertyType {
    [pbr::OriginalName("TRANSITIVE_VERB")] TransitiveVerb = 0,
    [pbr::OriginalName("INTRANSITIVE_VERB")] IntransitiveVerb = 1,
  }

  public enum ArtImageVerb {
    [pbr::OriginalName("VERB_WITHERING")] VerbWithering = 0,
    [pbr::OriginalName("VERB_SURROUNDEDBY")] VerbSurroundedby = 1,
    [pbr::OriginalName("VERB_MASSACRING")] VerbMassacring = 2,
    [pbr::OriginalName("VERB_FIGHTING")] VerbFighting = 3,
    [pbr::OriginalName("VERB_LABORING")] VerbLaboring = 4,
    [pbr::OriginalName("VERB_GREETING")] VerbGreeting = 5,
    [pbr::OriginalName("VERB_REFUSING")] VerbRefusing = 6,
    [pbr::OriginalName("VERB_SPEAKING")] VerbSpeaking = 7,
    [pbr::OriginalName("VERB_EMBRACING")] VerbEmbracing = 8,
    [pbr::OriginalName("VERB_STRIKINGDOWN")] VerbStrikingdown = 9,
    [pbr::OriginalName("VERB_MENACINGPOSE")] VerbMenacingpose = 10,
    [pbr::OriginalName("VERB_TRAVELING")] VerbTraveling = 11,
    [pbr::OriginalName("VERB_RAISING")] VerbRaising = 12,
    [pbr::OriginalName("VERB_HIDING")] VerbHiding = 13,
    [pbr::OriginalName("VERB_LOOKINGCONFUSED")] VerbLookingconfused = 14,
    [pbr::OriginalName("VERB_LOOKINGTERRIFIED")] VerbLookingterrified = 15,
    [pbr::OriginalName("VERB_DEVOURING")] VerbDevouring = 16,
    [pbr::OriginalName("VERB_ADMIRING")] VerbAdmiring = 17,
    [pbr::OriginalName("VERB_BURNING")] VerbBurning = 18,
    [pbr::OriginalName("VERB_WEEPING")] VerbWeeping = 19,
    [pbr::OriginalName("VERB_LOOKINGDEJECTED")] VerbLookingdejected = 20,
    [pbr::OriginalName("VERB_CRINGING")] VerbCringing = 21,
    [pbr::OriginalName("VERB_SCREAMING")] VerbScreaming = 22,
    [pbr::OriginalName("VERB_SUBMISSIVEGESTURE")] VerbSubmissivegesture = 23,
    [pbr::OriginalName("VERB_FETALPOSITION")] VerbFetalposition = 24,
    [pbr::OriginalName("VERB_SMEAREDINTOSPIRAL")] VerbSmearedintospiral = 25,
    [pbr::OriginalName("VERB_FALLING")] VerbFalling = 26,
    [pbr::OriginalName("VERB_DEAD")] VerbDead = 27,
    [pbr::OriginalName("VERB_LAUGHING")] VerbLaughing = 28,
    [pbr::OriginalName("VERB_LOOKINGOFFENDED")] VerbLookingoffended = 29,
    [pbr::OriginalName("VERB_BEINGSHOT")] VerbBeingshot = 30,
    [pbr::OriginalName("VERB_PLAINTIVEGESTURE")] VerbPlaintivegesture = 31,
    [pbr::OriginalName("VERB_MELTING")] VerbMelting = 32,
    [pbr::OriginalName("VERB_SHOOTING")] VerbShooting = 33,
    [pbr::OriginalName("VERB_TORTURING")] VerbTorturing = 34,
    [pbr::OriginalName("VERB_COMMITTINGDEPRAVEDACT")] VerbCommittingdepravedact = 35,
    [pbr::OriginalName("VERB_PRAYING")] VerbPraying = 36,
    [pbr::OriginalName("VERB_CONTEMPLATING")] VerbContemplating = 37,
    [pbr::OriginalName("VERB_COOKING")] VerbCooking = 38,
    [pbr::OriginalName("VERB_ENGRAVING")] VerbEngraving = 39,
    [pbr::OriginalName("VERB_PROSTRATING")] VerbProstrating = 40,
    [pbr::OriginalName("VERB_SUFFERING")] VerbSuffering = 41,
    [pbr::OriginalName("VERB_BEINGIMPALED")] VerbBeingimpaled = 42,
    [pbr::OriginalName("VERB_BEINGCONTORTED")] VerbBeingcontorted = 43,
    [pbr::OriginalName("VERB_BEINGFLAYED")] VerbBeingflayed = 44,
    [pbr::OriginalName("VERB_HANGINGFROM")] VerbHangingfrom = 45,
    [pbr::OriginalName("VERB_BEINGMUTILATED")] VerbBeingmutilated = 46,
    [pbr::OriginalName("VERB_TRIUMPHANTPOSE")] VerbTriumphantpose = 47,
  }

  public enum FlowType {
    [pbr::OriginalName("Miasma")] Miasma = 0,
    [pbr::OriginalName("Steam")] Steam = 1,
    [pbr::OriginalName("Mist")] Mist = 2,
    [pbr::OriginalName("MaterialDust")] MaterialDust = 3,
    [pbr::OriginalName("MagmaMist")] MagmaMist = 4,
    [pbr::OriginalName("Smoke")] Smoke = 5,
    [pbr::OriginalName("Dragonfire")] Dragonfire = 6,
    [pbr::OriginalName("Fire")] Fire = 7,
    [pbr::OriginalName("Web")] Web = 8,
    [pbr::OriginalName("MaterialGas")] MaterialGas = 9,
    [pbr::OriginalName("MaterialVapor")] MaterialVapor = 10,
    [pbr::OriginalName("OceanWave")] OceanWave = 11,
    [pbr::OriginalName("SeaFoam")] SeaFoam = 12,
    [pbr::OriginalName("ItemCloud")] ItemCloud = 13,
    [pbr::OriginalName("CampFire")] CampFire = -1,
  }

  #endregion

  #region Messages
  public sealed partial class Coord : pb::IMessage<Coord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Coord> _parser = new pb::MessageParser<Coord>(() => new Coord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Coord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coord(Coord other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coord Clone() {
      return new Coord(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private readonly static int XDefaultValue = 0;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private readonly static int YDefaultValue = 0;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 2;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private readonly static int ZDefaultValue = 0;

    private int z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Z {
      get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Coord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Coord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasZ) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (HasZ) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (HasZ) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (HasZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Coord other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Tiletype : pb::IMessage<Tiletype>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tiletype> _parser = new pb::MessageParser<Tiletype>(() => new Tiletype());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Tiletype> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tiletype() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tiletype(Tiletype other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      caption_ = other.caption_;
      shape_ = other.shape_;
      special_ = other.special_;
      material_ = other.material_;
      variant_ = other.variant_;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tiletype Clone() {
      return new Tiletype(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 3;
    private readonly static pb::ByteString CaptionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCaption() {
      caption_ = null;
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 4;
    private readonly static global::RemoteFortressReader.TiletypeShape ShapeDefaultValue = global::RemoteFortressReader.TiletypeShape.NoShape;

    private global::RemoteFortressReader.TiletypeShape shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TiletypeShape Shape {
      get { if ((_hasBits0 & 2) != 0) { return shape_; } else { return ShapeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shape_ = value;
      }
    }
    /// <summary>Gets whether the "shape" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShape {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "shape" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShape() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "special" field.</summary>
    public const int SpecialFieldNumber = 5;
    private readonly static global::RemoteFortressReader.TiletypeSpecial SpecialDefaultValue = global::RemoteFortressReader.TiletypeSpecial.NoSpecial;

    private global::RemoteFortressReader.TiletypeSpecial special_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TiletypeSpecial Special {
      get { if ((_hasBits0 & 4) != 0) { return special_; } else { return SpecialDefaultValue; } }
      set {
        _hasBits0 |= 4;
        special_ = value;
      }
    }
    /// <summary>Gets whether the "special" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecial {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "special" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecial() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 6;
    private readonly static global::RemoteFortressReader.TiletypeMaterial MaterialDefaultValue = global::RemoteFortressReader.TiletypeMaterial.NoMaterial;

    private global::RemoteFortressReader.TiletypeMaterial material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TiletypeMaterial Material {
      get { if ((_hasBits0 & 8) != 0) { return material_; } else { return MaterialDefaultValue; } }
      set {
        _hasBits0 |= 8;
        material_ = value;
      }
    }
    /// <summary>Gets whether the "material" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaterial {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "material" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaterial() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "variant" field.</summary>
    public const int VariantFieldNumber = 7;
    private readonly static global::RemoteFortressReader.TiletypeVariant VariantDefaultValue = global::RemoteFortressReader.TiletypeVariant.NoVariant;

    private global::RemoteFortressReader.TiletypeVariant variant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TiletypeVariant Variant {
      get { if ((_hasBits0 & 16) != 0) { return variant_; } else { return VariantDefaultValue; } }
      set {
        _hasBits0 |= 16;
        variant_ = value;
      }
    }
    /// <summary>Gets whether the "variant" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVariant {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "variant" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVariant() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 8;
    private readonly static pb::ByteString DirectionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Direction {
      get { return direction_ ?? DirectionDefaultValue; }
      set {
        direction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirection {
      get { return direction_ != null; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirection() {
      direction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Tiletype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Tiletype other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Caption != other.Caption) return false;
      if (Shape != other.Shape) return false;
      if (Special != other.Special) return false;
      if (Material != other.Material) return false;
      if (Variant != other.Variant) return false;
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (HasShape) hash ^= Shape.GetHashCode();
      if (HasSpecial) hash ^= Special.GetHashCode();
      if (HasMaterial) hash ^= Material.GetHashCode();
      if (HasVariant) hash ^= Variant.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteBytes(Name);
      }
      if (HasCaption) {
        output.WriteRawTag(26);
        output.WriteBytes(Caption);
      }
      if (HasShape) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Shape);
      }
      if (HasSpecial) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Special);
      }
      if (HasMaterial) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Material);
      }
      if (HasVariant) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Variant);
      }
      if (HasDirection) {
        output.WriteRawTag(66);
        output.WriteBytes(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteBytes(Name);
      }
      if (HasCaption) {
        output.WriteRawTag(26);
        output.WriteBytes(Caption);
      }
      if (HasShape) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Shape);
      }
      if (HasSpecial) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Special);
      }
      if (HasMaterial) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Material);
      }
      if (HasVariant) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Variant);
      }
      if (HasDirection) {
        output.WriteRawTag(66);
        output.WriteBytes(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasCaption) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Caption);
      }
      if (HasShape) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shape);
      }
      if (HasSpecial) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Special);
      }
      if (HasMaterial) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Material);
      }
      if (HasVariant) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Variant);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Tiletype other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      if (other.HasShape) {
        Shape = other.Shape;
      }
      if (other.HasSpecial) {
        Special = other.Special;
      }
      if (other.HasMaterial) {
        Material = other.Material;
      }
      if (other.HasVariant) {
        Variant = other.Variant;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadBytes();
            break;
          }
          case 26: {
            Caption = input.ReadBytes();
            break;
          }
          case 32: {
            Shape = (global::RemoteFortressReader.TiletypeShape) input.ReadEnum();
            break;
          }
          case 40: {
            Special = (global::RemoteFortressReader.TiletypeSpecial) input.ReadEnum();
            break;
          }
          case 48: {
            Material = (global::RemoteFortressReader.TiletypeMaterial) input.ReadEnum();
            break;
          }
          case 56: {
            Variant = (global::RemoteFortressReader.TiletypeVariant) input.ReadEnum();
            break;
          }
          case 66: {
            Direction = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadBytes();
            break;
          }
          case 26: {
            Caption = input.ReadBytes();
            break;
          }
          case 32: {
            Shape = (global::RemoteFortressReader.TiletypeShape) input.ReadEnum();
            break;
          }
          case 40: {
            Special = (global::RemoteFortressReader.TiletypeSpecial) input.ReadEnum();
            break;
          }
          case 48: {
            Material = (global::RemoteFortressReader.TiletypeMaterial) input.ReadEnum();
            break;
          }
          case 56: {
            Variant = (global::RemoteFortressReader.TiletypeVariant) input.ReadEnum();
            break;
          }
          case 66: {
            Direction = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TiletypeList : pb::IMessage<TiletypeList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TiletypeList> _parser = new pb::MessageParser<TiletypeList>(() => new TiletypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TiletypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TiletypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TiletypeList(TiletypeList other) : this() {
      tiletypeList_ = other.tiletypeList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TiletypeList Clone() {
      return new TiletypeList(this);
    }

    /// <summary>Field number for the "tiletype_list" field.</summary>
    public const int TiletypeList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Tiletype> _repeated_tiletypeList_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.Tiletype.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Tiletype> tiletypeList_ = new pbc::RepeatedField<global::RemoteFortressReader.Tiletype>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Tiletype> TiletypeList_ {
      get { return tiletypeList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TiletypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TiletypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tiletypeList_.Equals(other.tiletypeList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tiletypeList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tiletypeList_.WriteTo(output, _repeated_tiletypeList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tiletypeList_.WriteTo(ref output, _repeated_tiletypeList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tiletypeList_.CalculateSize(_repeated_tiletypeList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TiletypeList other) {
      if (other == null) {
        return;
      }
      tiletypeList_.Add(other.tiletypeList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tiletypeList_.AddEntriesFrom(input, _repeated_tiletypeList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tiletypeList_.AddEntriesFrom(ref input, _repeated_tiletypeList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingExtents : pb::IMessage<BuildingExtents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingExtents> _parser = new pb::MessageParser<BuildingExtents>(() => new BuildingExtents());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingExtents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingExtents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingExtents(BuildingExtents other) : this() {
      _hasBits0 = other._hasBits0;
      posX_ = other.posX_;
      posY_ = other.posY_;
      width_ = other.width_;
      height_ = other.height_;
      extents_ = other.extents_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingExtents Clone() {
      return new BuildingExtents(this);
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 1;
    private readonly static int PosXDefaultValue = 0;

    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosX {
      get { if ((_hasBits0 & 1) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 2;
    private readonly static int PosYDefaultValue = 0;

    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosY {
      get { if ((_hasBits0 & 2) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "extents" field.</summary>
    public const int ExtentsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_extents_codec
        = pb::FieldCodec.ForInt32(40);
    private readonly pbc::RepeatedField<int> extents_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Extents {
      get { return extents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingExtents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingExtents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if(!extents_.Equals(other.extents_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPosX) hash ^= PosX.GetHashCode();
      if (HasPosY) hash ^= PosY.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      hash ^= extents_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(PosY);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      extents_.WriteTo(output, _repeated_extents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(PosY);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      extents_.WriteTo(ref output, _repeated_extents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (HasPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      size += extents_.CalculateSize(_repeated_extents_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingExtents other) {
      if (other == null) {
        return;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      extents_.Add(other.extents_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PosX = input.ReadInt32();
            break;
          }
          case 16: {
            PosY = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            extents_.AddEntriesFrom(input, _repeated_extents_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PosX = input.ReadInt32();
            break;
          }
          case 16: {
            PosY = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            extents_.AddEntriesFrom(ref input, _repeated_extents_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingItem : pb::IMessage<BuildingItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingItem> _parser = new pb::MessageParser<BuildingItem>(() => new BuildingItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingItem(BuildingItem other) : this() {
      _hasBits0 = other._hasBits0;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingItem Clone() {
      return new BuildingItem(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::RemoteFortressReader.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private readonly static int ModeDefaultValue = 0;

    private int mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mode {
      get { if ((_hasBits0 & 1) != 0) { return mode_; } else { return ModeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mode_ = value;
      }
    }
    /// <summary>Gets whether the "mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (HasMode) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (HasMode) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (HasMode) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (HasMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingItem other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::RemoteFortressReader.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.HasMode) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingInstance : pb::IMessage<BuildingInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingInstance> _parser = new pb::MessageParser<BuildingInstance>(() => new BuildingInstance());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingInstance(BuildingInstance other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      posXMin_ = other.posXMin_;
      posYMin_ = other.posYMin_;
      posZMin_ = other.posZMin_;
      posXMax_ = other.posXMax_;
      posYMax_ = other.posYMax_;
      posZMax_ = other.posZMax_;
      buildingType_ = other.buildingType_ != null ? other.buildingType_.Clone() : null;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      buildingFlags_ = other.buildingFlags_;
      isRoom_ = other.isRoom_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      direction_ = other.direction_;
      items_ = other.items_.Clone();
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingInstance Clone() {
      return new BuildingInstance(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_x_min" field.</summary>
    public const int PosXMinFieldNumber = 2;
    private readonly static int PosXMinDefaultValue = 0;

    private int posXMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosXMin {
      get { if ((_hasBits0 & 2) != 0) { return posXMin_; } else { return PosXMinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posXMin_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x_min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosXMin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_x_min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosXMin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_y_min" field.</summary>
    public const int PosYMinFieldNumber = 3;
    private readonly static int PosYMinDefaultValue = 0;

    private int posYMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosYMin {
      get { if ((_hasBits0 & 4) != 0) { return posYMin_; } else { return PosYMinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posYMin_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y_min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosYMin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_y_min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosYMin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos_z_min" field.</summary>
    public const int PosZMinFieldNumber = 4;
    private readonly static int PosZMinDefaultValue = 0;

    private int posZMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosZMin {
      get { if ((_hasBits0 & 8) != 0) { return posZMin_; } else { return PosZMinDefaultValue; } }
      set {
        _hasBits0 |= 8;
        posZMin_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z_min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZMin {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pos_z_min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZMin() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pos_x_max" field.</summary>
    public const int PosXMaxFieldNumber = 5;
    private readonly static int PosXMaxDefaultValue = 0;

    private int posXMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosXMax {
      get { if ((_hasBits0 & 16) != 0) { return posXMax_; } else { return PosXMaxDefaultValue; } }
      set {
        _hasBits0 |= 16;
        posXMax_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosXMax {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "pos_x_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosXMax() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pos_y_max" field.</summary>
    public const int PosYMaxFieldNumber = 6;
    private readonly static int PosYMaxDefaultValue = 0;

    private int posYMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosYMax {
      get { if ((_hasBits0 & 32) != 0) { return posYMax_; } else { return PosYMaxDefaultValue; } }
      set {
        _hasBits0 |= 32;
        posYMax_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosYMax {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "pos_y_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosYMax() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pos_z_max" field.</summary>
    public const int PosZMaxFieldNumber = 7;
    private readonly static int PosZMaxDefaultValue = 0;

    private int posZMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosZMax {
      get { if ((_hasBits0 & 64) != 0) { return posZMax_; } else { return PosZMaxDefaultValue; } }
      set {
        _hasBits0 |= 64;
        posZMax_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZMax {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "pos_z_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZMax() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingTypeFieldNumber = 8;
    private global::RemoteFortressReader.BuildingType buildingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.BuildingType BuildingType {
      get { return buildingType_; }
      set {
        buildingType_ = value;
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 9;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "building_flags" field.</summary>
    public const int BuildingFlagsFieldNumber = 10;
    private readonly static uint BuildingFlagsDefaultValue = 0;

    private uint buildingFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuildingFlags {
      get { if ((_hasBits0 & 128) != 0) { return buildingFlags_; } else { return BuildingFlagsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        buildingFlags_ = value;
      }
    }
    /// <summary>Gets whether the "building_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildingFlags {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "building_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildingFlags() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "is_room" field.</summary>
    public const int IsRoomFieldNumber = 11;
    private readonly static bool IsRoomDefaultValue = false;

    private bool isRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRoom {
      get { if ((_hasBits0 & 256) != 0) { return isRoom_; } else { return IsRoomDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRoom {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRoom() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 12;
    private global::RemoteFortressReader.BuildingExtents room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.BuildingExtents Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 13;
    private readonly static global::RemoteFortressReader.BuildingDirection DirectionDefaultValue = global::RemoteFortressReader.BuildingDirection.North;

    private global::RemoteFortressReader.BuildingDirection direction_;
    /// <summary>
    ///Doesn't mean anything for most buildings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.BuildingDirection Direction {
      get { if ((_hasBits0 & 512) != 0) { return direction_; } else { return DirectionDefaultValue; } }
      set {
        _hasBits0 |= 512;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirection {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirection() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BuildingItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(114, global::RemoteFortressReader.BuildingItem.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BuildingItem> items_ = new pbc::RepeatedField<global::RemoteFortressReader.BuildingItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BuildingItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 15;
    private readonly static int ActiveDefaultValue = 0;

    private int active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Active {
      get { if ((_hasBits0 & 1024) != 0) { return active_; } else { return ActiveDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        active_ = value;
      }
    }
    /// <summary>Gets whether the "active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActive {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActive() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (PosXMin != other.PosXMin) return false;
      if (PosYMin != other.PosYMin) return false;
      if (PosZMin != other.PosZMin) return false;
      if (PosXMax != other.PosXMax) return false;
      if (PosYMax != other.PosYMax) return false;
      if (PosZMax != other.PosZMax) return false;
      if (!object.Equals(BuildingType, other.BuildingType)) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (BuildingFlags != other.BuildingFlags) return false;
      if (IsRoom != other.IsRoom) return false;
      if (!object.Equals(Room, other.Room)) return false;
      if (Direction != other.Direction) return false;
      if(!items_.Equals(other.items_)) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasPosXMin) hash ^= PosXMin.GetHashCode();
      if (HasPosYMin) hash ^= PosYMin.GetHashCode();
      if (HasPosZMin) hash ^= PosZMin.GetHashCode();
      if (HasPosXMax) hash ^= PosXMax.GetHashCode();
      if (HasPosYMax) hash ^= PosYMax.GetHashCode();
      if (HasPosZMax) hash ^= PosZMax.GetHashCode();
      if (buildingType_ != null) hash ^= BuildingType.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (HasBuildingFlags) hash ^= BuildingFlags.GetHashCode();
      if (HasIsRoom) hash ^= IsRoom.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      hash ^= items_.GetHashCode();
      if (HasActive) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasPosXMin) {
        output.WriteRawTag(16);
        output.WriteInt32(PosXMin);
      }
      if (HasPosYMin) {
        output.WriteRawTag(24);
        output.WriteInt32(PosYMin);
      }
      if (HasPosZMin) {
        output.WriteRawTag(32);
        output.WriteInt32(PosZMin);
      }
      if (HasPosXMax) {
        output.WriteRawTag(40);
        output.WriteInt32(PosXMax);
      }
      if (HasPosYMax) {
        output.WriteRawTag(48);
        output.WriteInt32(PosYMax);
      }
      if (HasPosZMax) {
        output.WriteRawTag(56);
        output.WriteInt32(PosZMax);
      }
      if (buildingType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BuildingType);
      }
      if (material_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Material);
      }
      if (HasBuildingFlags) {
        output.WriteRawTag(80);
        output.WriteUInt32(BuildingFlags);
      }
      if (HasIsRoom) {
        output.WriteRawTag(88);
        output.WriteBool(IsRoom);
      }
      if (room_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Room);
      }
      if (HasDirection) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Direction);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (HasActive) {
        output.WriteRawTag(120);
        output.WriteInt32(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasPosXMin) {
        output.WriteRawTag(16);
        output.WriteInt32(PosXMin);
      }
      if (HasPosYMin) {
        output.WriteRawTag(24);
        output.WriteInt32(PosYMin);
      }
      if (HasPosZMin) {
        output.WriteRawTag(32);
        output.WriteInt32(PosZMin);
      }
      if (HasPosXMax) {
        output.WriteRawTag(40);
        output.WriteInt32(PosXMax);
      }
      if (HasPosYMax) {
        output.WriteRawTag(48);
        output.WriteInt32(PosYMax);
      }
      if (HasPosZMax) {
        output.WriteRawTag(56);
        output.WriteInt32(PosZMax);
      }
      if (buildingType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BuildingType);
      }
      if (material_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Material);
      }
      if (HasBuildingFlags) {
        output.WriteRawTag(80);
        output.WriteUInt32(BuildingFlags);
      }
      if (HasIsRoom) {
        output.WriteRawTag(88);
        output.WriteBool(IsRoom);
      }
      if (room_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Room);
      }
      if (HasDirection) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Direction);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (HasActive) {
        output.WriteRawTag(120);
        output.WriteInt32(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasPosXMin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosXMin);
      }
      if (HasPosYMin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosYMin);
      }
      if (HasPosZMin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosZMin);
      }
      if (HasPosXMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosXMax);
      }
      if (HasPosYMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosYMax);
      }
      if (HasPosZMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosZMax);
      }
      if (buildingType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildingType);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (HasBuildingFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildingFlags);
      }
      if (HasIsRoom) {
        size += 1 + 1;
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (HasActive) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Active);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingInstance other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasPosXMin) {
        PosXMin = other.PosXMin;
      }
      if (other.HasPosYMin) {
        PosYMin = other.PosYMin;
      }
      if (other.HasPosZMin) {
        PosZMin = other.PosZMin;
      }
      if (other.HasPosXMax) {
        PosXMax = other.PosXMax;
      }
      if (other.HasPosYMax) {
        PosYMax = other.PosYMax;
      }
      if (other.HasPosZMax) {
        PosZMax = other.PosZMax;
      }
      if (other.buildingType_ != null) {
        if (buildingType_ == null) {
          BuildingType = new global::RemoteFortressReader.BuildingType();
        }
        BuildingType.MergeFrom(other.BuildingType);
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.HasBuildingFlags) {
        BuildingFlags = other.BuildingFlags;
      }
      if (other.HasIsRoom) {
        IsRoom = other.IsRoom;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::RemoteFortressReader.BuildingExtents();
        }
        Room.MergeFrom(other.Room);
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      items_.Add(other.items_);
      if (other.HasActive) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            PosXMin = input.ReadInt32();
            break;
          }
          case 24: {
            PosYMin = input.ReadInt32();
            break;
          }
          case 32: {
            PosZMin = input.ReadInt32();
            break;
          }
          case 40: {
            PosXMax = input.ReadInt32();
            break;
          }
          case 48: {
            PosYMax = input.ReadInt32();
            break;
          }
          case 56: {
            PosZMax = input.ReadInt32();
            break;
          }
          case 66: {
            if (buildingType_ == null) {
              BuildingType = new global::RemoteFortressReader.BuildingType();
            }
            input.ReadMessage(BuildingType);
            break;
          }
          case 74: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 80: {
            BuildingFlags = input.ReadUInt32();
            break;
          }
          case 88: {
            IsRoom = input.ReadBool();
            break;
          }
          case 98: {
            if (room_ == null) {
              Room = new global::RemoteFortressReader.BuildingExtents();
            }
            input.ReadMessage(Room);
            break;
          }
          case 104: {
            Direction = (global::RemoteFortressReader.BuildingDirection) input.ReadEnum();
            break;
          }
          case 114: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 120: {
            Active = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            PosXMin = input.ReadInt32();
            break;
          }
          case 24: {
            PosYMin = input.ReadInt32();
            break;
          }
          case 32: {
            PosZMin = input.ReadInt32();
            break;
          }
          case 40: {
            PosXMax = input.ReadInt32();
            break;
          }
          case 48: {
            PosYMax = input.ReadInt32();
            break;
          }
          case 56: {
            PosZMax = input.ReadInt32();
            break;
          }
          case 66: {
            if (buildingType_ == null) {
              BuildingType = new global::RemoteFortressReader.BuildingType();
            }
            input.ReadMessage(BuildingType);
            break;
          }
          case 74: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 80: {
            BuildingFlags = input.ReadUInt32();
            break;
          }
          case 88: {
            IsRoom = input.ReadBool();
            break;
          }
          case 98: {
            if (room_ == null) {
              Room = new global::RemoteFortressReader.BuildingExtents();
            }
            input.ReadMessage(Room);
            break;
          }
          case 104: {
            Direction = (global::RemoteFortressReader.BuildingDirection) input.ReadEnum();
            break;
          }
          case 114: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 120: {
            Active = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RiverEdge : pb::IMessage<RiverEdge>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RiverEdge> _parser = new pb::MessageParser<RiverEdge>(() => new RiverEdge());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RiverEdge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverEdge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverEdge(RiverEdge other) : this() {
      _hasBits0 = other._hasBits0;
      minPos_ = other.minPos_;
      maxPos_ = other.maxPos_;
      active_ = other.active_;
      elevation_ = other.elevation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverEdge Clone() {
      return new RiverEdge(this);
    }

    /// <summary>Field number for the "min_pos" field.</summary>
    public const int MinPosFieldNumber = 1;
    private readonly static int MinPosDefaultValue = 0;

    private int minPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinPos {
      get { if ((_hasBits0 & 1) != 0) { return minPos_; } else { return MinPosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        minPos_ = value;
      }
    }
    /// <summary>Gets whether the "min_pos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinPos {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min_pos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinPos() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_pos" field.</summary>
    public const int MaxPosFieldNumber = 2;
    private readonly static int MaxPosDefaultValue = 0;

    private int maxPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPos {
      get { if ((_hasBits0 & 2) != 0) { return maxPos_; } else { return MaxPosDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxPos_ = value;
      }
    }
    /// <summary>Gets whether the "max_pos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxPos {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_pos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxPos() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 3;
    private readonly static int ActiveDefaultValue = 0;

    private int active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Active {
      get { if ((_hasBits0 & 4) != 0) { return active_; } else { return ActiveDefaultValue; } }
      set {
        _hasBits0 |= 4;
        active_ = value;
      }
    }
    /// <summary>Gets whether the "active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActive {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActive() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "elevation" field.</summary>
    public const int ElevationFieldNumber = 4;
    private readonly static int ElevationDefaultValue = 0;

    private int elevation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Elevation {
      get { if ((_hasBits0 & 8) != 0) { return elevation_; } else { return ElevationDefaultValue; } }
      set {
        _hasBits0 |= 8;
        elevation_ = value;
      }
    }
    /// <summary>Gets whether the "elevation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasElevation {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "elevation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearElevation() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RiverEdge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RiverEdge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinPos != other.MinPos) return false;
      if (MaxPos != other.MaxPos) return false;
      if (Active != other.Active) return false;
      if (Elevation != other.Elevation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMinPos) hash ^= MinPos.GetHashCode();
      if (HasMaxPos) hash ^= MaxPos.GetHashCode();
      if (HasActive) hash ^= Active.GetHashCode();
      if (HasElevation) hash ^= Elevation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMinPos) {
        output.WriteRawTag(8);
        output.WriteInt32(MinPos);
      }
      if (HasMaxPos) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxPos);
      }
      if (HasActive) {
        output.WriteRawTag(24);
        output.WriteInt32(Active);
      }
      if (HasElevation) {
        output.WriteRawTag(32);
        output.WriteInt32(Elevation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMinPos) {
        output.WriteRawTag(8);
        output.WriteInt32(MinPos);
      }
      if (HasMaxPos) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxPos);
      }
      if (HasActive) {
        output.WriteRawTag(24);
        output.WriteInt32(Active);
      }
      if (HasElevation) {
        output.WriteRawTag(32);
        output.WriteInt32(Elevation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMinPos) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPos);
      }
      if (HasMaxPos) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPos);
      }
      if (HasActive) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Active);
      }
      if (HasElevation) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Elevation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RiverEdge other) {
      if (other == null) {
        return;
      }
      if (other.HasMinPos) {
        MinPos = other.MinPos;
      }
      if (other.HasMaxPos) {
        MaxPos = other.MaxPos;
      }
      if (other.HasActive) {
        Active = other.Active;
      }
      if (other.HasElevation) {
        Elevation = other.Elevation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinPos = input.ReadInt32();
            break;
          }
          case 16: {
            MaxPos = input.ReadInt32();
            break;
          }
          case 24: {
            Active = input.ReadInt32();
            break;
          }
          case 32: {
            Elevation = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinPos = input.ReadInt32();
            break;
          }
          case 16: {
            MaxPos = input.ReadInt32();
            break;
          }
          case 24: {
            Active = input.ReadInt32();
            break;
          }
          case 32: {
            Elevation = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RiverTile : pb::IMessage<RiverTile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RiverTile> _parser = new pb::MessageParser<RiverTile>(() => new RiverTile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RiverTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverTile(RiverTile other) : this() {
      north_ = other.north_ != null ? other.north_.Clone() : null;
      south_ = other.south_ != null ? other.south_.Clone() : null;
      east_ = other.east_ != null ? other.east_.Clone() : null;
      west_ = other.west_ != null ? other.west_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RiverTile Clone() {
      return new RiverTile(this);
    }

    /// <summary>Field number for the "north" field.</summary>
    public const int NorthFieldNumber = 1;
    private global::RemoteFortressReader.RiverEdge north_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.RiverEdge North {
      get { return north_; }
      set {
        north_ = value;
      }
    }

    /// <summary>Field number for the "south" field.</summary>
    public const int SouthFieldNumber = 2;
    private global::RemoteFortressReader.RiverEdge south_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.RiverEdge South {
      get { return south_; }
      set {
        south_ = value;
      }
    }

    /// <summary>Field number for the "east" field.</summary>
    public const int EastFieldNumber = 3;
    private global::RemoteFortressReader.RiverEdge east_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.RiverEdge East {
      get { return east_; }
      set {
        east_ = value;
      }
    }

    /// <summary>Field number for the "west" field.</summary>
    public const int WestFieldNumber = 4;
    private global::RemoteFortressReader.RiverEdge west_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.RiverEdge West {
      get { return west_; }
      set {
        west_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RiverTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RiverTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(North, other.North)) return false;
      if (!object.Equals(South, other.South)) return false;
      if (!object.Equals(East, other.East)) return false;
      if (!object.Equals(West, other.West)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (north_ != null) hash ^= North.GetHashCode();
      if (south_ != null) hash ^= South.GetHashCode();
      if (east_ != null) hash ^= East.GetHashCode();
      if (west_ != null) hash ^= West.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (north_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(North);
      }
      if (south_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(South);
      }
      if (east_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(East);
      }
      if (west_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(West);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (north_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(North);
      }
      if (south_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(South);
      }
      if (east_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(East);
      }
      if (west_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(West);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (north_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(North);
      }
      if (south_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(South);
      }
      if (east_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(East);
      }
      if (west_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(West);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RiverTile other) {
      if (other == null) {
        return;
      }
      if (other.north_ != null) {
        if (north_ == null) {
          North = new global::RemoteFortressReader.RiverEdge();
        }
        North.MergeFrom(other.North);
      }
      if (other.south_ != null) {
        if (south_ == null) {
          South = new global::RemoteFortressReader.RiverEdge();
        }
        South.MergeFrom(other.South);
      }
      if (other.east_ != null) {
        if (east_ == null) {
          East = new global::RemoteFortressReader.RiverEdge();
        }
        East.MergeFrom(other.East);
      }
      if (other.west_ != null) {
        if (west_ == null) {
          West = new global::RemoteFortressReader.RiverEdge();
        }
        West.MergeFrom(other.West);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (north_ == null) {
              North = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(North);
            break;
          }
          case 18: {
            if (south_ == null) {
              South = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(South);
            break;
          }
          case 26: {
            if (east_ == null) {
              East = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(East);
            break;
          }
          case 34: {
            if (west_ == null) {
              West = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(West);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (north_ == null) {
              North = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(North);
            break;
          }
          case 18: {
            if (south_ == null) {
              South = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(South);
            break;
          }
          case 26: {
            if (east_ == null) {
              East = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(East);
            break;
          }
          case 34: {
            if (west_ == null) {
              West = new global::RemoteFortressReader.RiverEdge();
            }
            input.ReadMessage(West);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Spatter : pb::IMessage<Spatter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spatter> _parser = new pb::MessageParser<Spatter>(() => new Spatter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Spatter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spatter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spatter(Spatter other) : this() {
      _hasBits0 = other._hasBits0;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      amount_ = other.amount_;
      state_ = other.state_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spatter Clone() {
      return new Spatter(this);
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 1;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 1) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private readonly static global::RemoteFortressReader.MatterState StateDefaultValue = global::RemoteFortressReader.MatterState.Solid;

    private global::RemoteFortressReader.MatterState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatterState State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::RemoteFortressReader.MatPair item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Spatter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Spatter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Material, other.Material)) return false;
      if (Amount != other.Amount) return false;
      if (State != other.State) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (material_ != null) hash ^= Material.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (material_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Material);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (material_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Material);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Spatter other) {
      if (other == null) {
        return;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::RemoteFortressReader.MatPair();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            State = (global::RemoteFortressReader.MatterState) input.ReadEnum();
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            State = (global::RemoteFortressReader.MatterState) input.ReadEnum();
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpatterPile : pb::IMessage<SpatterPile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpatterPile> _parser = new pb::MessageParser<SpatterPile>(() => new SpatterPile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpatterPile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpatterPile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpatterPile(SpatterPile other) : this() {
      spatters_ = other.spatters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpatterPile Clone() {
      return new SpatterPile(this);
    }

    /// <summary>Field number for the "spatters" field.</summary>
    public const int SpattersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Spatter> _repeated_spatters_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.Spatter.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Spatter> spatters_ = new pbc::RepeatedField<global::RemoteFortressReader.Spatter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Spatter> Spatters {
      get { return spatters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpatterPile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpatterPile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spatters_.Equals(other.spatters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spatters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spatters_.WriteTo(output, _repeated_spatters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spatters_.WriteTo(ref output, _repeated_spatters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += spatters_.CalculateSize(_repeated_spatters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpatterPile other) {
      if (other == null) {
        return;
      }
      spatters_.Add(other.spatters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spatters_.AddEntriesFrom(input, _repeated_spatters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spatters_.AddEntriesFrom(ref input, _repeated_spatters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item(Item other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      flags1_ = other.flags1_;
      flags2_ = other.flags2_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      dye_ = other.dye_ != null ? other.dye_.Clone() : null;
      stackSize_ = other.stackSize_;
      subposX_ = other.subposX_;
      subposY_ = other.subposY_;
      subposZ_ = other.subposZ_;
      projectile_ = other.projectile_;
      velocityX_ = other.velocityX_;
      velocityY_ = other.velocityY_;
      velocityZ_ = other.velocityZ_;
      volume_ = other.volume_;
      improvements_ = other.improvements_.Clone();
      image_ = other.image_ != null ? other.image_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "flags1" field.</summary>
    public const int Flags1FieldNumber = 3;
    private readonly static uint Flags1DefaultValue = 0;

    private uint flags1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags1 {
      get { if ((_hasBits0 & 2) != 0) { return flags1_; } else { return Flags1DefaultValue; } }
      set {
        _hasBits0 |= 2;
        flags1_ = value;
      }
    }
    /// <summary>Gets whether the "flags1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags1 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flags1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags1() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "flags2" field.</summary>
    public const int Flags2FieldNumber = 4;
    private readonly static uint Flags2DefaultValue = 0;

    private uint flags2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags2 {
      get { if ((_hasBits0 & 4) != 0) { return flags2_; } else { return Flags2DefaultValue; } }
      set {
        _hasBits0 |= 4;
        flags2_ = value;
      }
    }
    /// <summary>Gets whether the "flags2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags2 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "flags2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags2() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::RemoteFortressReader.MatPair type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 6;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "dye" field.</summary>
    public const int DyeFieldNumber = 7;
    private global::RemoteFortressReader.ColorDefinition dye_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ColorDefinition Dye {
      get { return dye_; }
      set {
        dye_ = value;
      }
    }

    /// <summary>Field number for the "stack_size" field.</summary>
    public const int StackSizeFieldNumber = 8;
    private readonly static int StackSizeDefaultValue = 0;

    private int stackSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StackSize {
      get { if ((_hasBits0 & 8) != 0) { return stackSize_; } else { return StackSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stackSize_ = value;
      }
    }
    /// <summary>Gets whether the "stack_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStackSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stack_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStackSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "subpos_x" field.</summary>
    public const int SubposXFieldNumber = 9;
    private readonly static float SubposXDefaultValue = 0F;

    private float subposX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposX {
      get { if ((_hasBits0 & 16) != 0) { return subposX_; } else { return SubposXDefaultValue; } }
      set {
        _hasBits0 |= 16;
        subposX_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposX {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "subpos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposX() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "subpos_y" field.</summary>
    public const int SubposYFieldNumber = 10;
    private readonly static float SubposYDefaultValue = 0F;

    private float subposY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposY {
      get { if ((_hasBits0 & 32) != 0) { return subposY_; } else { return SubposYDefaultValue; } }
      set {
        _hasBits0 |= 32;
        subposY_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposY {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "subpos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposY() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "subpos_z" field.</summary>
    public const int SubposZFieldNumber = 11;
    private readonly static float SubposZDefaultValue = 0F;

    private float subposZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposZ {
      get { if ((_hasBits0 & 64) != 0) { return subposZ_; } else { return SubposZDefaultValue; } }
      set {
        _hasBits0 |= 64;
        subposZ_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposZ {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "subpos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposZ() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "projectile" field.</summary>
    public const int ProjectileFieldNumber = 12;
    private readonly static bool ProjectileDefaultValue = false;

    private bool projectile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Projectile {
      get { if ((_hasBits0 & 128) != 0) { return projectile_; } else { return ProjectileDefaultValue; } }
      set {
        _hasBits0 |= 128;
        projectile_ = value;
      }
    }
    /// <summary>Gets whether the "projectile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProjectile {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "projectile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProjectile() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "velocity_x" field.</summary>
    public const int VelocityXFieldNumber = 13;
    private readonly static float VelocityXDefaultValue = 0F;

    private float velocityX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityX {
      get { if ((_hasBits0 & 256) != 0) { return velocityX_; } else { return VelocityXDefaultValue; } }
      set {
        _hasBits0 |= 256;
        velocityX_ = value;
      }
    }
    /// <summary>Gets whether the "velocity_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVelocityX {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "velocity_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocityX() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "velocity_y" field.</summary>
    public const int VelocityYFieldNumber = 14;
    private readonly static float VelocityYDefaultValue = 0F;

    private float velocityY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityY {
      get { if ((_hasBits0 & 512) != 0) { return velocityY_; } else { return VelocityYDefaultValue; } }
      set {
        _hasBits0 |= 512;
        velocityY_ = value;
      }
    }
    /// <summary>Gets whether the "velocity_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVelocityY {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "velocity_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocityY() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "velocity_z" field.</summary>
    public const int VelocityZFieldNumber = 15;
    private readonly static float VelocityZDefaultValue = 0F;

    private float velocityZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityZ {
      get { if ((_hasBits0 & 1024) != 0) { return velocityZ_; } else { return VelocityZDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        velocityZ_ = value;
      }
    }
    /// <summary>Gets whether the "velocity_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVelocityZ {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "velocity_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocityZ() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 16;
    private readonly static int VolumeDefaultValue = 0;

    private int volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Volume {
      get { if ((_hasBits0 & 2048) != 0) { return volume_; } else { return VolumeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "improvements" field.</summary>
    public const int ImprovementsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ItemImprovement> _repeated_improvements_codec
        = pb::FieldCodec.ForMessage(138, global::RemoteFortressReader.ItemImprovement.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ItemImprovement> improvements_ = new pbc::RepeatedField<global::RemoteFortressReader.ItemImprovement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ItemImprovement> Improvements {
      get { return improvements_; }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 18;
    private global::RemoteFortressReader.ArtImage image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImage Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (Flags1 != other.Flags1) return false;
      if (Flags2 != other.Flags2) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (!object.Equals(Dye, other.Dye)) return false;
      if (StackSize != other.StackSize) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposX, other.SubposX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposY, other.SubposY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposZ, other.SubposZ)) return false;
      if (Projectile != other.Projectile) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityX, other.VelocityX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityY, other.VelocityY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityZ, other.VelocityZ)) return false;
      if (Volume != other.Volume) return false;
      if(!improvements_.Equals(other.improvements_)) return false;
      if (!object.Equals(Image, other.Image)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasFlags1) hash ^= Flags1.GetHashCode();
      if (HasFlags2) hash ^= Flags2.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (dye_ != null) hash ^= Dye.GetHashCode();
      if (HasStackSize) hash ^= StackSize.GetHashCode();
      if (HasSubposX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposX);
      if (HasSubposY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposY);
      if (HasSubposZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposZ);
      if (HasProjectile) hash ^= Projectile.GetHashCode();
      if (HasVelocityX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityX);
      if (HasVelocityY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityY);
      if (HasVelocityZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityZ);
      if (HasVolume) hash ^= Volume.GetHashCode();
      hash ^= improvements_.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (HasFlags1) {
        output.WriteRawTag(24);
        output.WriteUInt32(Flags1);
      }
      if (HasFlags2) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags2);
      }
      if (type_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Type);
      }
      if (material_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Material);
      }
      if (dye_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Dye);
      }
      if (HasStackSize) {
        output.WriteRawTag(64);
        output.WriteInt32(StackSize);
      }
      if (HasSubposX) {
        output.WriteRawTag(77);
        output.WriteFloat(SubposX);
      }
      if (HasSubposY) {
        output.WriteRawTag(85);
        output.WriteFloat(SubposY);
      }
      if (HasSubposZ) {
        output.WriteRawTag(93);
        output.WriteFloat(SubposZ);
      }
      if (HasProjectile) {
        output.WriteRawTag(96);
        output.WriteBool(Projectile);
      }
      if (HasVelocityX) {
        output.WriteRawTag(109);
        output.WriteFloat(VelocityX);
      }
      if (HasVelocityY) {
        output.WriteRawTag(117);
        output.WriteFloat(VelocityY);
      }
      if (HasVelocityZ) {
        output.WriteRawTag(125);
        output.WriteFloat(VelocityZ);
      }
      if (HasVolume) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Volume);
      }
      improvements_.WriteTo(output, _repeated_improvements_codec);
      if (image_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (HasFlags1) {
        output.WriteRawTag(24);
        output.WriteUInt32(Flags1);
      }
      if (HasFlags2) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags2);
      }
      if (type_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Type);
      }
      if (material_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Material);
      }
      if (dye_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Dye);
      }
      if (HasStackSize) {
        output.WriteRawTag(64);
        output.WriteInt32(StackSize);
      }
      if (HasSubposX) {
        output.WriteRawTag(77);
        output.WriteFloat(SubposX);
      }
      if (HasSubposY) {
        output.WriteRawTag(85);
        output.WriteFloat(SubposY);
      }
      if (HasSubposZ) {
        output.WriteRawTag(93);
        output.WriteFloat(SubposZ);
      }
      if (HasProjectile) {
        output.WriteRawTag(96);
        output.WriteBool(Projectile);
      }
      if (HasVelocityX) {
        output.WriteRawTag(109);
        output.WriteFloat(VelocityX);
      }
      if (HasVelocityY) {
        output.WriteRawTag(117);
        output.WriteFloat(VelocityY);
      }
      if (HasVelocityZ) {
        output.WriteRawTag(125);
        output.WriteFloat(VelocityZ);
      }
      if (HasVolume) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Volume);
      }
      improvements_.WriteTo(ref output, _repeated_improvements_codec);
      if (image_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasFlags1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags1);
      }
      if (HasFlags2) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags2);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (dye_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dye);
      }
      if (HasStackSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackSize);
      }
      if (HasSubposX) {
        size += 1 + 4;
      }
      if (HasSubposY) {
        size += 1 + 4;
      }
      if (HasSubposZ) {
        size += 1 + 4;
      }
      if (HasProjectile) {
        size += 1 + 1;
      }
      if (HasVelocityX) {
        size += 1 + 4;
      }
      if (HasVelocityY) {
        size += 1 + 4;
      }
      if (HasVelocityZ) {
        size += 1 + 4;
      }
      if (HasVolume) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Volume);
      }
      size += improvements_.CalculateSize(_repeated_improvements_codec);
      if (image_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasFlags1) {
        Flags1 = other.Flags1;
      }
      if (other.HasFlags2) {
        Flags2 = other.Flags2;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::RemoteFortressReader.MatPair();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.dye_ != null) {
        if (dye_ == null) {
          Dye = new global::RemoteFortressReader.ColorDefinition();
        }
        Dye.MergeFrom(other.Dye);
      }
      if (other.HasStackSize) {
        StackSize = other.StackSize;
      }
      if (other.HasSubposX) {
        SubposX = other.SubposX;
      }
      if (other.HasSubposY) {
        SubposY = other.SubposY;
      }
      if (other.HasSubposZ) {
        SubposZ = other.SubposZ;
      }
      if (other.HasProjectile) {
        Projectile = other.Projectile;
      }
      if (other.HasVelocityX) {
        VelocityX = other.VelocityX;
      }
      if (other.HasVelocityY) {
        VelocityY = other.VelocityY;
      }
      if (other.HasVelocityZ) {
        VelocityZ = other.VelocityZ;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      improvements_.Add(other.improvements_);
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::RemoteFortressReader.ArtImage();
        }
        Image.MergeFrom(other.Image);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 24: {
            Flags1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Flags2 = input.ReadUInt32();
            break;
          }
          case 42: {
            if (type_ == null) {
              Type = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Type);
            break;
          }
          case 50: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 58: {
            if (dye_ == null) {
              Dye = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Dye);
            break;
          }
          case 64: {
            StackSize = input.ReadInt32();
            break;
          }
          case 77: {
            SubposX = input.ReadFloat();
            break;
          }
          case 85: {
            SubposY = input.ReadFloat();
            break;
          }
          case 93: {
            SubposZ = input.ReadFloat();
            break;
          }
          case 96: {
            Projectile = input.ReadBool();
            break;
          }
          case 109: {
            VelocityX = input.ReadFloat();
            break;
          }
          case 117: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 125: {
            VelocityZ = input.ReadFloat();
            break;
          }
          case 128: {
            Volume = input.ReadInt32();
            break;
          }
          case 138: {
            improvements_.AddEntriesFrom(input, _repeated_improvements_codec);
            break;
          }
          case 146: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 24: {
            Flags1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Flags2 = input.ReadUInt32();
            break;
          }
          case 42: {
            if (type_ == null) {
              Type = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Type);
            break;
          }
          case 50: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 58: {
            if (dye_ == null) {
              Dye = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Dye);
            break;
          }
          case 64: {
            StackSize = input.ReadInt32();
            break;
          }
          case 77: {
            SubposX = input.ReadFloat();
            break;
          }
          case 85: {
            SubposY = input.ReadFloat();
            break;
          }
          case 93: {
            SubposZ = input.ReadFloat();
            break;
          }
          case 96: {
            Projectile = input.ReadBool();
            break;
          }
          case 109: {
            VelocityX = input.ReadFloat();
            break;
          }
          case 117: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 125: {
            VelocityZ = input.ReadFloat();
            break;
          }
          case 128: {
            Volume = input.ReadInt32();
            break;
          }
          case 138: {
            improvements_.AddEntriesFrom(ref input, _repeated_improvements_codec);
            break;
          }
          case 146: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantTile : pb::IMessage<PlantTile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantTile> _parser = new pb::MessageParser<PlantTile>(() => new PlantTile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantTile(PlantTile other) : this() {
      _hasBits0 = other._hasBits0;
      trunk_ = other.trunk_;
      connectionEast_ = other.connectionEast_;
      connectionSouth_ = other.connectionSouth_;
      connectionWest_ = other.connectionWest_;
      connectionNorth_ = other.connectionNorth_;
      branches_ = other.branches_;
      twigs_ = other.twigs_;
      tileType_ = other.tileType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantTile Clone() {
      return new PlantTile(this);
    }

    /// <summary>Field number for the "trunk" field.</summary>
    public const int TrunkFieldNumber = 1;
    private readonly static bool TrunkDefaultValue = false;

    private bool trunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Trunk {
      get { if ((_hasBits0 & 1) != 0) { return trunk_; } else { return TrunkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        trunk_ = value;
      }
    }
    /// <summary>Gets whether the "trunk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrunk {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "trunk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrunk() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "connection_east" field.</summary>
    public const int ConnectionEastFieldNumber = 2;
    private readonly static bool ConnectionEastDefaultValue = false;

    private bool connectionEast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ConnectionEast {
      get { if ((_hasBits0 & 2) != 0) { return connectionEast_; } else { return ConnectionEastDefaultValue; } }
      set {
        _hasBits0 |= 2;
        connectionEast_ = value;
      }
    }
    /// <summary>Gets whether the "connection_east" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectionEast {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "connection_east" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectionEast() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "connection_south" field.</summary>
    public const int ConnectionSouthFieldNumber = 3;
    private readonly static bool ConnectionSouthDefaultValue = false;

    private bool connectionSouth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ConnectionSouth {
      get { if ((_hasBits0 & 4) != 0) { return connectionSouth_; } else { return ConnectionSouthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        connectionSouth_ = value;
      }
    }
    /// <summary>Gets whether the "connection_south" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectionSouth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "connection_south" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectionSouth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "connection_west" field.</summary>
    public const int ConnectionWestFieldNumber = 4;
    private readonly static bool ConnectionWestDefaultValue = false;

    private bool connectionWest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ConnectionWest {
      get { if ((_hasBits0 & 8) != 0) { return connectionWest_; } else { return ConnectionWestDefaultValue; } }
      set {
        _hasBits0 |= 8;
        connectionWest_ = value;
      }
    }
    /// <summary>Gets whether the "connection_west" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectionWest {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "connection_west" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectionWest() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "connection_north" field.</summary>
    public const int ConnectionNorthFieldNumber = 5;
    private readonly static bool ConnectionNorthDefaultValue = false;

    private bool connectionNorth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ConnectionNorth {
      get { if ((_hasBits0 & 16) != 0) { return connectionNorth_; } else { return ConnectionNorthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        connectionNorth_ = value;
      }
    }
    /// <summary>Gets whether the "connection_north" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectionNorth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "connection_north" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectionNorth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "branches" field.</summary>
    public const int BranchesFieldNumber = 6;
    private readonly static bool BranchesDefaultValue = false;

    private bool branches_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Branches {
      get { if ((_hasBits0 & 32) != 0) { return branches_; } else { return BranchesDefaultValue; } }
      set {
        _hasBits0 |= 32;
        branches_ = value;
      }
    }
    /// <summary>Gets whether the "branches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBranches {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "branches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBranches() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "twigs" field.</summary>
    public const int TwigsFieldNumber = 7;
    private readonly static bool TwigsDefaultValue = false;

    private bool twigs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Twigs {
      get { if ((_hasBits0 & 64) != 0) { return twigs_; } else { return TwigsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        twigs_ = value;
      }
    }
    /// <summary>Gets whether the "twigs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwigs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "twigs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwigs() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "tile_type" field.</summary>
    public const int TileTypeFieldNumber = 8;
    private readonly static global::RemoteFortressReader.TiletypeSpecial TileTypeDefaultValue = global::RemoteFortressReader.TiletypeSpecial.NoSpecial;

    private global::RemoteFortressReader.TiletypeSpecial tileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TiletypeSpecial TileType {
      get { if ((_hasBits0 & 128) != 0) { return tileType_; } else { return TileTypeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        tileType_ = value;
      }
    }
    /// <summary>Gets whether the "tile_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTileType {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "tile_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTileType() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Trunk != other.Trunk) return false;
      if (ConnectionEast != other.ConnectionEast) return false;
      if (ConnectionSouth != other.ConnectionSouth) return false;
      if (ConnectionWest != other.ConnectionWest) return false;
      if (ConnectionNorth != other.ConnectionNorth) return false;
      if (Branches != other.Branches) return false;
      if (Twigs != other.Twigs) return false;
      if (TileType != other.TileType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTrunk) hash ^= Trunk.GetHashCode();
      if (HasConnectionEast) hash ^= ConnectionEast.GetHashCode();
      if (HasConnectionSouth) hash ^= ConnectionSouth.GetHashCode();
      if (HasConnectionWest) hash ^= ConnectionWest.GetHashCode();
      if (HasConnectionNorth) hash ^= ConnectionNorth.GetHashCode();
      if (HasBranches) hash ^= Branches.GetHashCode();
      if (HasTwigs) hash ^= Twigs.GetHashCode();
      if (HasTileType) hash ^= TileType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTrunk) {
        output.WriteRawTag(8);
        output.WriteBool(Trunk);
      }
      if (HasConnectionEast) {
        output.WriteRawTag(16);
        output.WriteBool(ConnectionEast);
      }
      if (HasConnectionSouth) {
        output.WriteRawTag(24);
        output.WriteBool(ConnectionSouth);
      }
      if (HasConnectionWest) {
        output.WriteRawTag(32);
        output.WriteBool(ConnectionWest);
      }
      if (HasConnectionNorth) {
        output.WriteRawTag(40);
        output.WriteBool(ConnectionNorth);
      }
      if (HasBranches) {
        output.WriteRawTag(48);
        output.WriteBool(Branches);
      }
      if (HasTwigs) {
        output.WriteRawTag(56);
        output.WriteBool(Twigs);
      }
      if (HasTileType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TileType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTrunk) {
        output.WriteRawTag(8);
        output.WriteBool(Trunk);
      }
      if (HasConnectionEast) {
        output.WriteRawTag(16);
        output.WriteBool(ConnectionEast);
      }
      if (HasConnectionSouth) {
        output.WriteRawTag(24);
        output.WriteBool(ConnectionSouth);
      }
      if (HasConnectionWest) {
        output.WriteRawTag(32);
        output.WriteBool(ConnectionWest);
      }
      if (HasConnectionNorth) {
        output.WriteRawTag(40);
        output.WriteBool(ConnectionNorth);
      }
      if (HasBranches) {
        output.WriteRawTag(48);
        output.WriteBool(Branches);
      }
      if (HasTwigs) {
        output.WriteRawTag(56);
        output.WriteBool(Twigs);
      }
      if (HasTileType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TileType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTrunk) {
        size += 1 + 1;
      }
      if (HasConnectionEast) {
        size += 1 + 1;
      }
      if (HasConnectionSouth) {
        size += 1 + 1;
      }
      if (HasConnectionWest) {
        size += 1 + 1;
      }
      if (HasConnectionNorth) {
        size += 1 + 1;
      }
      if (HasBranches) {
        size += 1 + 1;
      }
      if (HasTwigs) {
        size += 1 + 1;
      }
      if (HasTileType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TileType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantTile other) {
      if (other == null) {
        return;
      }
      if (other.HasTrunk) {
        Trunk = other.Trunk;
      }
      if (other.HasConnectionEast) {
        ConnectionEast = other.ConnectionEast;
      }
      if (other.HasConnectionSouth) {
        ConnectionSouth = other.ConnectionSouth;
      }
      if (other.HasConnectionWest) {
        ConnectionWest = other.ConnectionWest;
      }
      if (other.HasConnectionNorth) {
        ConnectionNorth = other.ConnectionNorth;
      }
      if (other.HasBranches) {
        Branches = other.Branches;
      }
      if (other.HasTwigs) {
        Twigs = other.Twigs;
      }
      if (other.HasTileType) {
        TileType = other.TileType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Trunk = input.ReadBool();
            break;
          }
          case 16: {
            ConnectionEast = input.ReadBool();
            break;
          }
          case 24: {
            ConnectionSouth = input.ReadBool();
            break;
          }
          case 32: {
            ConnectionWest = input.ReadBool();
            break;
          }
          case 40: {
            ConnectionNorth = input.ReadBool();
            break;
          }
          case 48: {
            Branches = input.ReadBool();
            break;
          }
          case 56: {
            Twigs = input.ReadBool();
            break;
          }
          case 64: {
            TileType = (global::RemoteFortressReader.TiletypeSpecial) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Trunk = input.ReadBool();
            break;
          }
          case 16: {
            ConnectionEast = input.ReadBool();
            break;
          }
          case 24: {
            ConnectionSouth = input.ReadBool();
            break;
          }
          case 32: {
            ConnectionWest = input.ReadBool();
            break;
          }
          case 40: {
            ConnectionNorth = input.ReadBool();
            break;
          }
          case 48: {
            Branches = input.ReadBool();
            break;
          }
          case 56: {
            Twigs = input.ReadBool();
            break;
          }
          case 64: {
            TileType = (global::RemoteFortressReader.TiletypeSpecial) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TreeInfo : pb::IMessage<TreeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreeInfo> _parser = new pb::MessageParser<TreeInfo>(() => new TreeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeInfo(TreeInfo other) : this() {
      size_ = other.size_ != null ? other.size_.Clone() : null;
      tiles_ = other.tiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeInfo Clone() {
      return new TreeInfo(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private global::RemoteFortressReader.Coord size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.PlantTile> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(18, global::RemoteFortressReader.PlantTile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.PlantTile> tiles_ = new pbc::RepeatedField<global::RemoteFortressReader.PlantTile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.PlantTile> Tiles {
      get { return tiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Size, other.Size)) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (size_ != null) hash ^= Size.GetHashCode();
      hash ^= tiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (size_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Size);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (size_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Size);
      }
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreeInfo other) {
      if (other == null) {
        return;
      }
      if (other.size_ != null) {
        if (size_ == null) {
          Size = new global::RemoteFortressReader.Coord();
        }
        Size.MergeFrom(other.Size);
      }
      tiles_.Add(other.tiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (size_ == null) {
              Size = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Size);
            break;
          }
          case 18: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (size_ == null) {
              Size = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Size);
            break;
          }
          case 18: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantInstance : pb::IMessage<PlantInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantInstance> _parser = new pb::MessageParser<PlantInstance>(() => new PlantInstance());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantInstance(PlantInstance other) : this() {
      _hasBits0 = other._hasBits0;
      plantType_ = other.plantType_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      treeInfo_ = other.treeInfo_ != null ? other.treeInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantInstance Clone() {
      return new PlantInstance(this);
    }

    /// <summary>Field number for the "plant_type" field.</summary>
    public const int PlantTypeFieldNumber = 1;
    private readonly static int PlantTypeDefaultValue = 0;

    private int plantType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlantType {
      get { if ((_hasBits0 & 1) != 0) { return plantType_; } else { return PlantTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        plantType_ = value;
      }
    }
    /// <summary>Gets whether the "plant_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlantType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "plant_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlantType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "tree_info" field.</summary>
    public const int TreeInfoFieldNumber = 3;
    private global::RemoteFortressReader.TreeInfo treeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TreeInfo TreeInfo {
      get { return treeInfo_; }
      set {
        treeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlantType != other.PlantType) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(TreeInfo, other.TreeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlantType) hash ^= PlantType.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (treeInfo_ != null) hash ^= TreeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlantType) {
        output.WriteRawTag(8);
        output.WriteInt32(PlantType);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (treeInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TreeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlantType) {
        output.WriteRawTag(8);
        output.WriteInt32(PlantType);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (treeInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TreeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlantType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlantType);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (treeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TreeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantInstance other) {
      if (other == null) {
        return;
      }
      if (other.HasPlantType) {
        PlantType = other.PlantType;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.treeInfo_ != null) {
        if (treeInfo_ == null) {
          TreeInfo = new global::RemoteFortressReader.TreeInfo();
        }
        TreeInfo.MergeFrom(other.TreeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlantType = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (treeInfo_ == null) {
              TreeInfo = new global::RemoteFortressReader.TreeInfo();
            }
            input.ReadMessage(TreeInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlantType = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (treeInfo_ == null) {
              TreeInfo = new global::RemoteFortressReader.TreeInfo();
            }
            input.ReadMessage(TreeInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapBlock : pb::IMessage<MapBlock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapBlock> _parser = new pb::MessageParser<MapBlock>(() => new MapBlock());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapBlock(MapBlock other) : this() {
      _hasBits0 = other._hasBits0;
      mapX_ = other.mapX_;
      mapY_ = other.mapY_;
      mapZ_ = other.mapZ_;
      tiles_ = other.tiles_.Clone();
      materials_ = other.materials_.Clone();
      layerMaterials_ = other.layerMaterials_.Clone();
      veinMaterials_ = other.veinMaterials_.Clone();
      baseMaterials_ = other.baseMaterials_.Clone();
      magma_ = other.magma_.Clone();
      water_ = other.water_.Clone();
      hidden_ = other.hidden_.Clone();
      light_ = other.light_.Clone();
      subterranean_ = other.subterranean_.Clone();
      outside_ = other.outside_.Clone();
      aquifer_ = other.aquifer_.Clone();
      waterStagnant_ = other.waterStagnant_.Clone();
      waterSalt_ = other.waterSalt_.Clone();
      constructionItems_ = other.constructionItems_.Clone();
      buildings_ = other.buildings_.Clone();
      treePercent_ = other.treePercent_.Clone();
      treeX_ = other.treeX_.Clone();
      treeY_ = other.treeY_.Clone();
      treeZ_ = other.treeZ_.Clone();
      tileDigDesignation_ = other.tileDigDesignation_.Clone();
      spatterPile_ = other.spatterPile_.Clone();
      items_ = other.items_.Clone();
      tileDigDesignationMarker_ = other.tileDigDesignationMarker_.Clone();
      tileDigDesignationAuto_ = other.tileDigDesignationAuto_.Clone();
      grassPercent_ = other.grassPercent_.Clone();
      flows_ = other.flows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapBlock Clone() {
      return new MapBlock(this);
    }

    /// <summary>Field number for the "map_x" field.</summary>
    public const int MapXFieldNumber = 1;
    private readonly static int MapXDefaultValue = 0;

    private int mapX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapX {
      get { if ((_hasBits0 & 1) != 0) { return mapX_; } else { return MapXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapX_ = value;
      }
    }
    /// <summary>Gets whether the "map_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "map_y" field.</summary>
    public const int MapYFieldNumber = 2;
    private readonly static int MapYDefaultValue = 0;

    private int mapY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapY {
      get { if ((_hasBits0 & 2) != 0) { return mapY_; } else { return MapYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mapY_ = value;
      }
    }
    /// <summary>Gets whether the "map_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "map_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "map_z" field.</summary>
    public const int MapZFieldNumber = 3;
    private readonly static int MapZDefaultValue = 0;

    private int mapZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapZ {
      get { if ((_hasBits0 & 4) != 0) { return mapZ_; } else { return MapZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mapZ_ = value;
      }
    }
    /// <summary>Gets whether the "map_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "map_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_tiles_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> tiles_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Tiles {
      get { return tiles_; }
    }

    /// <summary>Field number for the "materials" field.</summary>
    public const int MaterialsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_materials_codec
        = pb::FieldCodec.ForMessage(42, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> materials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> Materials {
      get { return materials_; }
    }

    /// <summary>Field number for the "layer_materials" field.</summary>
    public const int LayerMaterialsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_layerMaterials_codec
        = pb::FieldCodec.ForMessage(50, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> layerMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> LayerMaterials {
      get { return layerMaterials_; }
    }

    /// <summary>Field number for the "vein_materials" field.</summary>
    public const int VeinMaterialsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_veinMaterials_codec
        = pb::FieldCodec.ForMessage(58, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> veinMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> VeinMaterials {
      get { return veinMaterials_; }
    }

    /// <summary>Field number for the "base_materials" field.</summary>
    public const int BaseMaterialsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_baseMaterials_codec
        = pb::FieldCodec.ForMessage(66, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> baseMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> BaseMaterials {
      get { return baseMaterials_; }
    }

    /// <summary>Field number for the "magma" field.</summary>
    public const int MagmaFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_magma_codec
        = pb::FieldCodec.ForInt32(72);
    private readonly pbc::RepeatedField<int> magma_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Magma {
      get { return magma_; }
    }

    /// <summary>Field number for the "water" field.</summary>
    public const int WaterFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_water_codec
        = pb::FieldCodec.ForInt32(80);
    private readonly pbc::RepeatedField<int> water_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Water {
      get { return water_; }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 11;
    private static readonly pb::FieldCodec<bool> _repeated_hidden_codec
        = pb::FieldCodec.ForBool(88);
    private readonly pbc::RepeatedField<bool> hidden_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Hidden {
      get { return hidden_; }
    }

    /// <summary>Field number for the "light" field.</summary>
    public const int LightFieldNumber = 12;
    private static readonly pb::FieldCodec<bool> _repeated_light_codec
        = pb::FieldCodec.ForBool(96);
    private readonly pbc::RepeatedField<bool> light_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Light {
      get { return light_; }
    }

    /// <summary>Field number for the "subterranean" field.</summary>
    public const int SubterraneanFieldNumber = 13;
    private static readonly pb::FieldCodec<bool> _repeated_subterranean_codec
        = pb::FieldCodec.ForBool(104);
    private readonly pbc::RepeatedField<bool> subterranean_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Subterranean {
      get { return subterranean_; }
    }

    /// <summary>Field number for the "outside" field.</summary>
    public const int OutsideFieldNumber = 14;
    private static readonly pb::FieldCodec<bool> _repeated_outside_codec
        = pb::FieldCodec.ForBool(112);
    private readonly pbc::RepeatedField<bool> outside_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Outside {
      get { return outside_; }
    }

    /// <summary>Field number for the "aquifer" field.</summary>
    public const int AquiferFieldNumber = 15;
    private static readonly pb::FieldCodec<bool> _repeated_aquifer_codec
        = pb::FieldCodec.ForBool(120);
    private readonly pbc::RepeatedField<bool> aquifer_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Aquifer {
      get { return aquifer_; }
    }

    /// <summary>Field number for the "water_stagnant" field.</summary>
    public const int WaterStagnantFieldNumber = 16;
    private static readonly pb::FieldCodec<bool> _repeated_waterStagnant_codec
        = pb::FieldCodec.ForBool(128);
    private readonly pbc::RepeatedField<bool> waterStagnant_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> WaterStagnant {
      get { return waterStagnant_; }
    }

    /// <summary>Field number for the "water_salt" field.</summary>
    public const int WaterSaltFieldNumber = 17;
    private static readonly pb::FieldCodec<bool> _repeated_waterSalt_codec
        = pb::FieldCodec.ForBool(136);
    private readonly pbc::RepeatedField<bool> waterSalt_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> WaterSalt {
      get { return waterSalt_; }
    }

    /// <summary>Field number for the "construction_items" field.</summary>
    public const int ConstructionItemsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_constructionItems_codec
        = pb::FieldCodec.ForMessage(146, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> constructionItems_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> ConstructionItems {
      get { return constructionItems_; }
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 19;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BuildingInstance> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(154, global::RemoteFortressReader.BuildingInstance.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BuildingInstance> buildings_ = new pbc::RepeatedField<global::RemoteFortressReader.BuildingInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BuildingInstance> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "tree_percent" field.</summary>
    public const int TreePercentFieldNumber = 20;
    private static readonly pb::FieldCodec<int> _repeated_treePercent_codec
        = pb::FieldCodec.ForInt32(160);
    private readonly pbc::RepeatedField<int> treePercent_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TreePercent {
      get { return treePercent_; }
    }

    /// <summary>Field number for the "tree_x" field.</summary>
    public const int TreeXFieldNumber = 21;
    private static readonly pb::FieldCodec<int> _repeated_treeX_codec
        = pb::FieldCodec.ForInt32(168);
    private readonly pbc::RepeatedField<int> treeX_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TreeX {
      get { return treeX_; }
    }

    /// <summary>Field number for the "tree_y" field.</summary>
    public const int TreeYFieldNumber = 22;
    private static readonly pb::FieldCodec<int> _repeated_treeY_codec
        = pb::FieldCodec.ForInt32(176);
    private readonly pbc::RepeatedField<int> treeY_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TreeY {
      get { return treeY_; }
    }

    /// <summary>Field number for the "tree_z" field.</summary>
    public const int TreeZFieldNumber = 23;
    private static readonly pb::FieldCodec<int> _repeated_treeZ_codec
        = pb::FieldCodec.ForInt32(184);
    private readonly pbc::RepeatedField<int> treeZ_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TreeZ {
      get { return treeZ_; }
    }

    /// <summary>Field number for the "tile_dig_designation" field.</summary>
    public const int TileDigDesignationFieldNumber = 24;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.TileDigDesignation> _repeated_tileDigDesignation_codec
        = pb::FieldCodec.ForEnum(192, x => (int) x, x => (global::RemoteFortressReader.TileDigDesignation) x);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.TileDigDesignation> tileDigDesignation_ = new pbc::RepeatedField<global::RemoteFortressReader.TileDigDesignation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.TileDigDesignation> TileDigDesignation {
      get { return tileDigDesignation_; }
    }

    /// <summary>Field number for the "spatterPile" field.</summary>
    public const int SpatterPileFieldNumber = 25;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.SpatterPile> _repeated_spatterPile_codec
        = pb::FieldCodec.ForMessage(202, global::RemoteFortressReader.SpatterPile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.SpatterPile> spatterPile_ = new pbc::RepeatedField<global::RemoteFortressReader.SpatterPile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.SpatterPile> SpatterPile {
      get { return spatterPile_; }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 26;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(210, global::RemoteFortressReader.Item.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Item> items_ = new pbc::RepeatedField<global::RemoteFortressReader.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "tile_dig_designation_marker" field.</summary>
    public const int TileDigDesignationMarkerFieldNumber = 27;
    private static readonly pb::FieldCodec<bool> _repeated_tileDigDesignationMarker_codec
        = pb::FieldCodec.ForBool(216);
    private readonly pbc::RepeatedField<bool> tileDigDesignationMarker_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> TileDigDesignationMarker {
      get { return tileDigDesignationMarker_; }
    }

    /// <summary>Field number for the "tile_dig_designation_auto" field.</summary>
    public const int TileDigDesignationAutoFieldNumber = 28;
    private static readonly pb::FieldCodec<bool> _repeated_tileDigDesignationAuto_codec
        = pb::FieldCodec.ForBool(224);
    private readonly pbc::RepeatedField<bool> tileDigDesignationAuto_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> TileDigDesignationAuto {
      get { return tileDigDesignationAuto_; }
    }

    /// <summary>Field number for the "grass_percent" field.</summary>
    public const int GrassPercentFieldNumber = 29;
    private static readonly pb::FieldCodec<int> _repeated_grassPercent_codec
        = pb::FieldCodec.ForInt32(232);
    private readonly pbc::RepeatedField<int> grassPercent_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> GrassPercent {
      get { return grassPercent_; }
    }

    /// <summary>Field number for the "flows" field.</summary>
    public const int FlowsFieldNumber = 30;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.FlowInfo> _repeated_flows_codec
        = pb::FieldCodec.ForMessage(242, global::RemoteFortressReader.FlowInfo.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.FlowInfo> flows_ = new pbc::RepeatedField<global::RemoteFortressReader.FlowInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.FlowInfo> Flows {
      get { return flows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapX != other.MapX) return false;
      if (MapY != other.MapY) return false;
      if (MapZ != other.MapZ) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      if(!materials_.Equals(other.materials_)) return false;
      if(!layerMaterials_.Equals(other.layerMaterials_)) return false;
      if(!veinMaterials_.Equals(other.veinMaterials_)) return false;
      if(!baseMaterials_.Equals(other.baseMaterials_)) return false;
      if(!magma_.Equals(other.magma_)) return false;
      if(!water_.Equals(other.water_)) return false;
      if(!hidden_.Equals(other.hidden_)) return false;
      if(!light_.Equals(other.light_)) return false;
      if(!subterranean_.Equals(other.subterranean_)) return false;
      if(!outside_.Equals(other.outside_)) return false;
      if(!aquifer_.Equals(other.aquifer_)) return false;
      if(!waterStagnant_.Equals(other.waterStagnant_)) return false;
      if(!waterSalt_.Equals(other.waterSalt_)) return false;
      if(!constructionItems_.Equals(other.constructionItems_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!treePercent_.Equals(other.treePercent_)) return false;
      if(!treeX_.Equals(other.treeX_)) return false;
      if(!treeY_.Equals(other.treeY_)) return false;
      if(!treeZ_.Equals(other.treeZ_)) return false;
      if(!tileDigDesignation_.Equals(other.tileDigDesignation_)) return false;
      if(!spatterPile_.Equals(other.spatterPile_)) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!tileDigDesignationMarker_.Equals(other.tileDigDesignationMarker_)) return false;
      if(!tileDigDesignationAuto_.Equals(other.tileDigDesignationAuto_)) return false;
      if(!grassPercent_.Equals(other.grassPercent_)) return false;
      if(!flows_.Equals(other.flows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapX) hash ^= MapX.GetHashCode();
      if (HasMapY) hash ^= MapY.GetHashCode();
      if (HasMapZ) hash ^= MapZ.GetHashCode();
      hash ^= tiles_.GetHashCode();
      hash ^= materials_.GetHashCode();
      hash ^= layerMaterials_.GetHashCode();
      hash ^= veinMaterials_.GetHashCode();
      hash ^= baseMaterials_.GetHashCode();
      hash ^= magma_.GetHashCode();
      hash ^= water_.GetHashCode();
      hash ^= hidden_.GetHashCode();
      hash ^= light_.GetHashCode();
      hash ^= subterranean_.GetHashCode();
      hash ^= outside_.GetHashCode();
      hash ^= aquifer_.GetHashCode();
      hash ^= waterStagnant_.GetHashCode();
      hash ^= waterSalt_.GetHashCode();
      hash ^= constructionItems_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= treePercent_.GetHashCode();
      hash ^= treeX_.GetHashCode();
      hash ^= treeY_.GetHashCode();
      hash ^= treeZ_.GetHashCode();
      hash ^= tileDigDesignation_.GetHashCode();
      hash ^= spatterPile_.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= tileDigDesignationMarker_.GetHashCode();
      hash ^= tileDigDesignationAuto_.GetHashCode();
      hash ^= grassPercent_.GetHashCode();
      hash ^= flows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapX) {
        output.WriteRawTag(8);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(16);
        output.WriteInt32(MapY);
      }
      if (HasMapZ) {
        output.WriteRawTag(24);
        output.WriteInt32(MapZ);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      materials_.WriteTo(output, _repeated_materials_codec);
      layerMaterials_.WriteTo(output, _repeated_layerMaterials_codec);
      veinMaterials_.WriteTo(output, _repeated_veinMaterials_codec);
      baseMaterials_.WriteTo(output, _repeated_baseMaterials_codec);
      magma_.WriteTo(output, _repeated_magma_codec);
      water_.WriteTo(output, _repeated_water_codec);
      hidden_.WriteTo(output, _repeated_hidden_codec);
      light_.WriteTo(output, _repeated_light_codec);
      subterranean_.WriteTo(output, _repeated_subterranean_codec);
      outside_.WriteTo(output, _repeated_outside_codec);
      aquifer_.WriteTo(output, _repeated_aquifer_codec);
      waterStagnant_.WriteTo(output, _repeated_waterStagnant_codec);
      waterSalt_.WriteTo(output, _repeated_waterSalt_codec);
      constructionItems_.WriteTo(output, _repeated_constructionItems_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      treePercent_.WriteTo(output, _repeated_treePercent_codec);
      treeX_.WriteTo(output, _repeated_treeX_codec);
      treeY_.WriteTo(output, _repeated_treeY_codec);
      treeZ_.WriteTo(output, _repeated_treeZ_codec);
      tileDigDesignation_.WriteTo(output, _repeated_tileDigDesignation_codec);
      spatterPile_.WriteTo(output, _repeated_spatterPile_codec);
      items_.WriteTo(output, _repeated_items_codec);
      tileDigDesignationMarker_.WriteTo(output, _repeated_tileDigDesignationMarker_codec);
      tileDigDesignationAuto_.WriteTo(output, _repeated_tileDigDesignationAuto_codec);
      grassPercent_.WriteTo(output, _repeated_grassPercent_codec);
      flows_.WriteTo(output, _repeated_flows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapX) {
        output.WriteRawTag(8);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(16);
        output.WriteInt32(MapY);
      }
      if (HasMapZ) {
        output.WriteRawTag(24);
        output.WriteInt32(MapZ);
      }
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      materials_.WriteTo(ref output, _repeated_materials_codec);
      layerMaterials_.WriteTo(ref output, _repeated_layerMaterials_codec);
      veinMaterials_.WriteTo(ref output, _repeated_veinMaterials_codec);
      baseMaterials_.WriteTo(ref output, _repeated_baseMaterials_codec);
      magma_.WriteTo(ref output, _repeated_magma_codec);
      water_.WriteTo(ref output, _repeated_water_codec);
      hidden_.WriteTo(ref output, _repeated_hidden_codec);
      light_.WriteTo(ref output, _repeated_light_codec);
      subterranean_.WriteTo(ref output, _repeated_subterranean_codec);
      outside_.WriteTo(ref output, _repeated_outside_codec);
      aquifer_.WriteTo(ref output, _repeated_aquifer_codec);
      waterStagnant_.WriteTo(ref output, _repeated_waterStagnant_codec);
      waterSalt_.WriteTo(ref output, _repeated_waterSalt_codec);
      constructionItems_.WriteTo(ref output, _repeated_constructionItems_codec);
      buildings_.WriteTo(ref output, _repeated_buildings_codec);
      treePercent_.WriteTo(ref output, _repeated_treePercent_codec);
      treeX_.WriteTo(ref output, _repeated_treeX_codec);
      treeY_.WriteTo(ref output, _repeated_treeY_codec);
      treeZ_.WriteTo(ref output, _repeated_treeZ_codec);
      tileDigDesignation_.WriteTo(ref output, _repeated_tileDigDesignation_codec);
      spatterPile_.WriteTo(ref output, _repeated_spatterPile_codec);
      items_.WriteTo(ref output, _repeated_items_codec);
      tileDigDesignationMarker_.WriteTo(ref output, _repeated_tileDigDesignationMarker_codec);
      tileDigDesignationAuto_.WriteTo(ref output, _repeated_tileDigDesignationAuto_codec);
      grassPercent_.WriteTo(ref output, _repeated_grassPercent_codec);
      flows_.WriteTo(ref output, _repeated_flows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapX);
      }
      if (HasMapY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapY);
      }
      if (HasMapZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapZ);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      size += materials_.CalculateSize(_repeated_materials_codec);
      size += layerMaterials_.CalculateSize(_repeated_layerMaterials_codec);
      size += veinMaterials_.CalculateSize(_repeated_veinMaterials_codec);
      size += baseMaterials_.CalculateSize(_repeated_baseMaterials_codec);
      size += magma_.CalculateSize(_repeated_magma_codec);
      size += water_.CalculateSize(_repeated_water_codec);
      size += hidden_.CalculateSize(_repeated_hidden_codec);
      size += light_.CalculateSize(_repeated_light_codec);
      size += subterranean_.CalculateSize(_repeated_subterranean_codec);
      size += outside_.CalculateSize(_repeated_outside_codec);
      size += aquifer_.CalculateSize(_repeated_aquifer_codec);
      size += waterStagnant_.CalculateSize(_repeated_waterStagnant_codec);
      size += waterSalt_.CalculateSize(_repeated_waterSalt_codec);
      size += constructionItems_.CalculateSize(_repeated_constructionItems_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += treePercent_.CalculateSize(_repeated_treePercent_codec);
      size += treeX_.CalculateSize(_repeated_treeX_codec);
      size += treeY_.CalculateSize(_repeated_treeY_codec);
      size += treeZ_.CalculateSize(_repeated_treeZ_codec);
      size += tileDigDesignation_.CalculateSize(_repeated_tileDigDesignation_codec);
      size += spatterPile_.CalculateSize(_repeated_spatterPile_codec);
      size += items_.CalculateSize(_repeated_items_codec);
      size += tileDigDesignationMarker_.CalculateSize(_repeated_tileDigDesignationMarker_codec);
      size += tileDigDesignationAuto_.CalculateSize(_repeated_tileDigDesignationAuto_codec);
      size += grassPercent_.CalculateSize(_repeated_grassPercent_codec);
      size += flows_.CalculateSize(_repeated_flows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapBlock other) {
      if (other == null) {
        return;
      }
      if (other.HasMapX) {
        MapX = other.MapX;
      }
      if (other.HasMapY) {
        MapY = other.MapY;
      }
      if (other.HasMapZ) {
        MapZ = other.MapZ;
      }
      tiles_.Add(other.tiles_);
      materials_.Add(other.materials_);
      layerMaterials_.Add(other.layerMaterials_);
      veinMaterials_.Add(other.veinMaterials_);
      baseMaterials_.Add(other.baseMaterials_);
      magma_.Add(other.magma_);
      water_.Add(other.water_);
      hidden_.Add(other.hidden_);
      light_.Add(other.light_);
      subterranean_.Add(other.subterranean_);
      outside_.Add(other.outside_);
      aquifer_.Add(other.aquifer_);
      waterStagnant_.Add(other.waterStagnant_);
      waterSalt_.Add(other.waterSalt_);
      constructionItems_.Add(other.constructionItems_);
      buildings_.Add(other.buildings_);
      treePercent_.Add(other.treePercent_);
      treeX_.Add(other.treeX_);
      treeY_.Add(other.treeY_);
      treeZ_.Add(other.treeZ_);
      tileDigDesignation_.Add(other.tileDigDesignation_);
      spatterPile_.Add(other.spatterPile_);
      items_.Add(other.items_);
      tileDigDesignationMarker_.Add(other.tileDigDesignationMarker_);
      tileDigDesignationAuto_.Add(other.tileDigDesignationAuto_);
      grassPercent_.Add(other.grassPercent_);
      flows_.Add(other.flows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapX = input.ReadInt32();
            break;
          }
          case 16: {
            MapY = input.ReadInt32();
            break;
          }
          case 24: {
            MapZ = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
          case 42: {
            materials_.AddEntriesFrom(input, _repeated_materials_codec);
            break;
          }
          case 50: {
            layerMaterials_.AddEntriesFrom(input, _repeated_layerMaterials_codec);
            break;
          }
          case 58: {
            veinMaterials_.AddEntriesFrom(input, _repeated_veinMaterials_codec);
            break;
          }
          case 66: {
            baseMaterials_.AddEntriesFrom(input, _repeated_baseMaterials_codec);
            break;
          }
          case 74:
          case 72: {
            magma_.AddEntriesFrom(input, _repeated_magma_codec);
            break;
          }
          case 82:
          case 80: {
            water_.AddEntriesFrom(input, _repeated_water_codec);
            break;
          }
          case 90:
          case 88: {
            hidden_.AddEntriesFrom(input, _repeated_hidden_codec);
            break;
          }
          case 98:
          case 96: {
            light_.AddEntriesFrom(input, _repeated_light_codec);
            break;
          }
          case 106:
          case 104: {
            subterranean_.AddEntriesFrom(input, _repeated_subterranean_codec);
            break;
          }
          case 114:
          case 112: {
            outside_.AddEntriesFrom(input, _repeated_outside_codec);
            break;
          }
          case 122:
          case 120: {
            aquifer_.AddEntriesFrom(input, _repeated_aquifer_codec);
            break;
          }
          case 130:
          case 128: {
            waterStagnant_.AddEntriesFrom(input, _repeated_waterStagnant_codec);
            break;
          }
          case 138:
          case 136: {
            waterSalt_.AddEntriesFrom(input, _repeated_waterSalt_codec);
            break;
          }
          case 146: {
            constructionItems_.AddEntriesFrom(input, _repeated_constructionItems_codec);
            break;
          }
          case 154: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 162:
          case 160: {
            treePercent_.AddEntriesFrom(input, _repeated_treePercent_codec);
            break;
          }
          case 170:
          case 168: {
            treeX_.AddEntriesFrom(input, _repeated_treeX_codec);
            break;
          }
          case 178:
          case 176: {
            treeY_.AddEntriesFrom(input, _repeated_treeY_codec);
            break;
          }
          case 186:
          case 184: {
            treeZ_.AddEntriesFrom(input, _repeated_treeZ_codec);
            break;
          }
          case 194:
          case 192: {
            tileDigDesignation_.AddEntriesFrom(input, _repeated_tileDigDesignation_codec);
            break;
          }
          case 202: {
            spatterPile_.AddEntriesFrom(input, _repeated_spatterPile_codec);
            break;
          }
          case 210: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 218:
          case 216: {
            tileDigDesignationMarker_.AddEntriesFrom(input, _repeated_tileDigDesignationMarker_codec);
            break;
          }
          case 226:
          case 224: {
            tileDigDesignationAuto_.AddEntriesFrom(input, _repeated_tileDigDesignationAuto_codec);
            break;
          }
          case 234:
          case 232: {
            grassPercent_.AddEntriesFrom(input, _repeated_grassPercent_codec);
            break;
          }
          case 242: {
            flows_.AddEntriesFrom(input, _repeated_flows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapX = input.ReadInt32();
            break;
          }
          case 16: {
            MapY = input.ReadInt32();
            break;
          }
          case 24: {
            MapZ = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
          case 42: {
            materials_.AddEntriesFrom(ref input, _repeated_materials_codec);
            break;
          }
          case 50: {
            layerMaterials_.AddEntriesFrom(ref input, _repeated_layerMaterials_codec);
            break;
          }
          case 58: {
            veinMaterials_.AddEntriesFrom(ref input, _repeated_veinMaterials_codec);
            break;
          }
          case 66: {
            baseMaterials_.AddEntriesFrom(ref input, _repeated_baseMaterials_codec);
            break;
          }
          case 74:
          case 72: {
            magma_.AddEntriesFrom(ref input, _repeated_magma_codec);
            break;
          }
          case 82:
          case 80: {
            water_.AddEntriesFrom(ref input, _repeated_water_codec);
            break;
          }
          case 90:
          case 88: {
            hidden_.AddEntriesFrom(ref input, _repeated_hidden_codec);
            break;
          }
          case 98:
          case 96: {
            light_.AddEntriesFrom(ref input, _repeated_light_codec);
            break;
          }
          case 106:
          case 104: {
            subterranean_.AddEntriesFrom(ref input, _repeated_subterranean_codec);
            break;
          }
          case 114:
          case 112: {
            outside_.AddEntriesFrom(ref input, _repeated_outside_codec);
            break;
          }
          case 122:
          case 120: {
            aquifer_.AddEntriesFrom(ref input, _repeated_aquifer_codec);
            break;
          }
          case 130:
          case 128: {
            waterStagnant_.AddEntriesFrom(ref input, _repeated_waterStagnant_codec);
            break;
          }
          case 138:
          case 136: {
            waterSalt_.AddEntriesFrom(ref input, _repeated_waterSalt_codec);
            break;
          }
          case 146: {
            constructionItems_.AddEntriesFrom(ref input, _repeated_constructionItems_codec);
            break;
          }
          case 154: {
            buildings_.AddEntriesFrom(ref input, _repeated_buildings_codec);
            break;
          }
          case 162:
          case 160: {
            treePercent_.AddEntriesFrom(ref input, _repeated_treePercent_codec);
            break;
          }
          case 170:
          case 168: {
            treeX_.AddEntriesFrom(ref input, _repeated_treeX_codec);
            break;
          }
          case 178:
          case 176: {
            treeY_.AddEntriesFrom(ref input, _repeated_treeY_codec);
            break;
          }
          case 186:
          case 184: {
            treeZ_.AddEntriesFrom(ref input, _repeated_treeZ_codec);
            break;
          }
          case 194:
          case 192: {
            tileDigDesignation_.AddEntriesFrom(ref input, _repeated_tileDigDesignation_codec);
            break;
          }
          case 202: {
            spatterPile_.AddEntriesFrom(ref input, _repeated_spatterPile_codec);
            break;
          }
          case 210: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 218:
          case 216: {
            tileDigDesignationMarker_.AddEntriesFrom(ref input, _repeated_tileDigDesignationMarker_codec);
            break;
          }
          case 226:
          case 224: {
            tileDigDesignationAuto_.AddEntriesFrom(ref input, _repeated_tileDigDesignationAuto_codec);
            break;
          }
          case 234:
          case 232: {
            grassPercent_.AddEntriesFrom(ref input, _repeated_grassPercent_codec);
            break;
          }
          case 242: {
            flows_.AddEntriesFrom(ref input, _repeated_flows_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatPair : pb::IMessage<MatPair>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatPair> _parser = new pb::MessageParser<MatPair>(() => new MatPair());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatPair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatPair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatPair(MatPair other) : this() {
      _hasBits0 = other._hasBits0;
      matType_ = other.matType_;
      matIndex_ = other.matIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatPair Clone() {
      return new MatPair(this);
    }

    /// <summary>Field number for the "mat_type" field.</summary>
    public const int MatTypeFieldNumber = 1;
    private readonly static int MatTypeDefaultValue = 0;

    private int matType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatType {
      get { if ((_hasBits0 & 1) != 0) { return matType_; } else { return MatTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        matType_ = value;
      }
    }
    /// <summary>Gets whether the "mat_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMatType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mat_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mat_index" field.</summary>
    public const int MatIndexFieldNumber = 2;
    private readonly static int MatIndexDefaultValue = 0;

    private int matIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatIndex {
      get { if ((_hasBits0 & 2) != 0) { return matIndex_; } else { return MatIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        matIndex_ = value;
      }
    }
    /// <summary>Gets whether the "mat_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMatIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mat_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatPair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatPair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatType != other.MatType) return false;
      if (MatIndex != other.MatIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMatType) hash ^= MatType.GetHashCode();
      if (HasMatIndex) hash ^= MatIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMatType) {
        output.WriteRawTag(8);
        output.WriteInt32(MatType);
      }
      if (HasMatIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(MatIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMatType) {
        output.WriteRawTag(8);
        output.WriteInt32(MatType);
      }
      if (HasMatIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(MatIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMatType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatType);
      }
      if (HasMatIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatPair other) {
      if (other == null) {
        return;
      }
      if (other.HasMatType) {
        MatType = other.MatType;
      }
      if (other.HasMatIndex) {
        MatIndex = other.MatIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatType = input.ReadInt32();
            break;
          }
          case 16: {
            MatIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MatType = input.ReadInt32();
            break;
          }
          case 16: {
            MatIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ColorDefinition : pb::IMessage<ColorDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColorDefinition> _parser = new pb::MessageParser<ColorDefinition>(() => new ColorDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColorDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorDefinition(ColorDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      red_ = other.red_;
      green_ = other.green_;
      blue_ = other.blue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorDefinition Clone() {
      return new ColorDefinition(this);
    }

    /// <summary>Field number for the "red" field.</summary>
    public const int RedFieldNumber = 1;
    private readonly static int RedDefaultValue = 0;

    private int red_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Red {
      get { if ((_hasBits0 & 1) != 0) { return red_; } else { return RedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        red_ = value;
      }
    }
    /// <summary>Gets whether the "red" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "red" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "green" field.</summary>
    public const int GreenFieldNumber = 2;
    private readonly static int GreenDefaultValue = 0;

    private int green_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Green {
      get { if ((_hasBits0 & 2) != 0) { return green_; } else { return GreenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        green_ = value;
      }
    }
    /// <summary>Gets whether the "green" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGreen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "green" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGreen() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "blue" field.</summary>
    public const int BlueFieldNumber = 3;
    private readonly static int BlueDefaultValue = 0;

    private int blue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Blue {
      get { if ((_hasBits0 & 4) != 0) { return blue_; } else { return BlueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        blue_ = value;
      }
    }
    /// <summary>Gets whether the "blue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "blue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlue() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColorDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColorDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Red != other.Red) return false;
      if (Green != other.Green) return false;
      if (Blue != other.Blue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRed) hash ^= Red.GetHashCode();
      if (HasGreen) hash ^= Green.GetHashCode();
      if (HasBlue) hash ^= Blue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRed) {
        output.WriteRawTag(8);
        output.WriteInt32(Red);
      }
      if (HasGreen) {
        output.WriteRawTag(16);
        output.WriteInt32(Green);
      }
      if (HasBlue) {
        output.WriteRawTag(24);
        output.WriteInt32(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRed) {
        output.WriteRawTag(8);
        output.WriteInt32(Red);
      }
      if (HasGreen) {
        output.WriteRawTag(16);
        output.WriteInt32(Green);
      }
      if (HasBlue) {
        output.WriteRawTag(24);
        output.WriteInt32(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Red);
      }
      if (HasGreen) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Green);
      }
      if (HasBlue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColorDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasRed) {
        Red = other.Red;
      }
      if (other.HasGreen) {
        Green = other.Green;
      }
      if (other.HasBlue) {
        Blue = other.Blue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Red = input.ReadInt32();
            break;
          }
          case 16: {
            Green = input.ReadInt32();
            break;
          }
          case 24: {
            Blue = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Red = input.ReadInt32();
            break;
          }
          case 16: {
            Green = input.ReadInt32();
            break;
          }
          case 24: {
            Blue = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MaterialDefinition : pb::IMessage<MaterialDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaterialDefinition> _parser = new pb::MessageParser<MaterialDefinition>(() => new MaterialDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MaterialDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialDefinition(MaterialDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      matPair_ = other.matPair_ != null ? other.matPair_.Clone() : null;
      id_ = other.id_;
      name_ = other.name_;
      stateColor_ = other.stateColor_ != null ? other.stateColor_.Clone() : null;
      instrument_ = other.instrument_ != null ? other.instrument_.Clone() : null;
      upStep_ = other.upStep_;
      downStep_ = other.downStep_;
      layer_ = other.layer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialDefinition Clone() {
      return new MaterialDefinition(this);
    }

    /// <summary>Field number for the "mat_pair" field.</summary>
    public const int MatPairFieldNumber = 1;
    private global::RemoteFortressReader.MatPair matPair_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair MatPair {
      get { return matPair_; }
      set {
        matPair_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "state_color" field.</summary>
    public const int StateColorFieldNumber = 4;
    private global::RemoteFortressReader.ColorDefinition stateColor_;
    /// <summary>
    ///Simplifying colors to assume room temperature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ColorDefinition StateColor {
      get { return stateColor_; }
      set {
        stateColor_ = value;
      }
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 5;
    private global::ItemdefInstrument.InstrumentDef instrument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ItemdefInstrument.InstrumentDef Instrument {
      get { return instrument_; }
      set {
        instrument_ = value;
      }
    }

    /// <summary>Field number for the "up_step" field.</summary>
    public const int UpStepFieldNumber = 6;
    private readonly static int UpStepDefaultValue = 0;

    private int upStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpStep {
      get { if ((_hasBits0 & 1) != 0) { return upStep_; } else { return UpStepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        upStep_ = value;
      }
    }
    /// <summary>Gets whether the "up_step" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpStep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "up_step" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpStep() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "down_step" field.</summary>
    public const int DownStepFieldNumber = 7;
    private readonly static int DownStepDefaultValue = 0;

    private int downStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DownStep {
      get { if ((_hasBits0 & 2) != 0) { return downStep_; } else { return DownStepDefaultValue; } }
      set {
        _hasBits0 |= 2;
        downStep_ = value;
      }
    }
    /// <summary>Gets whether the "down_step" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDownStep {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "down_step" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDownStep() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 8;
    private readonly static global::RemoteFortressReader.ArmorLayer LayerDefaultValue = global::RemoteFortressReader.ArmorLayer.LayerUnder;

    private global::RemoteFortressReader.ArmorLayer layer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArmorLayer Layer {
      get { if ((_hasBits0 & 4) != 0) { return layer_; } else { return LayerDefaultValue; } }
      set {
        _hasBits0 |= 4;
        layer_ = value;
      }
    }
    /// <summary>Gets whether the "layer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayer {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "layer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayer() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MaterialDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MaterialDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MatPair, other.MatPair)) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(StateColor, other.StateColor)) return false;
      if (!object.Equals(Instrument, other.Instrument)) return false;
      if (UpStep != other.UpStep) return false;
      if (DownStep != other.DownStep) return false;
      if (Layer != other.Layer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (matPair_ != null) hash ^= MatPair.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (stateColor_ != null) hash ^= StateColor.GetHashCode();
      if (instrument_ != null) hash ^= Instrument.GetHashCode();
      if (HasUpStep) hash ^= UpStep.GetHashCode();
      if (HasDownStep) hash ^= DownStep.GetHashCode();
      if (HasLayer) hash ^= Layer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matPair_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatPair);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (stateColor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StateColor);
      }
      if (instrument_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Instrument);
      }
      if (HasUpStep) {
        output.WriteRawTag(48);
        output.WriteInt32(UpStep);
      }
      if (HasDownStep) {
        output.WriteRawTag(56);
        output.WriteInt32(DownStep);
      }
      if (HasLayer) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Layer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matPair_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatPair);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (stateColor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StateColor);
      }
      if (instrument_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Instrument);
      }
      if (HasUpStep) {
        output.WriteRawTag(48);
        output.WriteInt32(UpStep);
      }
      if (HasDownStep) {
        output.WriteRawTag(56);
        output.WriteInt32(DownStep);
      }
      if (HasLayer) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Layer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (matPair_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatPair);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (stateColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateColor);
      }
      if (instrument_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instrument);
      }
      if (HasUpStep) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpStep);
      }
      if (HasDownStep) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DownStep);
      }
      if (HasLayer) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MaterialDefinition other) {
      if (other == null) {
        return;
      }
      if (other.matPair_ != null) {
        if (matPair_ == null) {
          MatPair = new global::RemoteFortressReader.MatPair();
        }
        MatPair.MergeFrom(other.MatPair);
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.stateColor_ != null) {
        if (stateColor_ == null) {
          StateColor = new global::RemoteFortressReader.ColorDefinition();
        }
        StateColor.MergeFrom(other.StateColor);
      }
      if (other.instrument_ != null) {
        if (instrument_ == null) {
          Instrument = new global::ItemdefInstrument.InstrumentDef();
        }
        Instrument.MergeFrom(other.Instrument);
      }
      if (other.HasUpStep) {
        UpStep = other.UpStep;
      }
      if (other.HasDownStep) {
        DownStep = other.DownStep;
      }
      if (other.HasLayer) {
        Layer = other.Layer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (matPair_ == null) {
              MatPair = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(MatPair);
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            if (stateColor_ == null) {
              StateColor = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(StateColor);
            break;
          }
          case 42: {
            if (instrument_ == null) {
              Instrument = new global::ItemdefInstrument.InstrumentDef();
            }
            input.ReadMessage(Instrument);
            break;
          }
          case 48: {
            UpStep = input.ReadInt32();
            break;
          }
          case 56: {
            DownStep = input.ReadInt32();
            break;
          }
          case 64: {
            Layer = (global::RemoteFortressReader.ArmorLayer) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (matPair_ == null) {
              MatPair = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(MatPair);
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            if (stateColor_ == null) {
              StateColor = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(StateColor);
            break;
          }
          case 42: {
            if (instrument_ == null) {
              Instrument = new global::ItemdefInstrument.InstrumentDef();
            }
            input.ReadMessage(Instrument);
            break;
          }
          case 48: {
            UpStep = input.ReadInt32();
            break;
          }
          case 56: {
            DownStep = input.ReadInt32();
            break;
          }
          case 64: {
            Layer = (global::RemoteFortressReader.ArmorLayer) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingType : pb::IMessage<BuildingType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingType> _parser = new pb::MessageParser<BuildingType>(() => new BuildingType());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingType(BuildingType other) : this() {
      _hasBits0 = other._hasBits0;
      buildingType_ = other.buildingType_;
      buildingSubtype_ = other.buildingSubtype_;
      buildingCustom_ = other.buildingCustom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingType Clone() {
      return new BuildingType(this);
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingType_FieldNumber = 1;
    private readonly static int BuildingType_DefaultValue = 0;

    private int buildingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildingType_ {
      get { if ((_hasBits0 & 1) != 0) { return buildingType_; } else { return BuildingType_DefaultValue; } }
      set {
        _hasBits0 |= 1;
        buildingType_ = value;
      }
    }
    /// <summary>Gets whether the "building_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildingType_ {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "building_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildingType_() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "building_subtype" field.</summary>
    public const int BuildingSubtypeFieldNumber = 2;
    private readonly static int BuildingSubtypeDefaultValue = 0;

    private int buildingSubtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildingSubtype {
      get { if ((_hasBits0 & 2) != 0) { return buildingSubtype_; } else { return BuildingSubtypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        buildingSubtype_ = value;
      }
    }
    /// <summary>Gets whether the "building_subtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildingSubtype {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "building_subtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildingSubtype() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "building_custom" field.</summary>
    public const int BuildingCustomFieldNumber = 3;
    private readonly static int BuildingCustomDefaultValue = 0;

    private int buildingCustom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildingCustom {
      get { if ((_hasBits0 & 4) != 0) { return buildingCustom_; } else { return BuildingCustomDefaultValue; } }
      set {
        _hasBits0 |= 4;
        buildingCustom_ = value;
      }
    }
    /// <summary>Gets whether the "building_custom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildingCustom {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "building_custom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildingCustom() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingType_ != other.BuildingType_) return false;
      if (BuildingSubtype != other.BuildingSubtype) return false;
      if (BuildingCustom != other.BuildingCustom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBuildingType_) hash ^= BuildingType_.GetHashCode();
      if (HasBuildingSubtype) hash ^= BuildingSubtype.GetHashCode();
      if (HasBuildingCustom) hash ^= BuildingCustom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBuildingType_) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingType_);
      }
      if (HasBuildingSubtype) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildingSubtype);
      }
      if (HasBuildingCustom) {
        output.WriteRawTag(24);
        output.WriteInt32(BuildingCustom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBuildingType_) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildingType_);
      }
      if (HasBuildingSubtype) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildingSubtype);
      }
      if (HasBuildingCustom) {
        output.WriteRawTag(24);
        output.WriteInt32(BuildingCustom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBuildingType_) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingType_);
      }
      if (HasBuildingSubtype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingSubtype);
      }
      if (HasBuildingCustom) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingCustom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingType other) {
      if (other == null) {
        return;
      }
      if (other.HasBuildingType_) {
        BuildingType_ = other.BuildingType_;
      }
      if (other.HasBuildingSubtype) {
        BuildingSubtype = other.BuildingSubtype;
      }
      if (other.HasBuildingCustom) {
        BuildingCustom = other.BuildingCustom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingType_ = input.ReadInt32();
            break;
          }
          case 16: {
            BuildingSubtype = input.ReadInt32();
            break;
          }
          case 24: {
            BuildingCustom = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuildingType_ = input.ReadInt32();
            break;
          }
          case 16: {
            BuildingSubtype = input.ReadInt32();
            break;
          }
          case 24: {
            BuildingCustom = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingDefinition : pb::IMessage<BuildingDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingDefinition> _parser = new pb::MessageParser<BuildingDefinition>(() => new BuildingDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingDefinition(BuildingDefinition other) : this() {
      buildingType_ = other.buildingType_ != null ? other.buildingType_.Clone() : null;
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingDefinition Clone() {
      return new BuildingDefinition(this);
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingTypeFieldNumber = 1;
    private global::RemoteFortressReader.BuildingType buildingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.BuildingType BuildingType {
      get { return buildingType_; }
      set {
        buildingType_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BuildingType, other.BuildingType)) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (buildingType_ != null) hash ^= BuildingType.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (buildingType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BuildingType);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (buildingType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BuildingType);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (buildingType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildingType);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingDefinition other) {
      if (other == null) {
        return;
      }
      if (other.buildingType_ != null) {
        if (buildingType_ == null) {
          BuildingType = new global::RemoteFortressReader.BuildingType();
        }
        BuildingType.MergeFrom(other.BuildingType);
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (buildingType_ == null) {
              BuildingType = new global::RemoteFortressReader.BuildingType();
            }
            input.ReadMessage(BuildingType);
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (buildingType_ == null) {
              BuildingType = new global::RemoteFortressReader.BuildingType();
            }
            input.ReadMessage(BuildingType);
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingList : pb::IMessage<BuildingList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingList> _parser = new pb::MessageParser<BuildingList>(() => new BuildingList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingList(BuildingList other) : this() {
      buildingList_ = other.buildingList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildingList Clone() {
      return new BuildingList(this);
    }

    /// <summary>Field number for the "building_list" field.</summary>
    public const int BuildingList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BuildingDefinition> _repeated_buildingList_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.BuildingDefinition.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BuildingDefinition> buildingList_ = new pbc::RepeatedField<global::RemoteFortressReader.BuildingDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BuildingDefinition> BuildingList_ {
      get { return buildingList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildingList_.Equals(other.buildingList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildingList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buildingList_.WriteTo(output, _repeated_buildingList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buildingList_.WriteTo(ref output, _repeated_buildingList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += buildingList_.CalculateSize(_repeated_buildingList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildingList other) {
      if (other == null) {
        return;
      }
      buildingList_.Add(other.buildingList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildingList_.AddEntriesFrom(input, _repeated_buildingList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buildingList_.AddEntriesFrom(ref input, _repeated_buildingList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MaterialList : pb::IMessage<MaterialList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaterialList> _parser = new pb::MessageParser<MaterialList>(() => new MaterialList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MaterialList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialList(MaterialList other) : this() {
      materialList_ = other.materialList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialList Clone() {
      return new MaterialList(this);
    }

    /// <summary>Field number for the "material_list" field.</summary>
    public const int MaterialList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MaterialDefinition> _repeated_materialList_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.MaterialDefinition.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MaterialDefinition> materialList_ = new pbc::RepeatedField<global::RemoteFortressReader.MaterialDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MaterialDefinition> MaterialList_ {
      get { return materialList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MaterialList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MaterialList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!materialList_.Equals(other.materialList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= materialList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      materialList_.WriteTo(output, _repeated_materialList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      materialList_.WriteTo(ref output, _repeated_materialList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += materialList_.CalculateSize(_repeated_materialList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MaterialList other) {
      if (other == null) {
        return;
      }
      materialList_.Add(other.materialList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            materialList_.AddEntriesFrom(input, _repeated_materialList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            materialList_.AddEntriesFrom(ref input, _repeated_materialList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hair : pb::IMessage<Hair>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hair> _parser = new pb::MessageParser<Hair>(() => new Hair());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Hair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hair(Hair other) : this() {
      _hasBits0 = other._hasBits0;
      length_ = other.length_;
      style_ = other.style_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hair Clone() {
      return new Hair(this);
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 1;
    private readonly static int LengthDefaultValue = 0;

    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Length {
      get { if ((_hasBits0 & 1) != 0) { return length_; } else { return LengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        length_ = value;
      }
    }
    /// <summary>Gets whether the "length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 2;
    private readonly static global::RemoteFortressReader.HairStyle StyleDefaultValue = global::RemoteFortressReader.HairStyle.Unkempt;

    private global::RemoteFortressReader.HairStyle style_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.HairStyle Style {
      get { if ((_hasBits0 & 2) != 0) { return style_; } else { return StyleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        style_ = value;
      }
    }
    /// <summary>Gets whether the "style" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStyle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "style" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStyle() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Hair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Hair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Length != other.Length) return false;
      if (Style != other.Style) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLength) hash ^= Length.GetHashCode();
      if (HasStyle) hash ^= Style.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLength) {
        output.WriteRawTag(8);
        output.WriteInt32(Length);
      }
      if (HasStyle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Style);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLength) {
        output.WriteRawTag(8);
        output.WriteInt32(Length);
      }
      if (HasStyle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Style);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (HasStyle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Style);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Hair other) {
      if (other == null) {
        return;
      }
      if (other.HasLength) {
        Length = other.Length;
      }
      if (other.HasStyle) {
        Style = other.Style;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Length = input.ReadInt32();
            break;
          }
          case 16: {
            Style = (global::RemoteFortressReader.HairStyle) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Length = input.ReadInt32();
            break;
          }
          case 16: {
            Style = (global::RemoteFortressReader.HairStyle) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BodySizeInfo : pb::IMessage<BodySizeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BodySizeInfo> _parser = new pb::MessageParser<BodySizeInfo>(() => new BodySizeInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BodySizeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodySizeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodySizeInfo(BodySizeInfo other) : this() {
      _hasBits0 = other._hasBits0;
      sizeCur_ = other.sizeCur_;
      sizeBase_ = other.sizeBase_;
      areaCur_ = other.areaCur_;
      areaBase_ = other.areaBase_;
      lengthCur_ = other.lengthCur_;
      lengthBase_ = other.lengthBase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodySizeInfo Clone() {
      return new BodySizeInfo(this);
    }

    /// <summary>Field number for the "size_cur" field.</summary>
    public const int SizeCurFieldNumber = 1;
    private readonly static int SizeCurDefaultValue = 0;

    private int sizeCur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeCur {
      get { if ((_hasBits0 & 1) != 0) { return sizeCur_; } else { return SizeCurDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sizeCur_ = value;
      }
    }
    /// <summary>Gets whether the "size_cur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeCur {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size_cur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeCur() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "size_base" field.</summary>
    public const int SizeBaseFieldNumber = 2;
    private readonly static int SizeBaseDefaultValue = 0;

    private int sizeBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeBase {
      get { if ((_hasBits0 & 2) != 0) { return sizeBase_; } else { return SizeBaseDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sizeBase_ = value;
      }
    }
    /// <summary>Gets whether the "size_base" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeBase {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "size_base" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeBase() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "area_cur" field.</summary>
    public const int AreaCurFieldNumber = 3;
    private readonly static int AreaCurDefaultValue = 0;

    private int areaCur_;
    /// <summary>
    ///!&lt; size_cur^0.666 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaCur {
      get { if ((_hasBits0 & 4) != 0) { return areaCur_; } else { return AreaCurDefaultValue; } }
      set {
        _hasBits0 |= 4;
        areaCur_ = value;
      }
    }
    /// <summary>Gets whether the "area_cur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaCur {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "area_cur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaCur() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "area_base" field.</summary>
    public const int AreaBaseFieldNumber = 4;
    private readonly static int AreaBaseDefaultValue = 0;

    private int areaBase_;
    /// <summary>
    ///!&lt; size_base^0.666 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaBase {
      get { if ((_hasBits0 & 8) != 0) { return areaBase_; } else { return AreaBaseDefaultValue; } }
      set {
        _hasBits0 |= 8;
        areaBase_ = value;
      }
    }
    /// <summary>Gets whether the "area_base" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaBase {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "area_base" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaBase() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "length_cur" field.</summary>
    public const int LengthCurFieldNumber = 5;
    private readonly static int LengthCurDefaultValue = 0;

    private int lengthCur_;
    /// <summary>
    ///!&lt; (size_cur*10000)^0.333 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LengthCur {
      get { if ((_hasBits0 & 16) != 0) { return lengthCur_; } else { return LengthCurDefaultValue; } }
      set {
        _hasBits0 |= 16;
        lengthCur_ = value;
      }
    }
    /// <summary>Gets whether the "length_cur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLengthCur {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "length_cur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLengthCur() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "length_base" field.</summary>
    public const int LengthBaseFieldNumber = 6;
    private readonly static int LengthBaseDefaultValue = 0;

    private int lengthBase_;
    /// <summary>
    ///!&lt; (size_base*10000)^0.333 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LengthBase {
      get { if ((_hasBits0 & 32) != 0) { return lengthBase_; } else { return LengthBaseDefaultValue; } }
      set {
        _hasBits0 |= 32;
        lengthBase_ = value;
      }
    }
    /// <summary>Gets whether the "length_base" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLengthBase {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "length_base" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLengthBase() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BodySizeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BodySizeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SizeCur != other.SizeCur) return false;
      if (SizeBase != other.SizeBase) return false;
      if (AreaCur != other.AreaCur) return false;
      if (AreaBase != other.AreaBase) return false;
      if (LengthCur != other.LengthCur) return false;
      if (LengthBase != other.LengthBase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSizeCur) hash ^= SizeCur.GetHashCode();
      if (HasSizeBase) hash ^= SizeBase.GetHashCode();
      if (HasAreaCur) hash ^= AreaCur.GetHashCode();
      if (HasAreaBase) hash ^= AreaBase.GetHashCode();
      if (HasLengthCur) hash ^= LengthCur.GetHashCode();
      if (HasLengthBase) hash ^= LengthBase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSizeCur) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeCur);
      }
      if (HasSizeBase) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeBase);
      }
      if (HasAreaCur) {
        output.WriteRawTag(24);
        output.WriteInt32(AreaCur);
      }
      if (HasAreaBase) {
        output.WriteRawTag(32);
        output.WriteInt32(AreaBase);
      }
      if (HasLengthCur) {
        output.WriteRawTag(40);
        output.WriteInt32(LengthCur);
      }
      if (HasLengthBase) {
        output.WriteRawTag(48);
        output.WriteInt32(LengthBase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSizeCur) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeCur);
      }
      if (HasSizeBase) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeBase);
      }
      if (HasAreaCur) {
        output.WriteRawTag(24);
        output.WriteInt32(AreaCur);
      }
      if (HasAreaBase) {
        output.WriteRawTag(32);
        output.WriteInt32(AreaBase);
      }
      if (HasLengthCur) {
        output.WriteRawTag(40);
        output.WriteInt32(LengthCur);
      }
      if (HasLengthBase) {
        output.WriteRawTag(48);
        output.WriteInt32(LengthBase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSizeCur) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeCur);
      }
      if (HasSizeBase) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeBase);
      }
      if (HasAreaCur) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaCur);
      }
      if (HasAreaBase) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaBase);
      }
      if (HasLengthCur) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LengthCur);
      }
      if (HasLengthBase) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LengthBase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BodySizeInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSizeCur) {
        SizeCur = other.SizeCur;
      }
      if (other.HasSizeBase) {
        SizeBase = other.SizeBase;
      }
      if (other.HasAreaCur) {
        AreaCur = other.AreaCur;
      }
      if (other.HasAreaBase) {
        AreaBase = other.AreaBase;
      }
      if (other.HasLengthCur) {
        LengthCur = other.LengthCur;
      }
      if (other.HasLengthBase) {
        LengthBase = other.LengthBase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SizeCur = input.ReadInt32();
            break;
          }
          case 16: {
            SizeBase = input.ReadInt32();
            break;
          }
          case 24: {
            AreaCur = input.ReadInt32();
            break;
          }
          case 32: {
            AreaBase = input.ReadInt32();
            break;
          }
          case 40: {
            LengthCur = input.ReadInt32();
            break;
          }
          case 48: {
            LengthBase = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SizeCur = input.ReadInt32();
            break;
          }
          case 16: {
            SizeBase = input.ReadInt32();
            break;
          }
          case 24: {
            AreaCur = input.ReadInt32();
            break;
          }
          case 32: {
            AreaBase = input.ReadInt32();
            break;
          }
          case 40: {
            LengthCur = input.ReadInt32();
            break;
          }
          case 48: {
            LengthBase = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitAppearance : pb::IMessage<UnitAppearance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitAppearance> _parser = new pb::MessageParser<UnitAppearance>(() => new UnitAppearance());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitAppearance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitAppearance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitAppearance(UnitAppearance other) : this() {
      _hasBits0 = other._hasBits0;
      bodyModifiers_ = other.bodyModifiers_.Clone();
      bpModifiers_ = other.bpModifiers_.Clone();
      sizeModifier_ = other.sizeModifier_;
      colors_ = other.colors_.Clone();
      hair_ = other.hair_ != null ? other.hair_.Clone() : null;
      beard_ = other.beard_ != null ? other.beard_.Clone() : null;
      moustache_ = other.moustache_ != null ? other.moustache_.Clone() : null;
      sideburns_ = other.sideburns_ != null ? other.sideburns_.Clone() : null;
      physicalDescription_ = other.physicalDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitAppearance Clone() {
      return new UnitAppearance(this);
    }

    /// <summary>Field number for the "body_modifiers" field.</summary>
    public const int BodyModifiersFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_bodyModifiers_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> bodyModifiers_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BodyModifiers {
      get { return bodyModifiers_; }
    }

    /// <summary>Field number for the "bp_modifiers" field.</summary>
    public const int BpModifiersFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_bpModifiers_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> bpModifiers_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BpModifiers {
      get { return bpModifiers_; }
    }

    /// <summary>Field number for the "size_modifier" field.</summary>
    public const int SizeModifierFieldNumber = 3;
    private readonly static int SizeModifierDefaultValue = 0;

    private int sizeModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeModifier {
      get { if ((_hasBits0 & 1) != 0) { return sizeModifier_; } else { return SizeModifierDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sizeModifier_ = value;
      }
    }
    /// <summary>Gets whether the "size_modifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeModifier {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size_modifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeModifier() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "colors" field.</summary>
    public const int ColorsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_colors_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> colors_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Colors {
      get { return colors_; }
    }

    /// <summary>Field number for the "hair" field.</summary>
    public const int HairFieldNumber = 5;
    private global::RemoteFortressReader.Hair hair_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Hair Hair {
      get { return hair_; }
      set {
        hair_ = value;
      }
    }

    /// <summary>Field number for the "beard" field.</summary>
    public const int BeardFieldNumber = 6;
    private global::RemoteFortressReader.Hair beard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Hair Beard {
      get { return beard_; }
      set {
        beard_ = value;
      }
    }

    /// <summary>Field number for the "moustache" field.</summary>
    public const int MoustacheFieldNumber = 7;
    private global::RemoteFortressReader.Hair moustache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Hair Moustache {
      get { return moustache_; }
      set {
        moustache_ = value;
      }
    }

    /// <summary>Field number for the "sideburns" field.</summary>
    public const int SideburnsFieldNumber = 8;
    private global::RemoteFortressReader.Hair sideburns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Hair Sideburns {
      get { return sideburns_; }
      set {
        sideburns_ = value;
      }
    }

    /// <summary>Field number for the "physical_description" field.</summary>
    public const int PhysicalDescriptionFieldNumber = 9;
    private readonly static pb::ByteString PhysicalDescriptionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString physicalDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PhysicalDescription {
      get { return physicalDescription_ ?? PhysicalDescriptionDefaultValue; }
      set {
        physicalDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "physical_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhysicalDescription {
      get { return physicalDescription_ != null; }
    }
    /// <summary>Clears the value of the "physical_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhysicalDescription() {
      physicalDescription_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitAppearance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitAppearance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bodyModifiers_.Equals(other.bodyModifiers_)) return false;
      if(!bpModifiers_.Equals(other.bpModifiers_)) return false;
      if (SizeModifier != other.SizeModifier) return false;
      if(!colors_.Equals(other.colors_)) return false;
      if (!object.Equals(Hair, other.Hair)) return false;
      if (!object.Equals(Beard, other.Beard)) return false;
      if (!object.Equals(Moustache, other.Moustache)) return false;
      if (!object.Equals(Sideburns, other.Sideburns)) return false;
      if (PhysicalDescription != other.PhysicalDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bodyModifiers_.GetHashCode();
      hash ^= bpModifiers_.GetHashCode();
      if (HasSizeModifier) hash ^= SizeModifier.GetHashCode();
      hash ^= colors_.GetHashCode();
      if (hair_ != null) hash ^= Hair.GetHashCode();
      if (beard_ != null) hash ^= Beard.GetHashCode();
      if (moustache_ != null) hash ^= Moustache.GetHashCode();
      if (sideburns_ != null) hash ^= Sideburns.GetHashCode();
      if (HasPhysicalDescription) hash ^= PhysicalDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bodyModifiers_.WriteTo(output, _repeated_bodyModifiers_codec);
      bpModifiers_.WriteTo(output, _repeated_bpModifiers_codec);
      if (HasSizeModifier) {
        output.WriteRawTag(24);
        output.WriteInt32(SizeModifier);
      }
      colors_.WriteTo(output, _repeated_colors_codec);
      if (hair_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Hair);
      }
      if (beard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Beard);
      }
      if (moustache_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Moustache);
      }
      if (sideburns_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Sideburns);
      }
      if (HasPhysicalDescription) {
        output.WriteRawTag(74);
        output.WriteBytes(PhysicalDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bodyModifiers_.WriteTo(ref output, _repeated_bodyModifiers_codec);
      bpModifiers_.WriteTo(ref output, _repeated_bpModifiers_codec);
      if (HasSizeModifier) {
        output.WriteRawTag(24);
        output.WriteInt32(SizeModifier);
      }
      colors_.WriteTo(ref output, _repeated_colors_codec);
      if (hair_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Hair);
      }
      if (beard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Beard);
      }
      if (moustache_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Moustache);
      }
      if (sideburns_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Sideburns);
      }
      if (HasPhysicalDescription) {
        output.WriteRawTag(74);
        output.WriteBytes(PhysicalDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += bodyModifiers_.CalculateSize(_repeated_bodyModifiers_codec);
      size += bpModifiers_.CalculateSize(_repeated_bpModifiers_codec);
      if (HasSizeModifier) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeModifier);
      }
      size += colors_.CalculateSize(_repeated_colors_codec);
      if (hair_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hair);
      }
      if (beard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Beard);
      }
      if (moustache_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Moustache);
      }
      if (sideburns_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sideburns);
      }
      if (HasPhysicalDescription) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PhysicalDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitAppearance other) {
      if (other == null) {
        return;
      }
      bodyModifiers_.Add(other.bodyModifiers_);
      bpModifiers_.Add(other.bpModifiers_);
      if (other.HasSizeModifier) {
        SizeModifier = other.SizeModifier;
      }
      colors_.Add(other.colors_);
      if (other.hair_ != null) {
        if (hair_ == null) {
          Hair = new global::RemoteFortressReader.Hair();
        }
        Hair.MergeFrom(other.Hair);
      }
      if (other.beard_ != null) {
        if (beard_ == null) {
          Beard = new global::RemoteFortressReader.Hair();
        }
        Beard.MergeFrom(other.Beard);
      }
      if (other.moustache_ != null) {
        if (moustache_ == null) {
          Moustache = new global::RemoteFortressReader.Hair();
        }
        Moustache.MergeFrom(other.Moustache);
      }
      if (other.sideburns_ != null) {
        if (sideburns_ == null) {
          Sideburns = new global::RemoteFortressReader.Hair();
        }
        Sideburns.MergeFrom(other.Sideburns);
      }
      if (other.HasPhysicalDescription) {
        PhysicalDescription = other.PhysicalDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            bodyModifiers_.AddEntriesFrom(input, _repeated_bodyModifiers_codec);
            break;
          }
          case 18:
          case 16: {
            bpModifiers_.AddEntriesFrom(input, _repeated_bpModifiers_codec);
            break;
          }
          case 24: {
            SizeModifier = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            colors_.AddEntriesFrom(input, _repeated_colors_codec);
            break;
          }
          case 42: {
            if (hair_ == null) {
              Hair = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Hair);
            break;
          }
          case 50: {
            if (beard_ == null) {
              Beard = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Beard);
            break;
          }
          case 58: {
            if (moustache_ == null) {
              Moustache = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Moustache);
            break;
          }
          case 66: {
            if (sideburns_ == null) {
              Sideburns = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Sideburns);
            break;
          }
          case 74: {
            PhysicalDescription = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            bodyModifiers_.AddEntriesFrom(ref input, _repeated_bodyModifiers_codec);
            break;
          }
          case 18:
          case 16: {
            bpModifiers_.AddEntriesFrom(ref input, _repeated_bpModifiers_codec);
            break;
          }
          case 24: {
            SizeModifier = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            colors_.AddEntriesFrom(ref input, _repeated_colors_codec);
            break;
          }
          case 42: {
            if (hair_ == null) {
              Hair = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Hair);
            break;
          }
          case 50: {
            if (beard_ == null) {
              Beard = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Beard);
            break;
          }
          case 58: {
            if (moustache_ == null) {
              Moustache = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Moustache);
            break;
          }
          case 66: {
            if (sideburns_ == null) {
              Sideburns = new global::RemoteFortressReader.Hair();
            }
            input.ReadMessage(Sideburns);
            break;
          }
          case 74: {
            PhysicalDescription = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryItem : pb::IMessage<InventoryItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryItem> _parser = new pb::MessageParser<InventoryItem>(() => new InventoryItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InventoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem(InventoryItem other) : this() {
      _hasBits0 = other._hasBits0;
      mode_ = other.mode_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      bodyPartId_ = other.bodyPartId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem Clone() {
      return new InventoryItem(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private readonly static global::RemoteFortressReader.InventoryMode ModeDefaultValue = global::RemoteFortressReader.InventoryMode.Hauled;

    private global::RemoteFortressReader.InventoryMode mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.InventoryMode Mode {
      get { if ((_hasBits0 & 1) != 0) { return mode_; } else { return ModeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mode_ = value;
      }
    }
    /// <summary>Gets whether the "mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::RemoteFortressReader.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "body_part_id" field.</summary>
    public const int BodyPartIdFieldNumber = 3;
    private readonly static int BodyPartIdDefaultValue = 0;

    private int bodyPartId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BodyPartId {
      get { if ((_hasBits0 & 2) != 0) { return bodyPartId_; } else { return BodyPartIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bodyPartId_ = value;
      }
    }
    /// <summary>Gets whether the "body_part_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBodyPartId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "body_part_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBodyPartId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InventoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InventoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (BodyPartId != other.BodyPartId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMode) hash ^= Mode.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (HasBodyPartId) hash ^= BodyPartId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (HasBodyPartId) {
        output.WriteRawTag(24);
        output.WriteInt32(BodyPartId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (HasBodyPartId) {
        output.WriteRawTag(24);
        output.WriteInt32(BodyPartId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (HasBodyPartId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyPartId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InventoryItem other) {
      if (other == null) {
        return;
      }
      if (other.HasMode) {
        Mode = other.Mode;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::RemoteFortressReader.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.HasBodyPartId) {
        BodyPartId = other.BodyPartId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::RemoteFortressReader.InventoryMode) input.ReadEnum();
            break;
          }
          case 18: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 24: {
            BodyPartId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::RemoteFortressReader.InventoryMode) input.ReadEnum();
            break;
          }
          case 18: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 24: {
            BodyPartId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WoundPart : pb::IMessage<WoundPart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoundPart> _parser = new pb::MessageParser<WoundPart>(() => new WoundPart());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoundPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoundPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoundPart(WoundPart other) : this() {
      _hasBits0 = other._hasBits0;
      globalLayerIdx_ = other.globalLayerIdx_;
      bodyPartId_ = other.bodyPartId_;
      layerIdx_ = other.layerIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoundPart Clone() {
      return new WoundPart(this);
    }

    /// <summary>Field number for the "global_layer_idx" field.</summary>
    public const int GlobalLayerIdxFieldNumber = 1;
    private readonly static int GlobalLayerIdxDefaultValue = 0;

    private int globalLayerIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GlobalLayerIdx {
      get { if ((_hasBits0 & 1) != 0) { return globalLayerIdx_; } else { return GlobalLayerIdxDefaultValue; } }
      set {
        _hasBits0 |= 1;
        globalLayerIdx_ = value;
      }
    }
    /// <summary>Gets whether the "global_layer_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGlobalLayerIdx {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "global_layer_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGlobalLayerIdx() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "body_part_id" field.</summary>
    public const int BodyPartIdFieldNumber = 2;
    private readonly static int BodyPartIdDefaultValue = 0;

    private int bodyPartId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BodyPartId {
      get { if ((_hasBits0 & 2) != 0) { return bodyPartId_; } else { return BodyPartIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bodyPartId_ = value;
      }
    }
    /// <summary>Gets whether the "body_part_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBodyPartId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "body_part_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBodyPartId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "layer_idx" field.</summary>
    public const int LayerIdxFieldNumber = 3;
    private readonly static int LayerIdxDefaultValue = 0;

    private int layerIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LayerIdx {
      get { if ((_hasBits0 & 4) != 0) { return layerIdx_; } else { return LayerIdxDefaultValue; } }
      set {
        _hasBits0 |= 4;
        layerIdx_ = value;
      }
    }
    /// <summary>Gets whether the "layer_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayerIdx {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "layer_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayerIdx() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoundPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoundPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GlobalLayerIdx != other.GlobalLayerIdx) return false;
      if (BodyPartId != other.BodyPartId) return false;
      if (LayerIdx != other.LayerIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGlobalLayerIdx) hash ^= GlobalLayerIdx.GetHashCode();
      if (HasBodyPartId) hash ^= BodyPartId.GetHashCode();
      if (HasLayerIdx) hash ^= LayerIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGlobalLayerIdx) {
        output.WriteRawTag(8);
        output.WriteInt32(GlobalLayerIdx);
      }
      if (HasBodyPartId) {
        output.WriteRawTag(16);
        output.WriteInt32(BodyPartId);
      }
      if (HasLayerIdx) {
        output.WriteRawTag(24);
        output.WriteInt32(LayerIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGlobalLayerIdx) {
        output.WriteRawTag(8);
        output.WriteInt32(GlobalLayerIdx);
      }
      if (HasBodyPartId) {
        output.WriteRawTag(16);
        output.WriteInt32(BodyPartId);
      }
      if (HasLayerIdx) {
        output.WriteRawTag(24);
        output.WriteInt32(LayerIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGlobalLayerIdx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlobalLayerIdx);
      }
      if (HasBodyPartId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BodyPartId);
      }
      if (HasLayerIdx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LayerIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoundPart other) {
      if (other == null) {
        return;
      }
      if (other.HasGlobalLayerIdx) {
        GlobalLayerIdx = other.GlobalLayerIdx;
      }
      if (other.HasBodyPartId) {
        BodyPartId = other.BodyPartId;
      }
      if (other.HasLayerIdx) {
        LayerIdx = other.LayerIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GlobalLayerIdx = input.ReadInt32();
            break;
          }
          case 16: {
            BodyPartId = input.ReadInt32();
            break;
          }
          case 24: {
            LayerIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GlobalLayerIdx = input.ReadInt32();
            break;
          }
          case 16: {
            BodyPartId = input.ReadInt32();
            break;
          }
          case 24: {
            LayerIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitWound : pb::IMessage<UnitWound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitWound> _parser = new pb::MessageParser<UnitWound>(() => new UnitWound());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitWound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitWound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitWound(UnitWound other) : this() {
      _hasBits0 = other._hasBits0;
      parts_ = other.parts_.Clone();
      severedPart_ = other.severedPart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitWound Clone() {
      return new UnitWound(this);
    }

    /// <summary>Field number for the "parts" field.</summary>
    public const int PartsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.WoundPart> _repeated_parts_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.WoundPart.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.WoundPart> parts_ = new pbc::RepeatedField<global::RemoteFortressReader.WoundPart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.WoundPart> Parts {
      get { return parts_; }
    }

    /// <summary>Field number for the "severed_part" field.</summary>
    public const int SeveredPartFieldNumber = 2;
    private readonly static bool SeveredPartDefaultValue = false;

    private bool severedPart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeveredPart {
      get { if ((_hasBits0 & 1) != 0) { return severedPart_; } else { return SeveredPartDefaultValue; } }
      set {
        _hasBits0 |= 1;
        severedPart_ = value;
      }
    }
    /// <summary>Gets whether the "severed_part" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeveredPart {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "severed_part" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeveredPart() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitWound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitWound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parts_.Equals(other.parts_)) return false;
      if (SeveredPart != other.SeveredPart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parts_.GetHashCode();
      if (HasSeveredPart) hash ^= SeveredPart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      parts_.WriteTo(output, _repeated_parts_codec);
      if (HasSeveredPart) {
        output.WriteRawTag(16);
        output.WriteBool(SeveredPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      parts_.WriteTo(ref output, _repeated_parts_codec);
      if (HasSeveredPart) {
        output.WriteRawTag(16);
        output.WriteBool(SeveredPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += parts_.CalculateSize(_repeated_parts_codec);
      if (HasSeveredPart) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitWound other) {
      if (other == null) {
        return;
      }
      parts_.Add(other.parts_);
      if (other.HasSeveredPart) {
        SeveredPart = other.SeveredPart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parts_.AddEntriesFrom(input, _repeated_parts_codec);
            break;
          }
          case 16: {
            SeveredPart = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            parts_.AddEntriesFrom(ref input, _repeated_parts_codec);
            break;
          }
          case 16: {
            SeveredPart = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitDefinition : pb::IMessage<UnitDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitDefinition> _parser = new pb::MessageParser<UnitDefinition>(() => new UnitDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitDefinition(UnitDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      isValid_ = other.isValid_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      race_ = other.race_ != null ? other.race_.Clone() : null;
      professionColor_ = other.professionColor_ != null ? other.professionColor_.Clone() : null;
      flags1_ = other.flags1_;
      flags2_ = other.flags2_;
      flags3_ = other.flags3_;
      isSoldier_ = other.isSoldier_;
      sizeInfo_ = other.sizeInfo_ != null ? other.sizeInfo_.Clone() : null;
      name_ = other.name_;
      bloodMax_ = other.bloodMax_;
      bloodCount_ = other.bloodCount_;
      appearance_ = other.appearance_ != null ? other.appearance_.Clone() : null;
      professionId_ = other.professionId_;
      noblePositions_ = other.noblePositions_.Clone();
      riderId_ = other.riderId_;
      inventory_ = other.inventory_.Clone();
      subposX_ = other.subposX_;
      subposY_ = other.subposY_;
      subposZ_ = other.subposZ_;
      facing_ = other.facing_ != null ? other.facing_.Clone() : null;
      age_ = other.age_;
      wounds_ = other.wounds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitDefinition Clone() {
      return new UnitDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 2;
    private readonly static bool IsValidDefaultValue = false;

    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsValid {
      get { if ((_hasBits0 & 2) != 0) { return isValid_; } else { return IsValidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isValid_ = value;
      }
    }
    /// <summary>Gets whether the "isValid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsValid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isValid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsValid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 3;
    private readonly static int PosXDefaultValue = 0;

    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosX {
      get { if ((_hasBits0 & 4) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 4;
    private readonly static int PosYDefaultValue = 0;

    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosY {
      get { if ((_hasBits0 & 8) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 8;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pos_z" field.</summary>
    public const int PosZFieldNumber = 5;
    private readonly static int PosZDefaultValue = 0;

    private int posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosZ {
      get { if ((_hasBits0 & 16) != 0) { return posZ_; } else { return PosZDefaultValue; } }
      set {
        _hasBits0 |= 16;
        posZ_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZ {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZ() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 6;
    private global::RemoteFortressReader.MatPair race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "profession_color" field.</summary>
    public const int ProfessionColorFieldNumber = 7;
    private global::RemoteFortressReader.ColorDefinition professionColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ColorDefinition ProfessionColor {
      get { return professionColor_; }
      set {
        professionColor_ = value;
      }
    }

    /// <summary>Field number for the "flags1" field.</summary>
    public const int Flags1FieldNumber = 8;
    private readonly static uint Flags1DefaultValue = 0;

    private uint flags1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags1 {
      get { if ((_hasBits0 & 32) != 0) { return flags1_; } else { return Flags1DefaultValue; } }
      set {
        _hasBits0 |= 32;
        flags1_ = value;
      }
    }
    /// <summary>Gets whether the "flags1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags1 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "flags1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags1() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "flags2" field.</summary>
    public const int Flags2FieldNumber = 9;
    private readonly static uint Flags2DefaultValue = 0;

    private uint flags2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags2 {
      get { if ((_hasBits0 & 64) != 0) { return flags2_; } else { return Flags2DefaultValue; } }
      set {
        _hasBits0 |= 64;
        flags2_ = value;
      }
    }
    /// <summary>Gets whether the "flags2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags2 {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "flags2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags2() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "flags3" field.</summary>
    public const int Flags3FieldNumber = 10;
    private readonly static uint Flags3DefaultValue = 0;

    private uint flags3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags3 {
      get { if ((_hasBits0 & 128) != 0) { return flags3_; } else { return Flags3DefaultValue; } }
      set {
        _hasBits0 |= 128;
        flags3_ = value;
      }
    }
    /// <summary>Gets whether the "flags3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags3 {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "flags3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags3() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "is_soldier" field.</summary>
    public const int IsSoldierFieldNumber = 11;
    private readonly static bool IsSoldierDefaultValue = false;

    private bool isSoldier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSoldier {
      get { if ((_hasBits0 & 256) != 0) { return isSoldier_; } else { return IsSoldierDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isSoldier_ = value;
      }
    }
    /// <summary>Gets whether the "is_soldier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSoldier {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_soldier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSoldier() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "size_info" field.</summary>
    public const int SizeInfoFieldNumber = 12;
    private global::RemoteFortressReader.BodySizeInfo sizeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.BodySizeInfo SizeInfo {
      get { return sizeInfo_; }
      set {
        sizeInfo_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 13;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "blood_max" field.</summary>
    public const int BloodMaxFieldNumber = 14;
    private readonly static int BloodMaxDefaultValue = 0;

    private int bloodMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BloodMax {
      get { if ((_hasBits0 & 512) != 0) { return bloodMax_; } else { return BloodMaxDefaultValue; } }
      set {
        _hasBits0 |= 512;
        bloodMax_ = value;
      }
    }
    /// <summary>Gets whether the "blood_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBloodMax {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "blood_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBloodMax() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "blood_count" field.</summary>
    public const int BloodCountFieldNumber = 15;
    private readonly static int BloodCountDefaultValue = 0;

    private int bloodCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BloodCount {
      get { if ((_hasBits0 & 1024) != 0) { return bloodCount_; } else { return BloodCountDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        bloodCount_ = value;
      }
    }
    /// <summary>Gets whether the "blood_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBloodCount {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "blood_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBloodCount() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "appearance" field.</summary>
    public const int AppearanceFieldNumber = 16;
    private global::RemoteFortressReader.UnitAppearance appearance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.UnitAppearance Appearance {
      get { return appearance_; }
      set {
        appearance_ = value;
      }
    }

    /// <summary>Field number for the "profession_id" field.</summary>
    public const int ProfessionIdFieldNumber = 17;
    private readonly static int ProfessionIdDefaultValue = 0;

    private int professionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProfessionId {
      get { if ((_hasBits0 & 2048) != 0) { return professionId_; } else { return ProfessionIdDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        professionId_ = value;
      }
    }
    /// <summary>Gets whether the "profession_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfessionId {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "profession_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfessionId() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "noble_positions" field.</summary>
    public const int NoblePositionsFieldNumber = 18;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_noblePositions_codec
        = pb::FieldCodec.ForBytes(146);
    private readonly pbc::RepeatedField<pb::ByteString> noblePositions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> NoblePositions {
      get { return noblePositions_; }
    }

    /// <summary>Field number for the "rider_id" field.</summary>
    public const int RiderIdFieldNumber = 19;
    private readonly static int RiderIdDefaultValue = 0;

    private int riderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RiderId {
      get { if ((_hasBits0 & 4096) != 0) { return riderId_; } else { return RiderIdDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        riderId_ = value;
      }
    }
    /// <summary>Gets whether the "rider_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRiderId {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "rider_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRiderId() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 20;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.InventoryItem> _repeated_inventory_codec
        = pb::FieldCodec.ForMessage(162, global::RemoteFortressReader.InventoryItem.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.InventoryItem> inventory_ = new pbc::RepeatedField<global::RemoteFortressReader.InventoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.InventoryItem> Inventory {
      get { return inventory_; }
    }

    /// <summary>Field number for the "subpos_x" field.</summary>
    public const int SubposXFieldNumber = 21;
    private readonly static float SubposXDefaultValue = 0F;

    private float subposX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposX {
      get { if ((_hasBits0 & 8192) != 0) { return subposX_; } else { return SubposXDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        subposX_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposX {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "subpos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposX() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "subpos_y" field.</summary>
    public const int SubposYFieldNumber = 22;
    private readonly static float SubposYDefaultValue = 0F;

    private float subposY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposY {
      get { if ((_hasBits0 & 16384) != 0) { return subposY_; } else { return SubposYDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        subposY_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposY {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "subpos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposY() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "subpos_z" field.</summary>
    public const int SubposZFieldNumber = 23;
    private readonly static float SubposZDefaultValue = 0F;

    private float subposZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SubposZ {
      get { if ((_hasBits0 & 32768) != 0) { return subposZ_; } else { return SubposZDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        subposZ_ = value;
      }
    }
    /// <summary>Gets whether the "subpos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubposZ {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "subpos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubposZ() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 24;
    private global::RemoteFortressReader.Coord facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Facing {
      get { return facing_; }
      set {
        facing_ = value;
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 25;
    private readonly static int AgeDefaultValue = 0;

    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Age {
      get { if ((_hasBits0 & 65536) != 0) { return age_; } else { return AgeDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        age_ = value;
      }
    }
    /// <summary>Gets whether the "age" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAge {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "age" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAge() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "wounds" field.</summary>
    public const int WoundsFieldNumber = 26;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.UnitWound> _repeated_wounds_codec
        = pb::FieldCodec.ForMessage(210, global::RemoteFortressReader.UnitWound.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.UnitWound> wounds_ = new pbc::RepeatedField<global::RemoteFortressReader.UnitWound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.UnitWound> Wounds {
      get { return wounds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsValid != other.IsValid) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (PosZ != other.PosZ) return false;
      if (!object.Equals(Race, other.Race)) return false;
      if (!object.Equals(ProfessionColor, other.ProfessionColor)) return false;
      if (Flags1 != other.Flags1) return false;
      if (Flags2 != other.Flags2) return false;
      if (Flags3 != other.Flags3) return false;
      if (IsSoldier != other.IsSoldier) return false;
      if (!object.Equals(SizeInfo, other.SizeInfo)) return false;
      if (Name != other.Name) return false;
      if (BloodMax != other.BloodMax) return false;
      if (BloodCount != other.BloodCount) return false;
      if (!object.Equals(Appearance, other.Appearance)) return false;
      if (ProfessionId != other.ProfessionId) return false;
      if(!noblePositions_.Equals(other.noblePositions_)) return false;
      if (RiderId != other.RiderId) return false;
      if(!inventory_.Equals(other.inventory_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposX, other.SubposX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposY, other.SubposY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SubposZ, other.SubposZ)) return false;
      if (!object.Equals(Facing, other.Facing)) return false;
      if (Age != other.Age) return false;
      if(!wounds_.Equals(other.wounds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasIsValid) hash ^= IsValid.GetHashCode();
      if (HasPosX) hash ^= PosX.GetHashCode();
      if (HasPosY) hash ^= PosY.GetHashCode();
      if (HasPosZ) hash ^= PosZ.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      if (professionColor_ != null) hash ^= ProfessionColor.GetHashCode();
      if (HasFlags1) hash ^= Flags1.GetHashCode();
      if (HasFlags2) hash ^= Flags2.GetHashCode();
      if (HasFlags3) hash ^= Flags3.GetHashCode();
      if (HasIsSoldier) hash ^= IsSoldier.GetHashCode();
      if (sizeInfo_ != null) hash ^= SizeInfo.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasBloodMax) hash ^= BloodMax.GetHashCode();
      if (HasBloodCount) hash ^= BloodCount.GetHashCode();
      if (appearance_ != null) hash ^= Appearance.GetHashCode();
      if (HasProfessionId) hash ^= ProfessionId.GetHashCode();
      hash ^= noblePositions_.GetHashCode();
      if (HasRiderId) hash ^= RiderId.GetHashCode();
      hash ^= inventory_.GetHashCode();
      if (HasSubposX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposX);
      if (HasSubposY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposY);
      if (HasSubposZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SubposZ);
      if (facing_ != null) hash ^= Facing.GetHashCode();
      if (HasAge) hash ^= Age.GetHashCode();
      hash ^= wounds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasIsValid) {
        output.WriteRawTag(16);
        output.WriteBool(IsValid);
      }
      if (HasPosX) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(40);
        output.WriteInt32(PosZ);
      }
      if (race_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Race);
      }
      if (professionColor_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProfessionColor);
      }
      if (HasFlags1) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags1);
      }
      if (HasFlags2) {
        output.WriteRawTag(72);
        output.WriteUInt32(Flags2);
      }
      if (HasFlags3) {
        output.WriteRawTag(80);
        output.WriteUInt32(Flags3);
      }
      if (HasIsSoldier) {
        output.WriteRawTag(88);
        output.WriteBool(IsSoldier);
      }
      if (sizeInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SizeInfo);
      }
      if (HasName) {
        output.WriteRawTag(106);
        output.WriteBytes(Name);
      }
      if (HasBloodMax) {
        output.WriteRawTag(112);
        output.WriteInt32(BloodMax);
      }
      if (HasBloodCount) {
        output.WriteRawTag(120);
        output.WriteInt32(BloodCount);
      }
      if (appearance_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Appearance);
      }
      if (HasProfessionId) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ProfessionId);
      }
      noblePositions_.WriteTo(output, _repeated_noblePositions_codec);
      if (HasRiderId) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(RiderId);
      }
      inventory_.WriteTo(output, _repeated_inventory_codec);
      if (HasSubposX) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(SubposX);
      }
      if (HasSubposY) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(SubposY);
      }
      if (HasSubposZ) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(SubposZ);
      }
      if (facing_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Facing);
      }
      if (HasAge) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(Age);
      }
      wounds_.WriteTo(output, _repeated_wounds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasIsValid) {
        output.WriteRawTag(16);
        output.WriteBool(IsValid);
      }
      if (HasPosX) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(40);
        output.WriteInt32(PosZ);
      }
      if (race_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Race);
      }
      if (professionColor_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProfessionColor);
      }
      if (HasFlags1) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags1);
      }
      if (HasFlags2) {
        output.WriteRawTag(72);
        output.WriteUInt32(Flags2);
      }
      if (HasFlags3) {
        output.WriteRawTag(80);
        output.WriteUInt32(Flags3);
      }
      if (HasIsSoldier) {
        output.WriteRawTag(88);
        output.WriteBool(IsSoldier);
      }
      if (sizeInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SizeInfo);
      }
      if (HasName) {
        output.WriteRawTag(106);
        output.WriteBytes(Name);
      }
      if (HasBloodMax) {
        output.WriteRawTag(112);
        output.WriteInt32(BloodMax);
      }
      if (HasBloodCount) {
        output.WriteRawTag(120);
        output.WriteInt32(BloodCount);
      }
      if (appearance_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Appearance);
      }
      if (HasProfessionId) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ProfessionId);
      }
      noblePositions_.WriteTo(ref output, _repeated_noblePositions_codec);
      if (HasRiderId) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(RiderId);
      }
      inventory_.WriteTo(ref output, _repeated_inventory_codec);
      if (HasSubposX) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(SubposX);
      }
      if (HasSubposY) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(SubposY);
      }
      if (HasSubposZ) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(SubposZ);
      }
      if (facing_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Facing);
      }
      if (HasAge) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(Age);
      }
      wounds_.WriteTo(ref output, _repeated_wounds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasIsValid) {
        size += 1 + 1;
      }
      if (HasPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (HasPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (HasPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosZ);
      }
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (professionColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfessionColor);
      }
      if (HasFlags1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags1);
      }
      if (HasFlags2) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags2);
      }
      if (HasFlags3) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags3);
      }
      if (HasIsSoldier) {
        size += 1 + 1;
      }
      if (sizeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SizeInfo);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasBloodMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BloodMax);
      }
      if (HasBloodCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BloodCount);
      }
      if (appearance_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Appearance);
      }
      if (HasProfessionId) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ProfessionId);
      }
      size += noblePositions_.CalculateSize(_repeated_noblePositions_codec);
      if (HasRiderId) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RiderId);
      }
      size += inventory_.CalculateSize(_repeated_inventory_codec);
      if (HasSubposX) {
        size += 2 + 4;
      }
      if (HasSubposY) {
        size += 2 + 4;
      }
      if (HasSubposZ) {
        size += 2 + 4;
      }
      if (facing_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Facing);
      }
      if (HasAge) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      size += wounds_.CalculateSize(_repeated_wounds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasIsValid) {
        IsValid = other.IsValid;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasPosZ) {
        PosZ = other.PosZ;
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::RemoteFortressReader.MatPair();
        }
        Race.MergeFrom(other.Race);
      }
      if (other.professionColor_ != null) {
        if (professionColor_ == null) {
          ProfessionColor = new global::RemoteFortressReader.ColorDefinition();
        }
        ProfessionColor.MergeFrom(other.ProfessionColor);
      }
      if (other.HasFlags1) {
        Flags1 = other.Flags1;
      }
      if (other.HasFlags2) {
        Flags2 = other.Flags2;
      }
      if (other.HasFlags3) {
        Flags3 = other.Flags3;
      }
      if (other.HasIsSoldier) {
        IsSoldier = other.IsSoldier;
      }
      if (other.sizeInfo_ != null) {
        if (sizeInfo_ == null) {
          SizeInfo = new global::RemoteFortressReader.BodySizeInfo();
        }
        SizeInfo.MergeFrom(other.SizeInfo);
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasBloodMax) {
        BloodMax = other.BloodMax;
      }
      if (other.HasBloodCount) {
        BloodCount = other.BloodCount;
      }
      if (other.appearance_ != null) {
        if (appearance_ == null) {
          Appearance = new global::RemoteFortressReader.UnitAppearance();
        }
        Appearance.MergeFrom(other.Appearance);
      }
      if (other.HasProfessionId) {
        ProfessionId = other.ProfessionId;
      }
      noblePositions_.Add(other.noblePositions_);
      if (other.HasRiderId) {
        RiderId = other.RiderId;
      }
      inventory_.Add(other.inventory_);
      if (other.HasSubposX) {
        SubposX = other.SubposX;
      }
      if (other.HasSubposY) {
        SubposY = other.SubposY;
      }
      if (other.HasSubposZ) {
        SubposZ = other.SubposZ;
      }
      if (other.facing_ != null) {
        if (facing_ == null) {
          Facing = new global::RemoteFortressReader.Coord();
        }
        Facing.MergeFrom(other.Facing);
      }
      if (other.HasAge) {
        Age = other.Age;
      }
      wounds_.Add(other.wounds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsValid = input.ReadBool();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
          case 40: {
            PosZ = input.ReadInt32();
            break;
          }
          case 50: {
            if (race_ == null) {
              Race = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Race);
            break;
          }
          case 58: {
            if (professionColor_ == null) {
              ProfessionColor = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(ProfessionColor);
            break;
          }
          case 64: {
            Flags1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Flags2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Flags3 = input.ReadUInt32();
            break;
          }
          case 88: {
            IsSoldier = input.ReadBool();
            break;
          }
          case 98: {
            if (sizeInfo_ == null) {
              SizeInfo = new global::RemoteFortressReader.BodySizeInfo();
            }
            input.ReadMessage(SizeInfo);
            break;
          }
          case 106: {
            Name = input.ReadBytes();
            break;
          }
          case 112: {
            BloodMax = input.ReadInt32();
            break;
          }
          case 120: {
            BloodCount = input.ReadInt32();
            break;
          }
          case 130: {
            if (appearance_ == null) {
              Appearance = new global::RemoteFortressReader.UnitAppearance();
            }
            input.ReadMessage(Appearance);
            break;
          }
          case 136: {
            ProfessionId = input.ReadInt32();
            break;
          }
          case 146: {
            noblePositions_.AddEntriesFrom(input, _repeated_noblePositions_codec);
            break;
          }
          case 152: {
            RiderId = input.ReadInt32();
            break;
          }
          case 162: {
            inventory_.AddEntriesFrom(input, _repeated_inventory_codec);
            break;
          }
          case 173: {
            SubposX = input.ReadFloat();
            break;
          }
          case 181: {
            SubposY = input.ReadFloat();
            break;
          }
          case 189: {
            SubposZ = input.ReadFloat();
            break;
          }
          case 194: {
            if (facing_ == null) {
              Facing = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Facing);
            break;
          }
          case 200: {
            Age = input.ReadInt32();
            break;
          }
          case 210: {
            wounds_.AddEntriesFrom(input, _repeated_wounds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsValid = input.ReadBool();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
          case 40: {
            PosZ = input.ReadInt32();
            break;
          }
          case 50: {
            if (race_ == null) {
              Race = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Race);
            break;
          }
          case 58: {
            if (professionColor_ == null) {
              ProfessionColor = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(ProfessionColor);
            break;
          }
          case 64: {
            Flags1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Flags2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Flags3 = input.ReadUInt32();
            break;
          }
          case 88: {
            IsSoldier = input.ReadBool();
            break;
          }
          case 98: {
            if (sizeInfo_ == null) {
              SizeInfo = new global::RemoteFortressReader.BodySizeInfo();
            }
            input.ReadMessage(SizeInfo);
            break;
          }
          case 106: {
            Name = input.ReadBytes();
            break;
          }
          case 112: {
            BloodMax = input.ReadInt32();
            break;
          }
          case 120: {
            BloodCount = input.ReadInt32();
            break;
          }
          case 130: {
            if (appearance_ == null) {
              Appearance = new global::RemoteFortressReader.UnitAppearance();
            }
            input.ReadMessage(Appearance);
            break;
          }
          case 136: {
            ProfessionId = input.ReadInt32();
            break;
          }
          case 146: {
            noblePositions_.AddEntriesFrom(ref input, _repeated_noblePositions_codec);
            break;
          }
          case 152: {
            RiderId = input.ReadInt32();
            break;
          }
          case 162: {
            inventory_.AddEntriesFrom(ref input, _repeated_inventory_codec);
            break;
          }
          case 173: {
            SubposX = input.ReadFloat();
            break;
          }
          case 181: {
            SubposY = input.ReadFloat();
            break;
          }
          case 189: {
            SubposZ = input.ReadFloat();
            break;
          }
          case 194: {
            if (facing_ == null) {
              Facing = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Facing);
            break;
          }
          case 200: {
            Age = input.ReadInt32();
            break;
          }
          case 210: {
            wounds_.AddEntriesFrom(ref input, _repeated_wounds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitList : pb::IMessage<UnitList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitList> _parser = new pb::MessageParser<UnitList>(() => new UnitList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitList(UnitList other) : this() {
      creatureList_ = other.creatureList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitList Clone() {
      return new UnitList(this);
    }

    /// <summary>Field number for the "creature_list" field.</summary>
    public const int CreatureListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.UnitDefinition> _repeated_creatureList_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.UnitDefinition.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition> creatureList_ = new pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition> CreatureList {
      get { return creatureList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!creatureList_.Equals(other.creatureList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= creatureList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      creatureList_.WriteTo(output, _repeated_creatureList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      creatureList_.WriteTo(ref output, _repeated_creatureList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += creatureList_.CalculateSize(_repeated_creatureList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitList other) {
      if (other == null) {
        return;
      }
      creatureList_.Add(other.creatureList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            creatureList_.AddEntriesFrom(input, _repeated_creatureList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            creatureList_.AddEntriesFrom(ref input, _repeated_creatureList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BlockRequest : pb::IMessage<BlockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlockRequest> _parser = new pb::MessageParser<BlockRequest>(() => new BlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRequest(BlockRequest other) : this() {
      _hasBits0 = other._hasBits0;
      blocksNeeded_ = other.blocksNeeded_;
      minX_ = other.minX_;
      maxX_ = other.maxX_;
      minY_ = other.minY_;
      maxY_ = other.maxY_;
      minZ_ = other.minZ_;
      maxZ_ = other.maxZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockRequest Clone() {
      return new BlockRequest(this);
    }

    /// <summary>Field number for the "blocks_needed" field.</summary>
    public const int BlocksNeededFieldNumber = 1;
    private readonly static int BlocksNeededDefaultValue = 0;

    private int blocksNeeded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlocksNeeded {
      get { if ((_hasBits0 & 1) != 0) { return blocksNeeded_; } else { return BlocksNeededDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blocksNeeded_ = value;
      }
    }
    /// <summary>Gets whether the "blocks_needed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlocksNeeded {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blocks_needed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlocksNeeded() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_x" field.</summary>
    public const int MinXFieldNumber = 2;
    private readonly static int MinXDefaultValue = 0;

    private int minX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinX {
      get { if ((_hasBits0 & 2) != 0) { return minX_; } else { return MinXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minX_ = value;
      }
    }
    /// <summary>Gets whether the "min_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_x" field.</summary>
    public const int MaxXFieldNumber = 3;
    private readonly static int MaxXDefaultValue = 0;

    private int maxX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxX {
      get { if ((_hasBits0 & 4) != 0) { return maxX_; } else { return MaxXDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxX_ = value;
      }
    }
    /// <summary>Gets whether the "max_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_y" field.</summary>
    public const int MinYFieldNumber = 4;
    private readonly static int MinYDefaultValue = 0;

    private int minY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinY {
      get { if ((_hasBits0 & 8) != 0) { return minY_; } else { return MinYDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minY_ = value;
      }
    }
    /// <summary>Gets whether the "min_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinY() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "max_y" field.</summary>
    public const int MaxYFieldNumber = 5;
    private readonly static int MaxYDefaultValue = 0;

    private int maxY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxY {
      get { if ((_hasBits0 & 16) != 0) { return maxY_; } else { return MaxYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxY_ = value;
      }
    }
    /// <summary>Gets whether the "max_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "min_z" field.</summary>
    public const int MinZFieldNumber = 6;
    private readonly static int MinZDefaultValue = 0;

    private int minZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinZ {
      get { if ((_hasBits0 & 32) != 0) { return minZ_; } else { return MinZDefaultValue; } }
      set {
        _hasBits0 |= 32;
        minZ_ = value;
      }
    }
    /// <summary>Gets whether the "min_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinZ {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "min_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinZ() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "max_z" field.</summary>
    public const int MaxZFieldNumber = 7;
    private readonly static int MaxZDefaultValue = 0;

    private int maxZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxZ {
      get { if ((_hasBits0 & 64) != 0) { return maxZ_; } else { return MaxZDefaultValue; } }
      set {
        _hasBits0 |= 64;
        maxZ_ = value;
      }
    }
    /// <summary>Gets whether the "max_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxZ {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "max_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxZ() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlocksNeeded != other.BlocksNeeded) return false;
      if (MinX != other.MinX) return false;
      if (MaxX != other.MaxX) return false;
      if (MinY != other.MinY) return false;
      if (MaxY != other.MaxY) return false;
      if (MinZ != other.MinZ) return false;
      if (MaxZ != other.MaxZ) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBlocksNeeded) hash ^= BlocksNeeded.GetHashCode();
      if (HasMinX) hash ^= MinX.GetHashCode();
      if (HasMaxX) hash ^= MaxX.GetHashCode();
      if (HasMinY) hash ^= MinY.GetHashCode();
      if (HasMaxY) hash ^= MaxY.GetHashCode();
      if (HasMinZ) hash ^= MinZ.GetHashCode();
      if (HasMaxZ) hash ^= MaxZ.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBlocksNeeded) {
        output.WriteRawTag(8);
        output.WriteInt32(BlocksNeeded);
      }
      if (HasMinX) {
        output.WriteRawTag(16);
        output.WriteInt32(MinX);
      }
      if (HasMaxX) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxX);
      }
      if (HasMinY) {
        output.WriteRawTag(32);
        output.WriteInt32(MinY);
      }
      if (HasMaxY) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxY);
      }
      if (HasMinZ) {
        output.WriteRawTag(48);
        output.WriteInt32(MinZ);
      }
      if (HasMaxZ) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBlocksNeeded) {
        output.WriteRawTag(8);
        output.WriteInt32(BlocksNeeded);
      }
      if (HasMinX) {
        output.WriteRawTag(16);
        output.WriteInt32(MinX);
      }
      if (HasMaxX) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxX);
      }
      if (HasMinY) {
        output.WriteRawTag(32);
        output.WriteInt32(MinY);
      }
      if (HasMaxY) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxY);
      }
      if (HasMinZ) {
        output.WriteRawTag(48);
        output.WriteInt32(MinZ);
      }
      if (HasMaxZ) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBlocksNeeded) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlocksNeeded);
      }
      if (HasMinX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinX);
      }
      if (HasMaxX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxX);
      }
      if (HasMinY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinY);
      }
      if (HasMaxY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxY);
      }
      if (HasMinZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinZ);
      }
      if (HasMaxZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxZ);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBlocksNeeded) {
        BlocksNeeded = other.BlocksNeeded;
      }
      if (other.HasMinX) {
        MinX = other.MinX;
      }
      if (other.HasMaxX) {
        MaxX = other.MaxX;
      }
      if (other.HasMinY) {
        MinY = other.MinY;
      }
      if (other.HasMaxY) {
        MaxY = other.MaxY;
      }
      if (other.HasMinZ) {
        MinZ = other.MinZ;
      }
      if (other.HasMaxZ) {
        MaxZ = other.MaxZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlocksNeeded = input.ReadInt32();
            break;
          }
          case 16: {
            MinX = input.ReadInt32();
            break;
          }
          case 24: {
            MaxX = input.ReadInt32();
            break;
          }
          case 32: {
            MinY = input.ReadInt32();
            break;
          }
          case 40: {
            MaxY = input.ReadInt32();
            break;
          }
          case 48: {
            MinZ = input.ReadInt32();
            break;
          }
          case 56: {
            MaxZ = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlocksNeeded = input.ReadInt32();
            break;
          }
          case 16: {
            MinX = input.ReadInt32();
            break;
          }
          case 24: {
            MaxX = input.ReadInt32();
            break;
          }
          case 32: {
            MinY = input.ReadInt32();
            break;
          }
          case 40: {
            MaxY = input.ReadInt32();
            break;
          }
          case 48: {
            MinZ = input.ReadInt32();
            break;
          }
          case 56: {
            MaxZ = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BlockList : pb::IMessage<BlockList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockList(BlockList other) : this() {
      _hasBits0 = other._hasBits0;
      mapBlocks_ = other.mapBlocks_.Clone();
      mapX_ = other.mapX_;
      mapY_ = other.mapY_;
      engravings_ = other.engravings_.Clone();
      oceanWaves_ = other.oceanWaves_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "map_blocks" field.</summary>
    public const int MapBlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MapBlock> _repeated_mapBlocks_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.MapBlock.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MapBlock> mapBlocks_ = new pbc::RepeatedField<global::RemoteFortressReader.MapBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MapBlock> MapBlocks {
      get { return mapBlocks_; }
    }

    /// <summary>Field number for the "map_x" field.</summary>
    public const int MapXFieldNumber = 2;
    private readonly static int MapXDefaultValue = 0;

    private int mapX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapX {
      get { if ((_hasBits0 & 1) != 0) { return mapX_; } else { return MapXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapX_ = value;
      }
    }
    /// <summary>Gets whether the "map_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "map_y" field.</summary>
    public const int MapYFieldNumber = 3;
    private readonly static int MapYDefaultValue = 0;

    private int mapY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapY {
      get { if ((_hasBits0 & 2) != 0) { return mapY_; } else { return MapYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mapY_ = value;
      }
    }
    /// <summary>Gets whether the "map_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "map_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "engravings" field.</summary>
    public const int EngravingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Engraving> _repeated_engravings_codec
        = pb::FieldCodec.ForMessage(34, global::RemoteFortressReader.Engraving.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Engraving> engravings_ = new pbc::RepeatedField<global::RemoteFortressReader.Engraving>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Engraving> Engravings {
      get { return engravings_; }
    }

    /// <summary>Field number for the "ocean_waves" field.</summary>
    public const int OceanWavesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Wave> _repeated_oceanWaves_codec
        = pb::FieldCodec.ForMessage(42, global::RemoteFortressReader.Wave.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Wave> oceanWaves_ = new pbc::RepeatedField<global::RemoteFortressReader.Wave>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Wave> OceanWaves {
      get { return oceanWaves_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mapBlocks_.Equals(other.mapBlocks_)) return false;
      if (MapX != other.MapX) return false;
      if (MapY != other.MapY) return false;
      if(!engravings_.Equals(other.engravings_)) return false;
      if(!oceanWaves_.Equals(other.oceanWaves_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mapBlocks_.GetHashCode();
      if (HasMapX) hash ^= MapX.GetHashCode();
      if (HasMapY) hash ^= MapY.GetHashCode();
      hash ^= engravings_.GetHashCode();
      hash ^= oceanWaves_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mapBlocks_.WriteTo(output, _repeated_mapBlocks_codec);
      if (HasMapX) {
        output.WriteRawTag(16);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(24);
        output.WriteInt32(MapY);
      }
      engravings_.WriteTo(output, _repeated_engravings_codec);
      oceanWaves_.WriteTo(output, _repeated_oceanWaves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mapBlocks_.WriteTo(ref output, _repeated_mapBlocks_codec);
      if (HasMapX) {
        output.WriteRawTag(16);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(24);
        output.WriteInt32(MapY);
      }
      engravings_.WriteTo(ref output, _repeated_engravings_codec);
      oceanWaves_.WriteTo(ref output, _repeated_oceanWaves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mapBlocks_.CalculateSize(_repeated_mapBlocks_codec);
      if (HasMapX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapX);
      }
      if (HasMapY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapY);
      }
      size += engravings_.CalculateSize(_repeated_engravings_codec);
      size += oceanWaves_.CalculateSize(_repeated_oceanWaves_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      mapBlocks_.Add(other.mapBlocks_);
      if (other.HasMapX) {
        MapX = other.MapX;
      }
      if (other.HasMapY) {
        MapY = other.MapY;
      }
      engravings_.Add(other.engravings_);
      oceanWaves_.Add(other.oceanWaves_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mapBlocks_.AddEntriesFrom(input, _repeated_mapBlocks_codec);
            break;
          }
          case 16: {
            MapX = input.ReadInt32();
            break;
          }
          case 24: {
            MapY = input.ReadInt32();
            break;
          }
          case 34: {
            engravings_.AddEntriesFrom(input, _repeated_engravings_codec);
            break;
          }
          case 42: {
            oceanWaves_.AddEntriesFrom(input, _repeated_oceanWaves_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mapBlocks_.AddEntriesFrom(ref input, _repeated_mapBlocks_codec);
            break;
          }
          case 16: {
            MapX = input.ReadInt32();
            break;
          }
          case 24: {
            MapY = input.ReadInt32();
            break;
          }
          case 34: {
            engravings_.AddEntriesFrom(ref input, _repeated_engravings_codec);
            break;
          }
          case 42: {
            oceanWaves_.AddEntriesFrom(ref input, _repeated_oceanWaves_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantDef : pb::IMessage<PlantDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantDef> _parser = new pb::MessageParser<PlantDef>(() => new PlantDef());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantDef(PlantDef other) : this() {
      _hasBits0 = other._hasBits0;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantDef Clone() {
      return new PlantDef(this);
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 1;
    private readonly static int PosXDefaultValue = 0;

    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosX {
      get { if ((_hasBits0 & 1) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 2;
    private readonly static int PosYDefaultValue = 0;

    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosY {
      get { if ((_hasBits0 & 2) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_z" field.</summary>
    public const int PosZFieldNumber = 3;
    private readonly static int PosZDefaultValue = 0;

    private int posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosZ {
      get { if ((_hasBits0 & 4) != 0) { return posZ_; } else { return PosZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posZ_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 8) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (PosZ != other.PosZ) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPosX) hash ^= PosX.GetHashCode();
      if (HasPosY) hash ^= PosY.GetHashCode();
      if (HasPosZ) hash ^= PosZ.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(24);
        output.WriteInt32(PosZ);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(24);
        output.WriteInt32(PosZ);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (HasPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (HasPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosZ);
      }
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantDef other) {
      if (other == null) {
        return;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasPosZ) {
        PosZ = other.PosZ;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PosX = input.ReadInt32();
            break;
          }
          case 16: {
            PosY = input.ReadInt32();
            break;
          }
          case 24: {
            PosZ = input.ReadInt32();
            break;
          }
          case 32: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PosX = input.ReadInt32();
            break;
          }
          case 16: {
            PosY = input.ReadInt32();
            break;
          }
          case 24: {
            PosZ = input.ReadInt32();
            break;
          }
          case 32: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantList : pb::IMessage<PlantList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantList> _parser = new pb::MessageParser<PlantList>(() => new PlantList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantList(PlantList other) : this() {
      plantList_ = other.plantList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantList Clone() {
      return new PlantList(this);
    }

    /// <summary>Field number for the "plant_list" field.</summary>
    public const int PlantList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.PlantDef> _repeated_plantList_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.PlantDef.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.PlantDef> plantList_ = new pbc::RepeatedField<global::RemoteFortressReader.PlantDef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.PlantDef> PlantList_ {
      get { return plantList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plantList_.Equals(other.plantList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plantList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plantList_.WriteTo(output, _repeated_plantList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plantList_.WriteTo(ref output, _repeated_plantList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += plantList_.CalculateSize(_repeated_plantList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantList other) {
      if (other == null) {
        return;
      }
      plantList_.Add(other.plantList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plantList_.AddEntriesFrom(input, _repeated_plantList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plantList_.AddEntriesFrom(ref input, _repeated_plantList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ViewInfo : pb::IMessage<ViewInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ViewInfo> _parser = new pb::MessageParser<ViewInfo>(() => new ViewInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ViewInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewInfo(ViewInfo other) : this() {
      _hasBits0 = other._hasBits0;
      viewPosX_ = other.viewPosX_;
      viewPosY_ = other.viewPosY_;
      viewPosZ_ = other.viewPosZ_;
      viewSizeX_ = other.viewSizeX_;
      viewSizeY_ = other.viewSizeY_;
      cursorPosX_ = other.cursorPosX_;
      cursorPosY_ = other.cursorPosY_;
      cursorPosZ_ = other.cursorPosZ_;
      followUnitId_ = other.followUnitId_;
      followItemId_ = other.followItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewInfo Clone() {
      return new ViewInfo(this);
    }

    /// <summary>Field number for the "view_pos_x" field.</summary>
    public const int ViewPosXFieldNumber = 1;
    private readonly static int ViewPosXDefaultValue = 0;

    private int viewPosX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewPosX {
      get { if ((_hasBits0 & 1) != 0) { return viewPosX_; } else { return ViewPosXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        viewPosX_ = value;
      }
    }
    /// <summary>Gets whether the "view_pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewPosX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "view_pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewPosX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "view_pos_y" field.</summary>
    public const int ViewPosYFieldNumber = 2;
    private readonly static int ViewPosYDefaultValue = 0;

    private int viewPosY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewPosY {
      get { if ((_hasBits0 & 2) != 0) { return viewPosY_; } else { return ViewPosYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        viewPosY_ = value;
      }
    }
    /// <summary>Gets whether the "view_pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewPosY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "view_pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewPosY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "view_pos_z" field.</summary>
    public const int ViewPosZFieldNumber = 3;
    private readonly static int ViewPosZDefaultValue = 0;

    private int viewPosZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewPosZ {
      get { if ((_hasBits0 & 4) != 0) { return viewPosZ_; } else { return ViewPosZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        viewPosZ_ = value;
      }
    }
    /// <summary>Gets whether the "view_pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewPosZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "view_pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewPosZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "view_size_x" field.</summary>
    public const int ViewSizeXFieldNumber = 4;
    private readonly static int ViewSizeXDefaultValue = 0;

    private int viewSizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewSizeX {
      get { if ((_hasBits0 & 8) != 0) { return viewSizeX_; } else { return ViewSizeXDefaultValue; } }
      set {
        _hasBits0 |= 8;
        viewSizeX_ = value;
      }
    }
    /// <summary>Gets whether the "view_size_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewSizeX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "view_size_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewSizeX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "view_size_y" field.</summary>
    public const int ViewSizeYFieldNumber = 5;
    private readonly static int ViewSizeYDefaultValue = 0;

    private int viewSizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewSizeY {
      get { if ((_hasBits0 & 16) != 0) { return viewSizeY_; } else { return ViewSizeYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        viewSizeY_ = value;
      }
    }
    /// <summary>Gets whether the "view_size_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewSizeY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "view_size_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewSizeY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "cursor_pos_x" field.</summary>
    public const int CursorPosXFieldNumber = 6;
    private readonly static int CursorPosXDefaultValue = 0;

    private int cursorPosX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CursorPosX {
      get { if ((_hasBits0 & 32) != 0) { return cursorPosX_; } else { return CursorPosXDefaultValue; } }
      set {
        _hasBits0 |= 32;
        cursorPosX_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorPosX {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "cursor_pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorPosX() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "cursor_pos_y" field.</summary>
    public const int CursorPosYFieldNumber = 7;
    private readonly static int CursorPosYDefaultValue = 0;

    private int cursorPosY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CursorPosY {
      get { if ((_hasBits0 & 64) != 0) { return cursorPosY_; } else { return CursorPosYDefaultValue; } }
      set {
        _hasBits0 |= 64;
        cursorPosY_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorPosY {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "cursor_pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorPosY() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "cursor_pos_z" field.</summary>
    public const int CursorPosZFieldNumber = 8;
    private readonly static int CursorPosZDefaultValue = 0;

    private int cursorPosZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CursorPosZ {
      get { if ((_hasBits0 & 128) != 0) { return cursorPosZ_; } else { return CursorPosZDefaultValue; } }
      set {
        _hasBits0 |= 128;
        cursorPosZ_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorPosZ {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "cursor_pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorPosZ() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "follow_unit_id" field.</summary>
    public const int FollowUnitIdFieldNumber = 9;
    private readonly static int FollowUnitIdDefaultValue = -1;

    private int followUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FollowUnitId {
      get { if ((_hasBits0 & 256) != 0) { return followUnitId_; } else { return FollowUnitIdDefaultValue; } }
      set {
        _hasBits0 |= 256;
        followUnitId_ = value;
      }
    }
    /// <summary>Gets whether the "follow_unit_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFollowUnitId {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "follow_unit_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFollowUnitId() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "follow_item_id" field.</summary>
    public const int FollowItemIdFieldNumber = 10;
    private readonly static int FollowItemIdDefaultValue = -1;

    private int followItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FollowItemId {
      get { if ((_hasBits0 & 512) != 0) { return followItemId_; } else { return FollowItemIdDefaultValue; } }
      set {
        _hasBits0 |= 512;
        followItemId_ = value;
      }
    }
    /// <summary>Gets whether the "follow_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFollowItemId {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "follow_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFollowItemId() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ViewInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ViewInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewPosX != other.ViewPosX) return false;
      if (ViewPosY != other.ViewPosY) return false;
      if (ViewPosZ != other.ViewPosZ) return false;
      if (ViewSizeX != other.ViewSizeX) return false;
      if (ViewSizeY != other.ViewSizeY) return false;
      if (CursorPosX != other.CursorPosX) return false;
      if (CursorPosY != other.CursorPosY) return false;
      if (CursorPosZ != other.CursorPosZ) return false;
      if (FollowUnitId != other.FollowUnitId) return false;
      if (FollowItemId != other.FollowItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasViewPosX) hash ^= ViewPosX.GetHashCode();
      if (HasViewPosY) hash ^= ViewPosY.GetHashCode();
      if (HasViewPosZ) hash ^= ViewPosZ.GetHashCode();
      if (HasViewSizeX) hash ^= ViewSizeX.GetHashCode();
      if (HasViewSizeY) hash ^= ViewSizeY.GetHashCode();
      if (HasCursorPosX) hash ^= CursorPosX.GetHashCode();
      if (HasCursorPosY) hash ^= CursorPosY.GetHashCode();
      if (HasCursorPosZ) hash ^= CursorPosZ.GetHashCode();
      if (HasFollowUnitId) hash ^= FollowUnitId.GetHashCode();
      if (HasFollowItemId) hash ^= FollowItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasViewPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewPosX);
      }
      if (HasViewPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(ViewPosY);
      }
      if (HasViewPosZ) {
        output.WriteRawTag(24);
        output.WriteInt32(ViewPosZ);
      }
      if (HasViewSizeX) {
        output.WriteRawTag(32);
        output.WriteInt32(ViewSizeX);
      }
      if (HasViewSizeY) {
        output.WriteRawTag(40);
        output.WriteInt32(ViewSizeY);
      }
      if (HasCursorPosX) {
        output.WriteRawTag(48);
        output.WriteInt32(CursorPosX);
      }
      if (HasCursorPosY) {
        output.WriteRawTag(56);
        output.WriteInt32(CursorPosY);
      }
      if (HasCursorPosZ) {
        output.WriteRawTag(64);
        output.WriteInt32(CursorPosZ);
      }
      if (HasFollowUnitId) {
        output.WriteRawTag(72);
        output.WriteInt32(FollowUnitId);
      }
      if (HasFollowItemId) {
        output.WriteRawTag(80);
        output.WriteInt32(FollowItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasViewPosX) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewPosX);
      }
      if (HasViewPosY) {
        output.WriteRawTag(16);
        output.WriteInt32(ViewPosY);
      }
      if (HasViewPosZ) {
        output.WriteRawTag(24);
        output.WriteInt32(ViewPosZ);
      }
      if (HasViewSizeX) {
        output.WriteRawTag(32);
        output.WriteInt32(ViewSizeX);
      }
      if (HasViewSizeY) {
        output.WriteRawTag(40);
        output.WriteInt32(ViewSizeY);
      }
      if (HasCursorPosX) {
        output.WriteRawTag(48);
        output.WriteInt32(CursorPosX);
      }
      if (HasCursorPosY) {
        output.WriteRawTag(56);
        output.WriteInt32(CursorPosY);
      }
      if (HasCursorPosZ) {
        output.WriteRawTag(64);
        output.WriteInt32(CursorPosZ);
      }
      if (HasFollowUnitId) {
        output.WriteRawTag(72);
        output.WriteInt32(FollowUnitId);
      }
      if (HasFollowItemId) {
        output.WriteRawTag(80);
        output.WriteInt32(FollowItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasViewPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewPosX);
      }
      if (HasViewPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewPosY);
      }
      if (HasViewPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewPosZ);
      }
      if (HasViewSizeX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewSizeX);
      }
      if (HasViewSizeY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewSizeY);
      }
      if (HasCursorPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursorPosX);
      }
      if (HasCursorPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursorPosY);
      }
      if (HasCursorPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursorPosZ);
      }
      if (HasFollowUnitId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FollowUnitId);
      }
      if (HasFollowItemId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FollowItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ViewInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasViewPosX) {
        ViewPosX = other.ViewPosX;
      }
      if (other.HasViewPosY) {
        ViewPosY = other.ViewPosY;
      }
      if (other.HasViewPosZ) {
        ViewPosZ = other.ViewPosZ;
      }
      if (other.HasViewSizeX) {
        ViewSizeX = other.ViewSizeX;
      }
      if (other.HasViewSizeY) {
        ViewSizeY = other.ViewSizeY;
      }
      if (other.HasCursorPosX) {
        CursorPosX = other.CursorPosX;
      }
      if (other.HasCursorPosY) {
        CursorPosY = other.CursorPosY;
      }
      if (other.HasCursorPosZ) {
        CursorPosZ = other.CursorPosZ;
      }
      if (other.HasFollowUnitId) {
        FollowUnitId = other.FollowUnitId;
      }
      if (other.HasFollowItemId) {
        FollowItemId = other.FollowItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewPosX = input.ReadInt32();
            break;
          }
          case 16: {
            ViewPosY = input.ReadInt32();
            break;
          }
          case 24: {
            ViewPosZ = input.ReadInt32();
            break;
          }
          case 32: {
            ViewSizeX = input.ReadInt32();
            break;
          }
          case 40: {
            ViewSizeY = input.ReadInt32();
            break;
          }
          case 48: {
            CursorPosX = input.ReadInt32();
            break;
          }
          case 56: {
            CursorPosY = input.ReadInt32();
            break;
          }
          case 64: {
            CursorPosZ = input.ReadInt32();
            break;
          }
          case 72: {
            FollowUnitId = input.ReadInt32();
            break;
          }
          case 80: {
            FollowItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ViewPosX = input.ReadInt32();
            break;
          }
          case 16: {
            ViewPosY = input.ReadInt32();
            break;
          }
          case 24: {
            ViewPosZ = input.ReadInt32();
            break;
          }
          case 32: {
            ViewSizeX = input.ReadInt32();
            break;
          }
          case 40: {
            ViewSizeY = input.ReadInt32();
            break;
          }
          case 48: {
            CursorPosX = input.ReadInt32();
            break;
          }
          case 56: {
            CursorPosY = input.ReadInt32();
            break;
          }
          case 64: {
            CursorPosZ = input.ReadInt32();
            break;
          }
          case 72: {
            FollowUnitId = input.ReadInt32();
            break;
          }
          case 80: {
            FollowItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapInfo : pb::IMessage<MapInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapInfo> _parser = new pb::MessageParser<MapInfo>(() => new MapInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo(MapInfo other) : this() {
      _hasBits0 = other._hasBits0;
      blockSizeX_ = other.blockSizeX_;
      blockSizeY_ = other.blockSizeY_;
      blockSizeZ_ = other.blockSizeZ_;
      blockPosX_ = other.blockPosX_;
      blockPosY_ = other.blockPosY_;
      blockPosZ_ = other.blockPosZ_;
      worldName_ = other.worldName_;
      worldNameEnglish_ = other.worldNameEnglish_;
      saveName_ = other.saveName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo Clone() {
      return new MapInfo(this);
    }

    /// <summary>Field number for the "block_size_x" field.</summary>
    public const int BlockSizeXFieldNumber = 1;
    private readonly static int BlockSizeXDefaultValue = 0;

    private int blockSizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockSizeX {
      get { if ((_hasBits0 & 1) != 0) { return blockSizeX_; } else { return BlockSizeXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blockSizeX_ = value;
      }
    }
    /// <summary>Gets whether the "block_size_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockSizeX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "block_size_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockSizeX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "block_size_y" field.</summary>
    public const int BlockSizeYFieldNumber = 2;
    private readonly static int BlockSizeYDefaultValue = 0;

    private int blockSizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockSizeY {
      get { if ((_hasBits0 & 2) != 0) { return blockSizeY_; } else { return BlockSizeYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        blockSizeY_ = value;
      }
    }
    /// <summary>Gets whether the "block_size_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockSizeY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "block_size_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockSizeY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "block_size_z" field.</summary>
    public const int BlockSizeZFieldNumber = 3;
    private readonly static int BlockSizeZDefaultValue = 0;

    private int blockSizeZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockSizeZ {
      get { if ((_hasBits0 & 4) != 0) { return blockSizeZ_; } else { return BlockSizeZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        blockSizeZ_ = value;
      }
    }
    /// <summary>Gets whether the "block_size_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockSizeZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "block_size_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockSizeZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "block_pos_x" field.</summary>
    public const int BlockPosXFieldNumber = 4;
    private readonly static int BlockPosXDefaultValue = 0;

    private int blockPosX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockPosX {
      get { if ((_hasBits0 & 8) != 0) { return blockPosX_; } else { return BlockPosXDefaultValue; } }
      set {
        _hasBits0 |= 8;
        blockPosX_ = value;
      }
    }
    /// <summary>Gets whether the "block_pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockPosX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "block_pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockPosX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "block_pos_y" field.</summary>
    public const int BlockPosYFieldNumber = 5;
    private readonly static int BlockPosYDefaultValue = 0;

    private int blockPosY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockPosY {
      get { if ((_hasBits0 & 16) != 0) { return blockPosY_; } else { return BlockPosYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        blockPosY_ = value;
      }
    }
    /// <summary>Gets whether the "block_pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockPosY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "block_pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockPosY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "block_pos_z" field.</summary>
    public const int BlockPosZFieldNumber = 6;
    private readonly static int BlockPosZDefaultValue = 0;

    private int blockPosZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockPosZ {
      get { if ((_hasBits0 & 32) != 0) { return blockPosZ_; } else { return BlockPosZDefaultValue; } }
      set {
        _hasBits0 |= 32;
        blockPosZ_ = value;
      }
    }
    /// <summary>Gets whether the "block_pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockPosZ {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "block_pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockPosZ() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "world_name" field.</summary>
    public const int WorldNameFieldNumber = 7;
    private readonly static pb::ByteString WorldNameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString worldName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString WorldName {
      get { return worldName_ ?? WorldNameDefaultValue; }
      set {
        worldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "world_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorldName {
      get { return worldName_ != null; }
    }
    /// <summary>Clears the value of the "world_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorldName() {
      worldName_ = null;
    }

    /// <summary>Field number for the "world_name_english" field.</summary>
    public const int WorldNameEnglishFieldNumber = 8;
    private readonly static pb::ByteString WorldNameEnglishDefaultValue = pb::ByteString.Empty;

    private pb::ByteString worldNameEnglish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString WorldNameEnglish {
      get { return worldNameEnglish_ ?? WorldNameEnglishDefaultValue; }
      set {
        worldNameEnglish_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "world_name_english" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorldNameEnglish {
      get { return worldNameEnglish_ != null; }
    }
    /// <summary>Clears the value of the "world_name_english" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorldNameEnglish() {
      worldNameEnglish_ = null;
    }

    /// <summary>Field number for the "save_name" field.</summary>
    public const int SaveNameFieldNumber = 9;
    private readonly static pb::ByteString SaveNameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString saveName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SaveName {
      get { return saveName_ ?? SaveNameDefaultValue; }
      set {
        saveName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "save_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSaveName {
      get { return saveName_ != null; }
    }
    /// <summary>Clears the value of the "save_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSaveName() {
      saveName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockSizeX != other.BlockSizeX) return false;
      if (BlockSizeY != other.BlockSizeY) return false;
      if (BlockSizeZ != other.BlockSizeZ) return false;
      if (BlockPosX != other.BlockPosX) return false;
      if (BlockPosY != other.BlockPosY) return false;
      if (BlockPosZ != other.BlockPosZ) return false;
      if (WorldName != other.WorldName) return false;
      if (WorldNameEnglish != other.WorldNameEnglish) return false;
      if (SaveName != other.SaveName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBlockSizeX) hash ^= BlockSizeX.GetHashCode();
      if (HasBlockSizeY) hash ^= BlockSizeY.GetHashCode();
      if (HasBlockSizeZ) hash ^= BlockSizeZ.GetHashCode();
      if (HasBlockPosX) hash ^= BlockPosX.GetHashCode();
      if (HasBlockPosY) hash ^= BlockPosY.GetHashCode();
      if (HasBlockPosZ) hash ^= BlockPosZ.GetHashCode();
      if (HasWorldName) hash ^= WorldName.GetHashCode();
      if (HasWorldNameEnglish) hash ^= WorldNameEnglish.GetHashCode();
      if (HasSaveName) hash ^= SaveName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBlockSizeX) {
        output.WriteRawTag(8);
        output.WriteInt32(BlockSizeX);
      }
      if (HasBlockSizeY) {
        output.WriteRawTag(16);
        output.WriteInt32(BlockSizeY);
      }
      if (HasBlockSizeZ) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockSizeZ);
      }
      if (HasBlockPosX) {
        output.WriteRawTag(32);
        output.WriteInt32(BlockPosX);
      }
      if (HasBlockPosY) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockPosY);
      }
      if (HasBlockPosZ) {
        output.WriteRawTag(48);
        output.WriteInt32(BlockPosZ);
      }
      if (HasWorldName) {
        output.WriteRawTag(58);
        output.WriteBytes(WorldName);
      }
      if (HasWorldNameEnglish) {
        output.WriteRawTag(66);
        output.WriteBytes(WorldNameEnglish);
      }
      if (HasSaveName) {
        output.WriteRawTag(74);
        output.WriteBytes(SaveName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBlockSizeX) {
        output.WriteRawTag(8);
        output.WriteInt32(BlockSizeX);
      }
      if (HasBlockSizeY) {
        output.WriteRawTag(16);
        output.WriteInt32(BlockSizeY);
      }
      if (HasBlockSizeZ) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockSizeZ);
      }
      if (HasBlockPosX) {
        output.WriteRawTag(32);
        output.WriteInt32(BlockPosX);
      }
      if (HasBlockPosY) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockPosY);
      }
      if (HasBlockPosZ) {
        output.WriteRawTag(48);
        output.WriteInt32(BlockPosZ);
      }
      if (HasWorldName) {
        output.WriteRawTag(58);
        output.WriteBytes(WorldName);
      }
      if (HasWorldNameEnglish) {
        output.WriteRawTag(66);
        output.WriteBytes(WorldNameEnglish);
      }
      if (HasSaveName) {
        output.WriteRawTag(74);
        output.WriteBytes(SaveName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBlockSizeX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockSizeX);
      }
      if (HasBlockSizeY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockSizeY);
      }
      if (HasBlockSizeZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockSizeZ);
      }
      if (HasBlockPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockPosX);
      }
      if (HasBlockPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockPosY);
      }
      if (HasBlockPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockPosZ);
      }
      if (HasWorldName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WorldName);
      }
      if (HasWorldNameEnglish) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WorldNameEnglish);
      }
      if (HasSaveName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SaveName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasBlockSizeX) {
        BlockSizeX = other.BlockSizeX;
      }
      if (other.HasBlockSizeY) {
        BlockSizeY = other.BlockSizeY;
      }
      if (other.HasBlockSizeZ) {
        BlockSizeZ = other.BlockSizeZ;
      }
      if (other.HasBlockPosX) {
        BlockPosX = other.BlockPosX;
      }
      if (other.HasBlockPosY) {
        BlockPosY = other.BlockPosY;
      }
      if (other.HasBlockPosZ) {
        BlockPosZ = other.BlockPosZ;
      }
      if (other.HasWorldName) {
        WorldName = other.WorldName;
      }
      if (other.HasWorldNameEnglish) {
        WorldNameEnglish = other.WorldNameEnglish;
      }
      if (other.HasSaveName) {
        SaveName = other.SaveName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockSizeX = input.ReadInt32();
            break;
          }
          case 16: {
            BlockSizeY = input.ReadInt32();
            break;
          }
          case 24: {
            BlockSizeZ = input.ReadInt32();
            break;
          }
          case 32: {
            BlockPosX = input.ReadInt32();
            break;
          }
          case 40: {
            BlockPosY = input.ReadInt32();
            break;
          }
          case 48: {
            BlockPosZ = input.ReadInt32();
            break;
          }
          case 58: {
            WorldName = input.ReadBytes();
            break;
          }
          case 66: {
            WorldNameEnglish = input.ReadBytes();
            break;
          }
          case 74: {
            SaveName = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlockSizeX = input.ReadInt32();
            break;
          }
          case 16: {
            BlockSizeY = input.ReadInt32();
            break;
          }
          case 24: {
            BlockSizeZ = input.ReadInt32();
            break;
          }
          case 32: {
            BlockPosX = input.ReadInt32();
            break;
          }
          case 40: {
            BlockPosY = input.ReadInt32();
            break;
          }
          case 48: {
            BlockPosZ = input.ReadInt32();
            break;
          }
          case 58: {
            WorldName = input.ReadBytes();
            break;
          }
          case 66: {
            WorldNameEnglish = input.ReadBytes();
            break;
          }
          case 74: {
            SaveName = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cloud : pb::IMessage<Cloud>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cloud> _parser = new pb::MessageParser<Cloud>(() => new Cloud());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cloud> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cloud() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cloud(Cloud other) : this() {
      _hasBits0 = other._hasBits0;
      front_ = other.front_;
      cumulus_ = other.cumulus_;
      cirrus_ = other.cirrus_;
      stratus_ = other.stratus_;
      fog_ = other.fog_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cloud Clone() {
      return new Cloud(this);
    }

    /// <summary>Field number for the "front" field.</summary>
    public const int FrontFieldNumber = 1;
    private readonly static global::RemoteFortressReader.FrontType FrontDefaultValue = global::RemoteFortressReader.FrontType.FrontNone;

    private global::RemoteFortressReader.FrontType front_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.FrontType Front {
      get { if ((_hasBits0 & 1) != 0) { return front_; } else { return FrontDefaultValue; } }
      set {
        _hasBits0 |= 1;
        front_ = value;
      }
    }
    /// <summary>Gets whether the "front" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFront {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "front" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFront() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cumulus" field.</summary>
    public const int CumulusFieldNumber = 2;
    private readonly static global::RemoteFortressReader.CumulusType CumulusDefaultValue = global::RemoteFortressReader.CumulusType.CumulusNone;

    private global::RemoteFortressReader.CumulusType cumulus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.CumulusType Cumulus {
      get { if ((_hasBits0 & 2) != 0) { return cumulus_; } else { return CumulusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cumulus_ = value;
      }
    }
    /// <summary>Gets whether the "cumulus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCumulus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cumulus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCumulus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cirrus" field.</summary>
    public const int CirrusFieldNumber = 3;
    private readonly static bool CirrusDefaultValue = false;

    private bool cirrus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cirrus {
      get { if ((_hasBits0 & 4) != 0) { return cirrus_; } else { return CirrusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        cirrus_ = value;
      }
    }
    /// <summary>Gets whether the "cirrus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCirrus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cirrus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCirrus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "stratus" field.</summary>
    public const int StratusFieldNumber = 4;
    private readonly static global::RemoteFortressReader.StratusType StratusDefaultValue = global::RemoteFortressReader.StratusType.StratusNone;

    private global::RemoteFortressReader.StratusType stratus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.StratusType Stratus {
      get { if ((_hasBits0 & 8) != 0) { return stratus_; } else { return StratusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stratus_ = value;
      }
    }
    /// <summary>Gets whether the "stratus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStratus {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stratus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStratus() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "fog" field.</summary>
    public const int FogFieldNumber = 5;
    private readonly static global::RemoteFortressReader.FogType FogDefaultValue = global::RemoteFortressReader.FogType.FogNone;

    private global::RemoteFortressReader.FogType fog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.FogType Fog {
      get { if ((_hasBits0 & 16) != 0) { return fog_; } else { return FogDefaultValue; } }
      set {
        _hasBits0 |= 16;
        fog_ = value;
      }
    }
    /// <summary>Gets whether the "fog" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFog {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fog" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFog() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cloud);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cloud other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Front != other.Front) return false;
      if (Cumulus != other.Cumulus) return false;
      if (Cirrus != other.Cirrus) return false;
      if (Stratus != other.Stratus) return false;
      if (Fog != other.Fog) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFront) hash ^= Front.GetHashCode();
      if (HasCumulus) hash ^= Cumulus.GetHashCode();
      if (HasCirrus) hash ^= Cirrus.GetHashCode();
      if (HasStratus) hash ^= Stratus.GetHashCode();
      if (HasFog) hash ^= Fog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFront) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Front);
      }
      if (HasCumulus) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Cumulus);
      }
      if (HasCirrus) {
        output.WriteRawTag(24);
        output.WriteBool(Cirrus);
      }
      if (HasStratus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Stratus);
      }
      if (HasFog) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Fog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFront) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Front);
      }
      if (HasCumulus) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Cumulus);
      }
      if (HasCirrus) {
        output.WriteRawTag(24);
        output.WriteBool(Cirrus);
      }
      if (HasStratus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Stratus);
      }
      if (HasFog) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Fog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFront) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Front);
      }
      if (HasCumulus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cumulus);
      }
      if (HasCirrus) {
        size += 1 + 1;
      }
      if (HasStratus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Stratus);
      }
      if (HasFog) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Fog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cloud other) {
      if (other == null) {
        return;
      }
      if (other.HasFront) {
        Front = other.Front;
      }
      if (other.HasCumulus) {
        Cumulus = other.Cumulus;
      }
      if (other.HasCirrus) {
        Cirrus = other.Cirrus;
      }
      if (other.HasStratus) {
        Stratus = other.Stratus;
      }
      if (other.HasFog) {
        Fog = other.Fog;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Front = (global::RemoteFortressReader.FrontType) input.ReadEnum();
            break;
          }
          case 16: {
            Cumulus = (global::RemoteFortressReader.CumulusType) input.ReadEnum();
            break;
          }
          case 24: {
            Cirrus = input.ReadBool();
            break;
          }
          case 32: {
            Stratus = (global::RemoteFortressReader.StratusType) input.ReadEnum();
            break;
          }
          case 40: {
            Fog = (global::RemoteFortressReader.FogType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Front = (global::RemoteFortressReader.FrontType) input.ReadEnum();
            break;
          }
          case 16: {
            Cumulus = (global::RemoteFortressReader.CumulusType) input.ReadEnum();
            break;
          }
          case 24: {
            Cirrus = input.ReadBool();
            break;
          }
          case 32: {
            Stratus = (global::RemoteFortressReader.StratusType) input.ReadEnum();
            break;
          }
          case 40: {
            Fog = (global::RemoteFortressReader.FogType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WorldMap : pb::IMessage<WorldMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorldMap> _parser = new pb::MessageParser<WorldMap>(() => new WorldMap());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorldMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldMap(WorldMap other) : this() {
      _hasBits0 = other._hasBits0;
      worldWidth_ = other.worldWidth_;
      worldHeight_ = other.worldHeight_;
      name_ = other.name_;
      nameEnglish_ = other.nameEnglish_;
      elevation_ = other.elevation_.Clone();
      rainfall_ = other.rainfall_.Clone();
      vegetation_ = other.vegetation_.Clone();
      temperature_ = other.temperature_.Clone();
      evilness_ = other.evilness_.Clone();
      drainage_ = other.drainage_.Clone();
      volcanism_ = other.volcanism_.Clone();
      savagery_ = other.savagery_.Clone();
      clouds_ = other.clouds_.Clone();
      salinity_ = other.salinity_.Clone();
      mapX_ = other.mapX_;
      mapY_ = other.mapY_;
      centerX_ = other.centerX_;
      centerY_ = other.centerY_;
      centerZ_ = other.centerZ_;
      curYear_ = other.curYear_;
      curYearTick_ = other.curYearTick_;
      worldPoles_ = other.worldPoles_;
      riverTiles_ = other.riverTiles_.Clone();
      waterElevation_ = other.waterElevation_.Clone();
      regionTiles_ = other.regionTiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldMap Clone() {
      return new WorldMap(this);
    }

    /// <summary>Field number for the "world_width" field.</summary>
    public const int WorldWidthFieldNumber = 1;
    private readonly static int WorldWidthDefaultValue = 0;

    private int worldWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WorldWidth {
      get { if ((_hasBits0 & 1) != 0) { return worldWidth_; } else { return WorldWidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        worldWidth_ = value;
      }
    }
    /// <summary>Gets whether the "world_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorldWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "world_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorldWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "world_height" field.</summary>
    public const int WorldHeightFieldNumber = 2;
    private readonly static int WorldHeightDefaultValue = 0;

    private int worldHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WorldHeight {
      get { if ((_hasBits0 & 2) != 0) { return worldHeight_; } else { return WorldHeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        worldHeight_ = value;
      }
    }
    /// <summary>Gets whether the "world_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorldHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "world_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorldHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "name_english" field.</summary>
    public const int NameEnglishFieldNumber = 4;
    private readonly static pb::ByteString NameEnglishDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nameEnglish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString NameEnglish {
      get { return nameEnglish_ ?? NameEnglishDefaultValue; }
      set {
        nameEnglish_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name_english" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNameEnglish {
      get { return nameEnglish_ != null; }
    }
    /// <summary>Clears the value of the "name_english" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNameEnglish() {
      nameEnglish_ = null;
    }

    /// <summary>Field number for the "elevation" field.</summary>
    public const int ElevationFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_elevation_codec
        = pb::FieldCodec.ForInt32(40);
    private readonly pbc::RepeatedField<int> elevation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Elevation {
      get { return elevation_; }
    }

    /// <summary>Field number for the "rainfall" field.</summary>
    public const int RainfallFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_rainfall_codec
        = pb::FieldCodec.ForInt32(48);
    private readonly pbc::RepeatedField<int> rainfall_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Rainfall {
      get { return rainfall_; }
    }

    /// <summary>Field number for the "vegetation" field.</summary>
    public const int VegetationFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_vegetation_codec
        = pb::FieldCodec.ForInt32(56);
    private readonly pbc::RepeatedField<int> vegetation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Vegetation {
      get { return vegetation_; }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_temperature_codec
        = pb::FieldCodec.ForInt32(64);
    private readonly pbc::RepeatedField<int> temperature_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Temperature {
      get { return temperature_; }
    }

    /// <summary>Field number for the "evilness" field.</summary>
    public const int EvilnessFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_evilness_codec
        = pb::FieldCodec.ForInt32(72);
    private readonly pbc::RepeatedField<int> evilness_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Evilness {
      get { return evilness_; }
    }

    /// <summary>Field number for the "drainage" field.</summary>
    public const int DrainageFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_drainage_codec
        = pb::FieldCodec.ForInt32(80);
    private readonly pbc::RepeatedField<int> drainage_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Drainage {
      get { return drainage_; }
    }

    /// <summary>Field number for the "volcanism" field.</summary>
    public const int VolcanismFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_volcanism_codec
        = pb::FieldCodec.ForInt32(88);
    private readonly pbc::RepeatedField<int> volcanism_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Volcanism {
      get { return volcanism_; }
    }

    /// <summary>Field number for the "savagery" field.</summary>
    public const int SavageryFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_savagery_codec
        = pb::FieldCodec.ForInt32(96);
    private readonly pbc::RepeatedField<int> savagery_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Savagery {
      get { return savagery_; }
    }

    /// <summary>Field number for the "clouds" field.</summary>
    public const int CloudsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Cloud> _repeated_clouds_codec
        = pb::FieldCodec.ForMessage(106, global::RemoteFortressReader.Cloud.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Cloud> clouds_ = new pbc::RepeatedField<global::RemoteFortressReader.Cloud>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Cloud> Clouds {
      get { return clouds_; }
    }

    /// <summary>Field number for the "salinity" field.</summary>
    public const int SalinityFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_salinity_codec
        = pb::FieldCodec.ForInt32(112);
    private readonly pbc::RepeatedField<int> salinity_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Salinity {
      get { return salinity_; }
    }

    /// <summary>Field number for the "map_x" field.</summary>
    public const int MapXFieldNumber = 15;
    private readonly static int MapXDefaultValue = 0;

    private int mapX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapX {
      get { if ((_hasBits0 & 4) != 0) { return mapX_; } else { return MapXDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mapX_ = value;
      }
    }
    /// <summary>Gets whether the "map_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "map_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "map_y" field.</summary>
    public const int MapYFieldNumber = 16;
    private readonly static int MapYDefaultValue = 0;

    private int mapY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapY {
      get { if ((_hasBits0 & 8) != 0) { return mapY_; } else { return MapYDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mapY_ = value;
      }
    }
    /// <summary>Gets whether the "map_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "map_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapY() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "center_x" field.</summary>
    public const int CenterXFieldNumber = 17;
    private readonly static int CenterXDefaultValue = 0;

    private int centerX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CenterX {
      get { if ((_hasBits0 & 16) != 0) { return centerX_; } else { return CenterXDefaultValue; } }
      set {
        _hasBits0 |= 16;
        centerX_ = value;
      }
    }
    /// <summary>Gets whether the "center_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCenterX {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "center_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCenterX() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "center_y" field.</summary>
    public const int CenterYFieldNumber = 18;
    private readonly static int CenterYDefaultValue = 0;

    private int centerY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CenterY {
      get { if ((_hasBits0 & 32) != 0) { return centerY_; } else { return CenterYDefaultValue; } }
      set {
        _hasBits0 |= 32;
        centerY_ = value;
      }
    }
    /// <summary>Gets whether the "center_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCenterY {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "center_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCenterY() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "center_z" field.</summary>
    public const int CenterZFieldNumber = 19;
    private readonly static int CenterZDefaultValue = 0;

    private int centerZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CenterZ {
      get { if ((_hasBits0 & 64) != 0) { return centerZ_; } else { return CenterZDefaultValue; } }
      set {
        _hasBits0 |= 64;
        centerZ_ = value;
      }
    }
    /// <summary>Gets whether the "center_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCenterZ {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "center_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCenterZ() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "cur_year" field.</summary>
    public const int CurYearFieldNumber = 20;
    private readonly static int CurYearDefaultValue = 0;

    private int curYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurYear {
      get { if ((_hasBits0 & 128) != 0) { return curYear_; } else { return CurYearDefaultValue; } }
      set {
        _hasBits0 |= 128;
        curYear_ = value;
      }
    }
    /// <summary>Gets whether the "cur_year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurYear {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "cur_year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurYear() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "cur_year_tick" field.</summary>
    public const int CurYearTickFieldNumber = 21;
    private readonly static int CurYearTickDefaultValue = 0;

    private int curYearTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurYearTick {
      get { if ((_hasBits0 & 256) != 0) { return curYearTick_; } else { return CurYearTickDefaultValue; } }
      set {
        _hasBits0 |= 256;
        curYearTick_ = value;
      }
    }
    /// <summary>Gets whether the "cur_year_tick" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurYearTick {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "cur_year_tick" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurYearTick() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "world_poles" field.</summary>
    public const int WorldPolesFieldNumber = 22;
    private readonly static global::RemoteFortressReader.WorldPoles WorldPolesDefaultValue = global::RemoteFortressReader.WorldPoles.NoPoles;

    private global::RemoteFortressReader.WorldPoles worldPoles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.WorldPoles WorldPoles {
      get { if ((_hasBits0 & 512) != 0) { return worldPoles_; } else { return WorldPolesDefaultValue; } }
      set {
        _hasBits0 |= 512;
        worldPoles_ = value;
      }
    }
    /// <summary>Gets whether the "world_poles" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorldPoles {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "world_poles" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorldPoles() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "river_tiles" field.</summary>
    public const int RiverTilesFieldNumber = 23;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.RiverTile> _repeated_riverTiles_codec
        = pb::FieldCodec.ForMessage(186, global::RemoteFortressReader.RiverTile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.RiverTile> riverTiles_ = new pbc::RepeatedField<global::RemoteFortressReader.RiverTile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.RiverTile> RiverTiles {
      get { return riverTiles_; }
    }

    /// <summary>Field number for the "water_elevation" field.</summary>
    public const int WaterElevationFieldNumber = 24;
    private static readonly pb::FieldCodec<int> _repeated_waterElevation_codec
        = pb::FieldCodec.ForInt32(192);
    private readonly pbc::RepeatedField<int> waterElevation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> WaterElevation {
      get { return waterElevation_; }
    }

    /// <summary>Field number for the "region_tiles" field.</summary>
    public const int RegionTilesFieldNumber = 25;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.RegionTile> _repeated_regionTiles_codec
        = pb::FieldCodec.ForMessage(202, global::RemoteFortressReader.RegionTile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.RegionTile> regionTiles_ = new pbc::RepeatedField<global::RemoteFortressReader.RegionTile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.RegionTile> RegionTiles {
      get { return regionTiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorldMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorldMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldWidth != other.WorldWidth) return false;
      if (WorldHeight != other.WorldHeight) return false;
      if (Name != other.Name) return false;
      if (NameEnglish != other.NameEnglish) return false;
      if(!elevation_.Equals(other.elevation_)) return false;
      if(!rainfall_.Equals(other.rainfall_)) return false;
      if(!vegetation_.Equals(other.vegetation_)) return false;
      if(!temperature_.Equals(other.temperature_)) return false;
      if(!evilness_.Equals(other.evilness_)) return false;
      if(!drainage_.Equals(other.drainage_)) return false;
      if(!volcanism_.Equals(other.volcanism_)) return false;
      if(!savagery_.Equals(other.savagery_)) return false;
      if(!clouds_.Equals(other.clouds_)) return false;
      if(!salinity_.Equals(other.salinity_)) return false;
      if (MapX != other.MapX) return false;
      if (MapY != other.MapY) return false;
      if (CenterX != other.CenterX) return false;
      if (CenterY != other.CenterY) return false;
      if (CenterZ != other.CenterZ) return false;
      if (CurYear != other.CurYear) return false;
      if (CurYearTick != other.CurYearTick) return false;
      if (WorldPoles != other.WorldPoles) return false;
      if(!riverTiles_.Equals(other.riverTiles_)) return false;
      if(!waterElevation_.Equals(other.waterElevation_)) return false;
      if(!regionTiles_.Equals(other.regionTiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWorldWidth) hash ^= WorldWidth.GetHashCode();
      if (HasWorldHeight) hash ^= WorldHeight.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasNameEnglish) hash ^= NameEnglish.GetHashCode();
      hash ^= elevation_.GetHashCode();
      hash ^= rainfall_.GetHashCode();
      hash ^= vegetation_.GetHashCode();
      hash ^= temperature_.GetHashCode();
      hash ^= evilness_.GetHashCode();
      hash ^= drainage_.GetHashCode();
      hash ^= volcanism_.GetHashCode();
      hash ^= savagery_.GetHashCode();
      hash ^= clouds_.GetHashCode();
      hash ^= salinity_.GetHashCode();
      if (HasMapX) hash ^= MapX.GetHashCode();
      if (HasMapY) hash ^= MapY.GetHashCode();
      if (HasCenterX) hash ^= CenterX.GetHashCode();
      if (HasCenterY) hash ^= CenterY.GetHashCode();
      if (HasCenterZ) hash ^= CenterZ.GetHashCode();
      if (HasCurYear) hash ^= CurYear.GetHashCode();
      if (HasCurYearTick) hash ^= CurYearTick.GetHashCode();
      if (HasWorldPoles) hash ^= WorldPoles.GetHashCode();
      hash ^= riverTiles_.GetHashCode();
      hash ^= waterElevation_.GetHashCode();
      hash ^= regionTiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWorldWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldWidth);
      }
      if (HasWorldHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(WorldHeight);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (HasNameEnglish) {
        output.WriteRawTag(34);
        output.WriteBytes(NameEnglish);
      }
      elevation_.WriteTo(output, _repeated_elevation_codec);
      rainfall_.WriteTo(output, _repeated_rainfall_codec);
      vegetation_.WriteTo(output, _repeated_vegetation_codec);
      temperature_.WriteTo(output, _repeated_temperature_codec);
      evilness_.WriteTo(output, _repeated_evilness_codec);
      drainage_.WriteTo(output, _repeated_drainage_codec);
      volcanism_.WriteTo(output, _repeated_volcanism_codec);
      savagery_.WriteTo(output, _repeated_savagery_codec);
      clouds_.WriteTo(output, _repeated_clouds_codec);
      salinity_.WriteTo(output, _repeated_salinity_codec);
      if (HasMapX) {
        output.WriteRawTag(120);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MapY);
      }
      if (HasCenterX) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(CenterX);
      }
      if (HasCenterY) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(CenterY);
      }
      if (HasCenterZ) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CenterZ);
      }
      if (HasCurYear) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CurYear);
      }
      if (HasCurYearTick) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(CurYearTick);
      }
      if (HasWorldPoles) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) WorldPoles);
      }
      riverTiles_.WriteTo(output, _repeated_riverTiles_codec);
      waterElevation_.WriteTo(output, _repeated_waterElevation_codec);
      regionTiles_.WriteTo(output, _repeated_regionTiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWorldWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldWidth);
      }
      if (HasWorldHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(WorldHeight);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (HasNameEnglish) {
        output.WriteRawTag(34);
        output.WriteBytes(NameEnglish);
      }
      elevation_.WriteTo(ref output, _repeated_elevation_codec);
      rainfall_.WriteTo(ref output, _repeated_rainfall_codec);
      vegetation_.WriteTo(ref output, _repeated_vegetation_codec);
      temperature_.WriteTo(ref output, _repeated_temperature_codec);
      evilness_.WriteTo(ref output, _repeated_evilness_codec);
      drainage_.WriteTo(ref output, _repeated_drainage_codec);
      volcanism_.WriteTo(ref output, _repeated_volcanism_codec);
      savagery_.WriteTo(ref output, _repeated_savagery_codec);
      clouds_.WriteTo(ref output, _repeated_clouds_codec);
      salinity_.WriteTo(ref output, _repeated_salinity_codec);
      if (HasMapX) {
        output.WriteRawTag(120);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MapY);
      }
      if (HasCenterX) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(CenterX);
      }
      if (HasCenterY) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(CenterY);
      }
      if (HasCenterZ) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CenterZ);
      }
      if (HasCurYear) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CurYear);
      }
      if (HasCurYearTick) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(CurYearTick);
      }
      if (HasWorldPoles) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) WorldPoles);
      }
      riverTiles_.WriteTo(ref output, _repeated_riverTiles_codec);
      waterElevation_.WriteTo(ref output, _repeated_waterElevation_codec);
      regionTiles_.WriteTo(ref output, _repeated_regionTiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWorldWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldWidth);
      }
      if (HasWorldHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldHeight);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasNameEnglish) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NameEnglish);
      }
      size += elevation_.CalculateSize(_repeated_elevation_codec);
      size += rainfall_.CalculateSize(_repeated_rainfall_codec);
      size += vegetation_.CalculateSize(_repeated_vegetation_codec);
      size += temperature_.CalculateSize(_repeated_temperature_codec);
      size += evilness_.CalculateSize(_repeated_evilness_codec);
      size += drainage_.CalculateSize(_repeated_drainage_codec);
      size += volcanism_.CalculateSize(_repeated_volcanism_codec);
      size += savagery_.CalculateSize(_repeated_savagery_codec);
      size += clouds_.CalculateSize(_repeated_clouds_codec);
      size += salinity_.CalculateSize(_repeated_salinity_codec);
      if (HasMapX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapX);
      }
      if (HasMapY) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MapY);
      }
      if (HasCenterX) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CenterX);
      }
      if (HasCenterY) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CenterY);
      }
      if (HasCenterZ) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CenterZ);
      }
      if (HasCurYear) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurYear);
      }
      if (HasCurYearTick) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurYearTick);
      }
      if (HasWorldPoles) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) WorldPoles);
      }
      size += riverTiles_.CalculateSize(_repeated_riverTiles_codec);
      size += waterElevation_.CalculateSize(_repeated_waterElevation_codec);
      size += regionTiles_.CalculateSize(_repeated_regionTiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorldMap other) {
      if (other == null) {
        return;
      }
      if (other.HasWorldWidth) {
        WorldWidth = other.WorldWidth;
      }
      if (other.HasWorldHeight) {
        WorldHeight = other.WorldHeight;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasNameEnglish) {
        NameEnglish = other.NameEnglish;
      }
      elevation_.Add(other.elevation_);
      rainfall_.Add(other.rainfall_);
      vegetation_.Add(other.vegetation_);
      temperature_.Add(other.temperature_);
      evilness_.Add(other.evilness_);
      drainage_.Add(other.drainage_);
      volcanism_.Add(other.volcanism_);
      savagery_.Add(other.savagery_);
      clouds_.Add(other.clouds_);
      salinity_.Add(other.salinity_);
      if (other.HasMapX) {
        MapX = other.MapX;
      }
      if (other.HasMapY) {
        MapY = other.MapY;
      }
      if (other.HasCenterX) {
        CenterX = other.CenterX;
      }
      if (other.HasCenterY) {
        CenterY = other.CenterY;
      }
      if (other.HasCenterZ) {
        CenterZ = other.CenterZ;
      }
      if (other.HasCurYear) {
        CurYear = other.CurYear;
      }
      if (other.HasCurYearTick) {
        CurYearTick = other.CurYearTick;
      }
      if (other.HasWorldPoles) {
        WorldPoles = other.WorldPoles;
      }
      riverTiles_.Add(other.riverTiles_);
      waterElevation_.Add(other.waterElevation_);
      regionTiles_.Add(other.regionTiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldWidth = input.ReadInt32();
            break;
          }
          case 16: {
            WorldHeight = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            NameEnglish = input.ReadBytes();
            break;
          }
          case 42:
          case 40: {
            elevation_.AddEntriesFrom(input, _repeated_elevation_codec);
            break;
          }
          case 50:
          case 48: {
            rainfall_.AddEntriesFrom(input, _repeated_rainfall_codec);
            break;
          }
          case 58:
          case 56: {
            vegetation_.AddEntriesFrom(input, _repeated_vegetation_codec);
            break;
          }
          case 66:
          case 64: {
            temperature_.AddEntriesFrom(input, _repeated_temperature_codec);
            break;
          }
          case 74:
          case 72: {
            evilness_.AddEntriesFrom(input, _repeated_evilness_codec);
            break;
          }
          case 82:
          case 80: {
            drainage_.AddEntriesFrom(input, _repeated_drainage_codec);
            break;
          }
          case 90:
          case 88: {
            volcanism_.AddEntriesFrom(input, _repeated_volcanism_codec);
            break;
          }
          case 98:
          case 96: {
            savagery_.AddEntriesFrom(input, _repeated_savagery_codec);
            break;
          }
          case 106: {
            clouds_.AddEntriesFrom(input, _repeated_clouds_codec);
            break;
          }
          case 114:
          case 112: {
            salinity_.AddEntriesFrom(input, _repeated_salinity_codec);
            break;
          }
          case 120: {
            MapX = input.ReadInt32();
            break;
          }
          case 128: {
            MapY = input.ReadInt32();
            break;
          }
          case 136: {
            CenterX = input.ReadInt32();
            break;
          }
          case 144: {
            CenterY = input.ReadInt32();
            break;
          }
          case 152: {
            CenterZ = input.ReadInt32();
            break;
          }
          case 160: {
            CurYear = input.ReadInt32();
            break;
          }
          case 168: {
            CurYearTick = input.ReadInt32();
            break;
          }
          case 176: {
            WorldPoles = (global::RemoteFortressReader.WorldPoles) input.ReadEnum();
            break;
          }
          case 186: {
            riverTiles_.AddEntriesFrom(input, _repeated_riverTiles_codec);
            break;
          }
          case 194:
          case 192: {
            waterElevation_.AddEntriesFrom(input, _repeated_waterElevation_codec);
            break;
          }
          case 202: {
            regionTiles_.AddEntriesFrom(input, _repeated_regionTiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WorldWidth = input.ReadInt32();
            break;
          }
          case 16: {
            WorldHeight = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            NameEnglish = input.ReadBytes();
            break;
          }
          case 42:
          case 40: {
            elevation_.AddEntriesFrom(ref input, _repeated_elevation_codec);
            break;
          }
          case 50:
          case 48: {
            rainfall_.AddEntriesFrom(ref input, _repeated_rainfall_codec);
            break;
          }
          case 58:
          case 56: {
            vegetation_.AddEntriesFrom(ref input, _repeated_vegetation_codec);
            break;
          }
          case 66:
          case 64: {
            temperature_.AddEntriesFrom(ref input, _repeated_temperature_codec);
            break;
          }
          case 74:
          case 72: {
            evilness_.AddEntriesFrom(ref input, _repeated_evilness_codec);
            break;
          }
          case 82:
          case 80: {
            drainage_.AddEntriesFrom(ref input, _repeated_drainage_codec);
            break;
          }
          case 90:
          case 88: {
            volcanism_.AddEntriesFrom(ref input, _repeated_volcanism_codec);
            break;
          }
          case 98:
          case 96: {
            savagery_.AddEntriesFrom(ref input, _repeated_savagery_codec);
            break;
          }
          case 106: {
            clouds_.AddEntriesFrom(ref input, _repeated_clouds_codec);
            break;
          }
          case 114:
          case 112: {
            salinity_.AddEntriesFrom(ref input, _repeated_salinity_codec);
            break;
          }
          case 120: {
            MapX = input.ReadInt32();
            break;
          }
          case 128: {
            MapY = input.ReadInt32();
            break;
          }
          case 136: {
            CenterX = input.ReadInt32();
            break;
          }
          case 144: {
            CenterY = input.ReadInt32();
            break;
          }
          case 152: {
            CenterZ = input.ReadInt32();
            break;
          }
          case 160: {
            CurYear = input.ReadInt32();
            break;
          }
          case 168: {
            CurYearTick = input.ReadInt32();
            break;
          }
          case 176: {
            WorldPoles = (global::RemoteFortressReader.WorldPoles) input.ReadEnum();
            break;
          }
          case 186: {
            riverTiles_.AddEntriesFrom(ref input, _repeated_riverTiles_codec);
            break;
          }
          case 194:
          case 192: {
            waterElevation_.AddEntriesFrom(ref input, _repeated_waterElevation_codec);
            break;
          }
          case 202: {
            regionTiles_.AddEntriesFrom(ref input, _repeated_regionTiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SiteRealizationBuildingWall : pb::IMessage<SiteRealizationBuildingWall>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SiteRealizationBuildingWall> _parser = new pb::MessageParser<SiteRealizationBuildingWall>(() => new SiteRealizationBuildingWall());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SiteRealizationBuildingWall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingWall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingWall(SiteRealizationBuildingWall other) : this() {
      _hasBits0 = other._hasBits0;
      startX_ = other.startX_;
      startY_ = other.startY_;
      startZ_ = other.startZ_;
      endX_ = other.endX_;
      endY_ = other.endY_;
      endZ_ = other.endZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingWall Clone() {
      return new SiteRealizationBuildingWall(this);
    }

    /// <summary>Field number for the "start_x" field.</summary>
    public const int StartXFieldNumber = 1;
    private readonly static int StartXDefaultValue = 0;

    private int startX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartX {
      get { if ((_hasBits0 & 1) != 0) { return startX_; } else { return StartXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startX_ = value;
      }
    }
    /// <summary>Gets whether the "start_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_y" field.</summary>
    public const int StartYFieldNumber = 2;
    private readonly static int StartYDefaultValue = 0;

    private int startY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartY {
      get { if ((_hasBits0 & 2) != 0) { return startY_; } else { return StartYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startY_ = value;
      }
    }
    /// <summary>Gets whether the "start_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_z" field.</summary>
    public const int StartZFieldNumber = 3;
    private readonly static int StartZDefaultValue = 0;

    private int startZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartZ {
      get { if ((_hasBits0 & 4) != 0) { return startZ_; } else { return StartZDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startZ_ = value;
      }
    }
    /// <summary>Gets whether the "start_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartZ() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "end_x" field.</summary>
    public const int EndXFieldNumber = 4;
    private readonly static int EndXDefaultValue = 0;

    private int endX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndX {
      get { if ((_hasBits0 & 8) != 0) { return endX_; } else { return EndXDefaultValue; } }
      set {
        _hasBits0 |= 8;
        endX_ = value;
      }
    }
    /// <summary>Gets whether the "end_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "end_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "end_y" field.</summary>
    public const int EndYFieldNumber = 5;
    private readonly static int EndYDefaultValue = 0;

    private int endY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndY {
      get { if ((_hasBits0 & 16) != 0) { return endY_; } else { return EndYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        endY_ = value;
      }
    }
    /// <summary>Gets whether the "end_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "end_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "end_z" field.</summary>
    public const int EndZFieldNumber = 6;
    private readonly static int EndZDefaultValue = 0;

    private int endZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndZ {
      get { if ((_hasBits0 & 32) != 0) { return endZ_; } else { return EndZDefaultValue; } }
      set {
        _hasBits0 |= 32;
        endZ_ = value;
      }
    }
    /// <summary>Gets whether the "end_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndZ {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "end_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndZ() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SiteRealizationBuildingWall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SiteRealizationBuildingWall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartX != other.StartX) return false;
      if (StartY != other.StartY) return false;
      if (StartZ != other.StartZ) return false;
      if (EndX != other.EndX) return false;
      if (EndY != other.EndY) return false;
      if (EndZ != other.EndZ) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartX) hash ^= StartX.GetHashCode();
      if (HasStartY) hash ^= StartY.GetHashCode();
      if (HasStartZ) hash ^= StartZ.GetHashCode();
      if (HasEndX) hash ^= EndX.GetHashCode();
      if (HasEndY) hash ^= EndY.GetHashCode();
      if (HasEndZ) hash ^= EndZ.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartX) {
        output.WriteRawTag(8);
        output.WriteInt32(StartX);
      }
      if (HasStartY) {
        output.WriteRawTag(16);
        output.WriteInt32(StartY);
      }
      if (HasStartZ) {
        output.WriteRawTag(24);
        output.WriteInt32(StartZ);
      }
      if (HasEndX) {
        output.WriteRawTag(32);
        output.WriteInt32(EndX);
      }
      if (HasEndY) {
        output.WriteRawTag(40);
        output.WriteInt32(EndY);
      }
      if (HasEndZ) {
        output.WriteRawTag(48);
        output.WriteInt32(EndZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartX) {
        output.WriteRawTag(8);
        output.WriteInt32(StartX);
      }
      if (HasStartY) {
        output.WriteRawTag(16);
        output.WriteInt32(StartY);
      }
      if (HasStartZ) {
        output.WriteRawTag(24);
        output.WriteInt32(StartZ);
      }
      if (HasEndX) {
        output.WriteRawTag(32);
        output.WriteInt32(EndX);
      }
      if (HasEndY) {
        output.WriteRawTag(40);
        output.WriteInt32(EndY);
      }
      if (HasEndZ) {
        output.WriteRawTag(48);
        output.WriteInt32(EndZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartX);
      }
      if (HasStartY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartY);
      }
      if (HasStartZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartZ);
      }
      if (HasEndX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndX);
      }
      if (HasEndY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndY);
      }
      if (HasEndZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndZ);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SiteRealizationBuildingWall other) {
      if (other == null) {
        return;
      }
      if (other.HasStartX) {
        StartX = other.StartX;
      }
      if (other.HasStartY) {
        StartY = other.StartY;
      }
      if (other.HasStartZ) {
        StartZ = other.StartZ;
      }
      if (other.HasEndX) {
        EndX = other.EndX;
      }
      if (other.HasEndY) {
        EndY = other.EndY;
      }
      if (other.HasEndZ) {
        EndZ = other.EndZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartX = input.ReadInt32();
            break;
          }
          case 16: {
            StartY = input.ReadInt32();
            break;
          }
          case 24: {
            StartZ = input.ReadInt32();
            break;
          }
          case 32: {
            EndX = input.ReadInt32();
            break;
          }
          case 40: {
            EndY = input.ReadInt32();
            break;
          }
          case 48: {
            EndZ = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartX = input.ReadInt32();
            break;
          }
          case 16: {
            StartY = input.ReadInt32();
            break;
          }
          case 24: {
            StartZ = input.ReadInt32();
            break;
          }
          case 32: {
            EndX = input.ReadInt32();
            break;
          }
          case 40: {
            EndY = input.ReadInt32();
            break;
          }
          case 48: {
            EndZ = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SiteRealizationBuildingTower : pb::IMessage<SiteRealizationBuildingTower>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SiteRealizationBuildingTower> _parser = new pb::MessageParser<SiteRealizationBuildingTower>(() => new SiteRealizationBuildingTower());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SiteRealizationBuildingTower> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTower() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTower(SiteRealizationBuildingTower other) : this() {
      _hasBits0 = other._hasBits0;
      roofZ_ = other.roofZ_;
      round_ = other.round_;
      goblin_ = other.goblin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTower Clone() {
      return new SiteRealizationBuildingTower(this);
    }

    /// <summary>Field number for the "roof_z" field.</summary>
    public const int RoofZFieldNumber = 1;
    private readonly static int RoofZDefaultValue = 0;

    private int roofZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoofZ {
      get { if ((_hasBits0 & 1) != 0) { return roofZ_; } else { return RoofZDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roofZ_ = value;
      }
    }
    /// <summary>Gets whether the "roof_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoofZ {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roof_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoofZ() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 2;
    private readonly static bool RoundDefaultValue = false;

    private bool round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Round {
      get { if ((_hasBits0 & 2) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "goblin" field.</summary>
    public const int GoblinFieldNumber = 3;
    private readonly static bool GoblinDefaultValue = false;

    private bool goblin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Goblin {
      get { if ((_hasBits0 & 4) != 0) { return goblin_; } else { return GoblinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        goblin_ = value;
      }
    }
    /// <summary>Gets whether the "goblin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoblin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "goblin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoblin() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SiteRealizationBuildingTower);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SiteRealizationBuildingTower other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoofZ != other.RoofZ) return false;
      if (Round != other.Round) return false;
      if (Goblin != other.Goblin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoofZ) hash ^= RoofZ.GetHashCode();
      if (HasRound) hash ^= Round.GetHashCode();
      if (HasGoblin) hash ^= Goblin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoofZ) {
        output.WriteRawTag(8);
        output.WriteInt32(RoofZ);
      }
      if (HasRound) {
        output.WriteRawTag(16);
        output.WriteBool(Round);
      }
      if (HasGoblin) {
        output.WriteRawTag(24);
        output.WriteBool(Goblin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoofZ) {
        output.WriteRawTag(8);
        output.WriteInt32(RoofZ);
      }
      if (HasRound) {
        output.WriteRawTag(16);
        output.WriteBool(Round);
      }
      if (HasGoblin) {
        output.WriteRawTag(24);
        output.WriteBool(Goblin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoofZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoofZ);
      }
      if (HasRound) {
        size += 1 + 1;
      }
      if (HasGoblin) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SiteRealizationBuildingTower other) {
      if (other == null) {
        return;
      }
      if (other.HasRoofZ) {
        RoofZ = other.RoofZ;
      }
      if (other.HasRound) {
        Round = other.Round;
      }
      if (other.HasGoblin) {
        Goblin = other.Goblin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoofZ = input.ReadInt32();
            break;
          }
          case 16: {
            Round = input.ReadBool();
            break;
          }
          case 24: {
            Goblin = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoofZ = input.ReadInt32();
            break;
          }
          case 16: {
            Round = input.ReadBool();
            break;
          }
          case 24: {
            Goblin = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrenchSpoke : pb::IMessage<TrenchSpoke>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrenchSpoke> _parser = new pb::MessageParser<TrenchSpoke>(() => new TrenchSpoke());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrenchSpoke> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrenchSpoke() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrenchSpoke(TrenchSpoke other) : this() {
      _hasBits0 = other._hasBits0;
      moundStart_ = other.moundStart_;
      trenchStart_ = other.trenchStart_;
      trenchEnd_ = other.trenchEnd_;
      moundEnd_ = other.moundEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrenchSpoke Clone() {
      return new TrenchSpoke(this);
    }

    /// <summary>Field number for the "mound_start" field.</summary>
    public const int MoundStartFieldNumber = 1;
    private readonly static int MoundStartDefaultValue = 0;

    private int moundStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoundStart {
      get { if ((_hasBits0 & 1) != 0) { return moundStart_; } else { return MoundStartDefaultValue; } }
      set {
        _hasBits0 |= 1;
        moundStart_ = value;
      }
    }
    /// <summary>Gets whether the "mound_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMoundStart {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mound_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMoundStart() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "trench_start" field.</summary>
    public const int TrenchStartFieldNumber = 2;
    private readonly static int TrenchStartDefaultValue = 0;

    private int trenchStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrenchStart {
      get { if ((_hasBits0 & 2) != 0) { return trenchStart_; } else { return TrenchStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        trenchStart_ = value;
      }
    }
    /// <summary>Gets whether the "trench_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrenchStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "trench_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrenchStart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "trench_end" field.</summary>
    public const int TrenchEndFieldNumber = 3;
    private readonly static int TrenchEndDefaultValue = 0;

    private int trenchEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrenchEnd {
      get { if ((_hasBits0 & 4) != 0) { return trenchEnd_; } else { return TrenchEndDefaultValue; } }
      set {
        _hasBits0 |= 4;
        trenchEnd_ = value;
      }
    }
    /// <summary>Gets whether the "trench_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrenchEnd {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "trench_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrenchEnd() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mound_end" field.</summary>
    public const int MoundEndFieldNumber = 4;
    private readonly static int MoundEndDefaultValue = 0;

    private int moundEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoundEnd {
      get { if ((_hasBits0 & 8) != 0) { return moundEnd_; } else { return MoundEndDefaultValue; } }
      set {
        _hasBits0 |= 8;
        moundEnd_ = value;
      }
    }
    /// <summary>Gets whether the "mound_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMoundEnd {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mound_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMoundEnd() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrenchSpoke);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrenchSpoke other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MoundStart != other.MoundStart) return false;
      if (TrenchStart != other.TrenchStart) return false;
      if (TrenchEnd != other.TrenchEnd) return false;
      if (MoundEnd != other.MoundEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMoundStart) hash ^= MoundStart.GetHashCode();
      if (HasTrenchStart) hash ^= TrenchStart.GetHashCode();
      if (HasTrenchEnd) hash ^= TrenchEnd.GetHashCode();
      if (HasMoundEnd) hash ^= MoundEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMoundStart) {
        output.WriteRawTag(8);
        output.WriteInt32(MoundStart);
      }
      if (HasTrenchStart) {
        output.WriteRawTag(16);
        output.WriteInt32(TrenchStart);
      }
      if (HasTrenchEnd) {
        output.WriteRawTag(24);
        output.WriteInt32(TrenchEnd);
      }
      if (HasMoundEnd) {
        output.WriteRawTag(32);
        output.WriteInt32(MoundEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMoundStart) {
        output.WriteRawTag(8);
        output.WriteInt32(MoundStart);
      }
      if (HasTrenchStart) {
        output.WriteRawTag(16);
        output.WriteInt32(TrenchStart);
      }
      if (HasTrenchEnd) {
        output.WriteRawTag(24);
        output.WriteInt32(TrenchEnd);
      }
      if (HasMoundEnd) {
        output.WriteRawTag(32);
        output.WriteInt32(MoundEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMoundStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoundStart);
      }
      if (HasTrenchStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrenchStart);
      }
      if (HasTrenchEnd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrenchEnd);
      }
      if (HasMoundEnd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoundEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrenchSpoke other) {
      if (other == null) {
        return;
      }
      if (other.HasMoundStart) {
        MoundStart = other.MoundStart;
      }
      if (other.HasTrenchStart) {
        TrenchStart = other.TrenchStart;
      }
      if (other.HasTrenchEnd) {
        TrenchEnd = other.TrenchEnd;
      }
      if (other.HasMoundEnd) {
        MoundEnd = other.MoundEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MoundStart = input.ReadInt32();
            break;
          }
          case 16: {
            TrenchStart = input.ReadInt32();
            break;
          }
          case 24: {
            TrenchEnd = input.ReadInt32();
            break;
          }
          case 32: {
            MoundEnd = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MoundStart = input.ReadInt32();
            break;
          }
          case 16: {
            TrenchStart = input.ReadInt32();
            break;
          }
          case 24: {
            TrenchEnd = input.ReadInt32();
            break;
          }
          case 32: {
            MoundEnd = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SiteRealizationBuildingTrenches : pb::IMessage<SiteRealizationBuildingTrenches>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SiteRealizationBuildingTrenches> _parser = new pb::MessageParser<SiteRealizationBuildingTrenches>(() => new SiteRealizationBuildingTrenches());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SiteRealizationBuildingTrenches> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTrenches() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTrenches(SiteRealizationBuildingTrenches other) : this() {
      spokes_ = other.spokes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuildingTrenches Clone() {
      return new SiteRealizationBuildingTrenches(this);
    }

    /// <summary>Field number for the "spokes" field.</summary>
    public const int SpokesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.TrenchSpoke> _repeated_spokes_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.TrenchSpoke.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.TrenchSpoke> spokes_ = new pbc::RepeatedField<global::RemoteFortressReader.TrenchSpoke>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.TrenchSpoke> Spokes {
      get { return spokes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SiteRealizationBuildingTrenches);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SiteRealizationBuildingTrenches other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spokes_.Equals(other.spokes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spokes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spokes_.WriteTo(output, _repeated_spokes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spokes_.WriteTo(ref output, _repeated_spokes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += spokes_.CalculateSize(_repeated_spokes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SiteRealizationBuildingTrenches other) {
      if (other == null) {
        return;
      }
      spokes_.Add(other.spokes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spokes_.AddEntriesFrom(input, _repeated_spokes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spokes_.AddEntriesFrom(ref input, _repeated_spokes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SiteRealizationBuilding : pb::IMessage<SiteRealizationBuilding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SiteRealizationBuilding> _parser = new pb::MessageParser<SiteRealizationBuilding>(() => new SiteRealizationBuilding());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SiteRealizationBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuilding(SiteRealizationBuilding other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      minX_ = other.minX_;
      minY_ = other.minY_;
      maxX_ = other.maxX_;
      maxY_ = other.maxY_;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      wallInfo_ = other.wallInfo_ != null ? other.wallInfo_.Clone() : null;
      towerInfo_ = other.towerInfo_ != null ? other.towerInfo_.Clone() : null;
      trenchInfo_ = other.trenchInfo_ != null ? other.trenchInfo_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteRealizationBuilding Clone() {
      return new SiteRealizationBuilding(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_x" field.</summary>
    public const int MinXFieldNumber = 3;
    private readonly static int MinXDefaultValue = 0;

    private int minX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinX {
      get { if ((_hasBits0 & 2) != 0) { return minX_; } else { return MinXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minX_ = value;
      }
    }
    /// <summary>Gets whether the "min_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "min_y" field.</summary>
    public const int MinYFieldNumber = 4;
    private readonly static int MinYDefaultValue = 0;

    private int minY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinY {
      get { if ((_hasBits0 & 4) != 0) { return minY_; } else { return MinYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        minY_ = value;
      }
    }
    /// <summary>Gets whether the "min_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "min_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "max_x" field.</summary>
    public const int MaxXFieldNumber = 5;
    private readonly static int MaxXDefaultValue = 0;

    private int maxX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxX {
      get { if ((_hasBits0 & 8) != 0) { return maxX_; } else { return MaxXDefaultValue; } }
      set {
        _hasBits0 |= 8;
        maxX_ = value;
      }
    }
    /// <summary>Gets whether the "max_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "max_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "max_y" field.</summary>
    public const int MaxYFieldNumber = 6;
    private readonly static int MaxYDefaultValue = 0;

    private int maxY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxY {
      get { if ((_hasBits0 & 16) != 0) { return maxY_; } else { return MaxYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxY_ = value;
      }
    }
    /// <summary>Gets whether the "max_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 7;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "wall_info" field.</summary>
    public const int WallInfoFieldNumber = 8;
    private global::RemoteFortressReader.SiteRealizationBuildingWall wallInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.SiteRealizationBuildingWall WallInfo {
      get { return wallInfo_; }
      set {
        wallInfo_ = value;
      }
    }

    /// <summary>Field number for the "tower_info" field.</summary>
    public const int TowerInfoFieldNumber = 9;
    private global::RemoteFortressReader.SiteRealizationBuildingTower towerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.SiteRealizationBuildingTower TowerInfo {
      get { return towerInfo_; }
      set {
        towerInfo_ = value;
      }
    }

    /// <summary>Field number for the "trench_info" field.</summary>
    public const int TrenchInfoFieldNumber = 10;
    private global::RemoteFortressReader.SiteRealizationBuildingTrenches trenchInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.SiteRealizationBuildingTrenches TrenchInfo {
      get { return trenchInfo_; }
      set {
        trenchInfo_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 11;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 32) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SiteRealizationBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SiteRealizationBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MinX != other.MinX) return false;
      if (MinY != other.MinY) return false;
      if (MaxX != other.MaxX) return false;
      if (MaxY != other.MaxY) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (!object.Equals(WallInfo, other.WallInfo)) return false;
      if (!object.Equals(TowerInfo, other.TowerInfo)) return false;
      if (!object.Equals(TrenchInfo, other.TrenchInfo)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasMinX) hash ^= MinX.GetHashCode();
      if (HasMinY) hash ^= MinY.GetHashCode();
      if (HasMaxX) hash ^= MaxX.GetHashCode();
      if (HasMaxY) hash ^= MaxY.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (wallInfo_ != null) hash ^= WallInfo.GetHashCode();
      if (towerInfo_ != null) hash ^= TowerInfo.GetHashCode();
      if (trenchInfo_ != null) hash ^= TrenchInfo.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasMinX) {
        output.WriteRawTag(24);
        output.WriteInt32(MinX);
      }
      if (HasMinY) {
        output.WriteRawTag(32);
        output.WriteInt32(MinY);
      }
      if (HasMaxX) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxX);
      }
      if (HasMaxY) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxY);
      }
      if (material_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Material);
      }
      if (wallInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WallInfo);
      }
      if (towerInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TowerInfo);
      }
      if (trenchInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TrenchInfo);
      }
      if (HasType) {
        output.WriteRawTag(88);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasMinX) {
        output.WriteRawTag(24);
        output.WriteInt32(MinX);
      }
      if (HasMinY) {
        output.WriteRawTag(32);
        output.WriteInt32(MinY);
      }
      if (HasMaxX) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxX);
      }
      if (HasMaxY) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxY);
      }
      if (material_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Material);
      }
      if (wallInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WallInfo);
      }
      if (towerInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TowerInfo);
      }
      if (trenchInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TrenchInfo);
      }
      if (HasType) {
        output.WriteRawTag(88);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasMinX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinX);
      }
      if (HasMinY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinY);
      }
      if (HasMaxX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxX);
      }
      if (HasMaxY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxY);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (wallInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WallInfo);
      }
      if (towerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TowerInfo);
      }
      if (trenchInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrenchInfo);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SiteRealizationBuilding other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasMinX) {
        MinX = other.MinX;
      }
      if (other.HasMinY) {
        MinY = other.MinY;
      }
      if (other.HasMaxX) {
        MaxX = other.MaxX;
      }
      if (other.HasMaxY) {
        MaxY = other.MaxY;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.wallInfo_ != null) {
        if (wallInfo_ == null) {
          WallInfo = new global::RemoteFortressReader.SiteRealizationBuildingWall();
        }
        WallInfo.MergeFrom(other.WallInfo);
      }
      if (other.towerInfo_ != null) {
        if (towerInfo_ == null) {
          TowerInfo = new global::RemoteFortressReader.SiteRealizationBuildingTower();
        }
        TowerInfo.MergeFrom(other.TowerInfo);
      }
      if (other.trenchInfo_ != null) {
        if (trenchInfo_ == null) {
          TrenchInfo = new global::RemoteFortressReader.SiteRealizationBuildingTrenches();
        }
        TrenchInfo.MergeFrom(other.TrenchInfo);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            MinX = input.ReadInt32();
            break;
          }
          case 32: {
            MinY = input.ReadInt32();
            break;
          }
          case 40: {
            MaxX = input.ReadInt32();
            break;
          }
          case 48: {
            MaxY = input.ReadInt32();
            break;
          }
          case 58: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 66: {
            if (wallInfo_ == null) {
              WallInfo = new global::RemoteFortressReader.SiteRealizationBuildingWall();
            }
            input.ReadMessage(WallInfo);
            break;
          }
          case 74: {
            if (towerInfo_ == null) {
              TowerInfo = new global::RemoteFortressReader.SiteRealizationBuildingTower();
            }
            input.ReadMessage(TowerInfo);
            break;
          }
          case 82: {
            if (trenchInfo_ == null) {
              TrenchInfo = new global::RemoteFortressReader.SiteRealizationBuildingTrenches();
            }
            input.ReadMessage(TrenchInfo);
            break;
          }
          case 88: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            MinX = input.ReadInt32();
            break;
          }
          case 32: {
            MinY = input.ReadInt32();
            break;
          }
          case 40: {
            MaxX = input.ReadInt32();
            break;
          }
          case 48: {
            MaxY = input.ReadInt32();
            break;
          }
          case 58: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 66: {
            if (wallInfo_ == null) {
              WallInfo = new global::RemoteFortressReader.SiteRealizationBuildingWall();
            }
            input.ReadMessage(WallInfo);
            break;
          }
          case 74: {
            if (towerInfo_ == null) {
              TowerInfo = new global::RemoteFortressReader.SiteRealizationBuildingTower();
            }
            input.ReadMessage(TowerInfo);
            break;
          }
          case 82: {
            if (trenchInfo_ == null) {
              TrenchInfo = new global::RemoteFortressReader.SiteRealizationBuildingTrenches();
            }
            input.ReadMessage(TrenchInfo);
            break;
          }
          case 88: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegionTile : pb::IMessage<RegionTile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegionTile> _parser = new pb::MessageParser<RegionTile>(() => new RegionTile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegionTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionTile(RegionTile other) : this() {
      _hasBits0 = other._hasBits0;
      elevation_ = other.elevation_;
      rainfall_ = other.rainfall_;
      vegetation_ = other.vegetation_;
      temperature_ = other.temperature_;
      evilness_ = other.evilness_;
      drainage_ = other.drainage_;
      volcanism_ = other.volcanism_;
      savagery_ = other.savagery_;
      salinity_ = other.salinity_;
      riverTiles_ = other.riverTiles_ != null ? other.riverTiles_.Clone() : null;
      waterElevation_ = other.waterElevation_;
      surfaceMaterial_ = other.surfaceMaterial_ != null ? other.surfaceMaterial_.Clone() : null;
      plantMaterials_ = other.plantMaterials_.Clone();
      buildings_ = other.buildings_.Clone();
      stoneMaterials_ = other.stoneMaterials_.Clone();
      treeMaterials_ = other.treeMaterials_.Clone();
      snow_ = other.snow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionTile Clone() {
      return new RegionTile(this);
    }

    /// <summary>Field number for the "elevation" field.</summary>
    public const int ElevationFieldNumber = 1;
    private readonly static int ElevationDefaultValue = 0;

    private int elevation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Elevation {
      get { if ((_hasBits0 & 1) != 0) { return elevation_; } else { return ElevationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        elevation_ = value;
      }
    }
    /// <summary>Gets whether the "elevation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasElevation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "elevation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearElevation() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rainfall" field.</summary>
    public const int RainfallFieldNumber = 2;
    private readonly static int RainfallDefaultValue = 0;

    private int rainfall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rainfall {
      get { if ((_hasBits0 & 2) != 0) { return rainfall_; } else { return RainfallDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rainfall_ = value;
      }
    }
    /// <summary>Gets whether the "rainfall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRainfall {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rainfall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRainfall() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "vegetation" field.</summary>
    public const int VegetationFieldNumber = 3;
    private readonly static int VegetationDefaultValue = 0;

    private int vegetation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Vegetation {
      get { if ((_hasBits0 & 4) != 0) { return vegetation_; } else { return VegetationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        vegetation_ = value;
      }
    }
    /// <summary>Gets whether the "vegetation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVegetation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "vegetation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVegetation() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 4;
    private readonly static int TemperatureDefaultValue = 0;

    private int temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Temperature {
      get { if ((_hasBits0 & 8) != 0) { return temperature_; } else { return TemperatureDefaultValue; } }
      set {
        _hasBits0 |= 8;
        temperature_ = value;
      }
    }
    /// <summary>Gets whether the "temperature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTemperature {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "temperature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTemperature() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "evilness" field.</summary>
    public const int EvilnessFieldNumber = 5;
    private readonly static int EvilnessDefaultValue = 0;

    private int evilness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Evilness {
      get { if ((_hasBits0 & 16) != 0) { return evilness_; } else { return EvilnessDefaultValue; } }
      set {
        _hasBits0 |= 16;
        evilness_ = value;
      }
    }
    /// <summary>Gets whether the "evilness" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEvilness {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "evilness" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvilness() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "drainage" field.</summary>
    public const int DrainageFieldNumber = 6;
    private readonly static int DrainageDefaultValue = 0;

    private int drainage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Drainage {
      get { if ((_hasBits0 & 32) != 0) { return drainage_; } else { return DrainageDefaultValue; } }
      set {
        _hasBits0 |= 32;
        drainage_ = value;
      }
    }
    /// <summary>Gets whether the "drainage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDrainage {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "drainage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDrainage() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "volcanism" field.</summary>
    public const int VolcanismFieldNumber = 7;
    private readonly static int VolcanismDefaultValue = 0;

    private int volcanism_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Volcanism {
      get { if ((_hasBits0 & 64) != 0) { return volcanism_; } else { return VolcanismDefaultValue; } }
      set {
        _hasBits0 |= 64;
        volcanism_ = value;
      }
    }
    /// <summary>Gets whether the "volcanism" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolcanism {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "volcanism" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolcanism() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "savagery" field.</summary>
    public const int SavageryFieldNumber = 8;
    private readonly static int SavageryDefaultValue = 0;

    private int savagery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Savagery {
      get { if ((_hasBits0 & 128) != 0) { return savagery_; } else { return SavageryDefaultValue; } }
      set {
        _hasBits0 |= 128;
        savagery_ = value;
      }
    }
    /// <summary>Gets whether the "savagery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSavagery {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "savagery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSavagery() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "salinity" field.</summary>
    public const int SalinityFieldNumber = 9;
    private readonly static int SalinityDefaultValue = 0;

    private int salinity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Salinity {
      get { if ((_hasBits0 & 256) != 0) { return salinity_; } else { return SalinityDefaultValue; } }
      set {
        _hasBits0 |= 256;
        salinity_ = value;
      }
    }
    /// <summary>Gets whether the "salinity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSalinity {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "salinity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSalinity() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "river_tiles" field.</summary>
    public const int RiverTilesFieldNumber = 10;
    private global::RemoteFortressReader.RiverTile riverTiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.RiverTile RiverTiles {
      get { return riverTiles_; }
      set {
        riverTiles_ = value;
      }
    }

    /// <summary>Field number for the "water_elevation" field.</summary>
    public const int WaterElevationFieldNumber = 11;
    private readonly static int WaterElevationDefaultValue = 0;

    private int waterElevation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WaterElevation {
      get { if ((_hasBits0 & 512) != 0) { return waterElevation_; } else { return WaterElevationDefaultValue; } }
      set {
        _hasBits0 |= 512;
        waterElevation_ = value;
      }
    }
    /// <summary>Gets whether the "water_elevation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaterElevation {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "water_elevation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaterElevation() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "surface_material" field.</summary>
    public const int SurfaceMaterialFieldNumber = 12;
    private global::RemoteFortressReader.MatPair surfaceMaterial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair SurfaceMaterial {
      get { return surfaceMaterial_; }
      set {
        surfaceMaterial_ = value;
      }
    }

    /// <summary>Field number for the "plant_materials" field.</summary>
    public const int PlantMaterialsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_plantMaterials_codec
        = pb::FieldCodec.ForMessage(106, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> plantMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> PlantMaterials {
      get { return plantMaterials_; }
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.SiteRealizationBuilding> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(114, global::RemoteFortressReader.SiteRealizationBuilding.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.SiteRealizationBuilding> buildings_ = new pbc::RepeatedField<global::RemoteFortressReader.SiteRealizationBuilding>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.SiteRealizationBuilding> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "stone_materials" field.</summary>
    public const int StoneMaterialsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_stoneMaterials_codec
        = pb::FieldCodec.ForMessage(122, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> stoneMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> StoneMaterials {
      get { return stoneMaterials_; }
    }

    /// <summary>Field number for the "tree_materials" field.</summary>
    public const int TreeMaterialsFieldNumber = 16;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.MatPair> _repeated_treeMaterials_codec
        = pb::FieldCodec.ForMessage(130, global::RemoteFortressReader.MatPair.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.MatPair> treeMaterials_ = new pbc::RepeatedField<global::RemoteFortressReader.MatPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.MatPair> TreeMaterials {
      get { return treeMaterials_; }
    }

    /// <summary>Field number for the "snow" field.</summary>
    public const int SnowFieldNumber = 17;
    private readonly static int SnowDefaultValue = 0;

    private int snow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Snow {
      get { if ((_hasBits0 & 1024) != 0) { return snow_; } else { return SnowDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        snow_ = value;
      }
    }
    /// <summary>Gets whether the "snow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnow {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "snow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnow() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegionTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegionTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Elevation != other.Elevation) return false;
      if (Rainfall != other.Rainfall) return false;
      if (Vegetation != other.Vegetation) return false;
      if (Temperature != other.Temperature) return false;
      if (Evilness != other.Evilness) return false;
      if (Drainage != other.Drainage) return false;
      if (Volcanism != other.Volcanism) return false;
      if (Savagery != other.Savagery) return false;
      if (Salinity != other.Salinity) return false;
      if (!object.Equals(RiverTiles, other.RiverTiles)) return false;
      if (WaterElevation != other.WaterElevation) return false;
      if (!object.Equals(SurfaceMaterial, other.SurfaceMaterial)) return false;
      if(!plantMaterials_.Equals(other.plantMaterials_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!stoneMaterials_.Equals(other.stoneMaterials_)) return false;
      if(!treeMaterials_.Equals(other.treeMaterials_)) return false;
      if (Snow != other.Snow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasElevation) hash ^= Elevation.GetHashCode();
      if (HasRainfall) hash ^= Rainfall.GetHashCode();
      if (HasVegetation) hash ^= Vegetation.GetHashCode();
      if (HasTemperature) hash ^= Temperature.GetHashCode();
      if (HasEvilness) hash ^= Evilness.GetHashCode();
      if (HasDrainage) hash ^= Drainage.GetHashCode();
      if (HasVolcanism) hash ^= Volcanism.GetHashCode();
      if (HasSavagery) hash ^= Savagery.GetHashCode();
      if (HasSalinity) hash ^= Salinity.GetHashCode();
      if (riverTiles_ != null) hash ^= RiverTiles.GetHashCode();
      if (HasWaterElevation) hash ^= WaterElevation.GetHashCode();
      if (surfaceMaterial_ != null) hash ^= SurfaceMaterial.GetHashCode();
      hash ^= plantMaterials_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= stoneMaterials_.GetHashCode();
      hash ^= treeMaterials_.GetHashCode();
      if (HasSnow) hash ^= Snow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasElevation) {
        output.WriteRawTag(8);
        output.WriteInt32(Elevation);
      }
      if (HasRainfall) {
        output.WriteRawTag(16);
        output.WriteInt32(Rainfall);
      }
      if (HasVegetation) {
        output.WriteRawTag(24);
        output.WriteInt32(Vegetation);
      }
      if (HasTemperature) {
        output.WriteRawTag(32);
        output.WriteInt32(Temperature);
      }
      if (HasEvilness) {
        output.WriteRawTag(40);
        output.WriteInt32(Evilness);
      }
      if (HasDrainage) {
        output.WriteRawTag(48);
        output.WriteInt32(Drainage);
      }
      if (HasVolcanism) {
        output.WriteRawTag(56);
        output.WriteInt32(Volcanism);
      }
      if (HasSavagery) {
        output.WriteRawTag(64);
        output.WriteInt32(Savagery);
      }
      if (HasSalinity) {
        output.WriteRawTag(72);
        output.WriteInt32(Salinity);
      }
      if (riverTiles_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RiverTiles);
      }
      if (HasWaterElevation) {
        output.WriteRawTag(88);
        output.WriteInt32(WaterElevation);
      }
      if (surfaceMaterial_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SurfaceMaterial);
      }
      plantMaterials_.WriteTo(output, _repeated_plantMaterials_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      stoneMaterials_.WriteTo(output, _repeated_stoneMaterials_codec);
      treeMaterials_.WriteTo(output, _repeated_treeMaterials_codec);
      if (HasSnow) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Snow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasElevation) {
        output.WriteRawTag(8);
        output.WriteInt32(Elevation);
      }
      if (HasRainfall) {
        output.WriteRawTag(16);
        output.WriteInt32(Rainfall);
      }
      if (HasVegetation) {
        output.WriteRawTag(24);
        output.WriteInt32(Vegetation);
      }
      if (HasTemperature) {
        output.WriteRawTag(32);
        output.WriteInt32(Temperature);
      }
      if (HasEvilness) {
        output.WriteRawTag(40);
        output.WriteInt32(Evilness);
      }
      if (HasDrainage) {
        output.WriteRawTag(48);
        output.WriteInt32(Drainage);
      }
      if (HasVolcanism) {
        output.WriteRawTag(56);
        output.WriteInt32(Volcanism);
      }
      if (HasSavagery) {
        output.WriteRawTag(64);
        output.WriteInt32(Savagery);
      }
      if (HasSalinity) {
        output.WriteRawTag(72);
        output.WriteInt32(Salinity);
      }
      if (riverTiles_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RiverTiles);
      }
      if (HasWaterElevation) {
        output.WriteRawTag(88);
        output.WriteInt32(WaterElevation);
      }
      if (surfaceMaterial_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SurfaceMaterial);
      }
      plantMaterials_.WriteTo(ref output, _repeated_plantMaterials_codec);
      buildings_.WriteTo(ref output, _repeated_buildings_codec);
      stoneMaterials_.WriteTo(ref output, _repeated_stoneMaterials_codec);
      treeMaterials_.WriteTo(ref output, _repeated_treeMaterials_codec);
      if (HasSnow) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Snow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasElevation) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Elevation);
      }
      if (HasRainfall) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rainfall);
      }
      if (HasVegetation) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vegetation);
      }
      if (HasTemperature) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temperature);
      }
      if (HasEvilness) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Evilness);
      }
      if (HasDrainage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Drainage);
      }
      if (HasVolcanism) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Volcanism);
      }
      if (HasSavagery) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Savagery);
      }
      if (HasSalinity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Salinity);
      }
      if (riverTiles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RiverTiles);
      }
      if (HasWaterElevation) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaterElevation);
      }
      if (surfaceMaterial_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SurfaceMaterial);
      }
      size += plantMaterials_.CalculateSize(_repeated_plantMaterials_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += stoneMaterials_.CalculateSize(_repeated_stoneMaterials_codec);
      size += treeMaterials_.CalculateSize(_repeated_treeMaterials_codec);
      if (HasSnow) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Snow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegionTile other) {
      if (other == null) {
        return;
      }
      if (other.HasElevation) {
        Elevation = other.Elevation;
      }
      if (other.HasRainfall) {
        Rainfall = other.Rainfall;
      }
      if (other.HasVegetation) {
        Vegetation = other.Vegetation;
      }
      if (other.HasTemperature) {
        Temperature = other.Temperature;
      }
      if (other.HasEvilness) {
        Evilness = other.Evilness;
      }
      if (other.HasDrainage) {
        Drainage = other.Drainage;
      }
      if (other.HasVolcanism) {
        Volcanism = other.Volcanism;
      }
      if (other.HasSavagery) {
        Savagery = other.Savagery;
      }
      if (other.HasSalinity) {
        Salinity = other.Salinity;
      }
      if (other.riverTiles_ != null) {
        if (riverTiles_ == null) {
          RiverTiles = new global::RemoteFortressReader.RiverTile();
        }
        RiverTiles.MergeFrom(other.RiverTiles);
      }
      if (other.HasWaterElevation) {
        WaterElevation = other.WaterElevation;
      }
      if (other.surfaceMaterial_ != null) {
        if (surfaceMaterial_ == null) {
          SurfaceMaterial = new global::RemoteFortressReader.MatPair();
        }
        SurfaceMaterial.MergeFrom(other.SurfaceMaterial);
      }
      plantMaterials_.Add(other.plantMaterials_);
      buildings_.Add(other.buildings_);
      stoneMaterials_.Add(other.stoneMaterials_);
      treeMaterials_.Add(other.treeMaterials_);
      if (other.HasSnow) {
        Snow = other.Snow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Elevation = input.ReadInt32();
            break;
          }
          case 16: {
            Rainfall = input.ReadInt32();
            break;
          }
          case 24: {
            Vegetation = input.ReadInt32();
            break;
          }
          case 32: {
            Temperature = input.ReadInt32();
            break;
          }
          case 40: {
            Evilness = input.ReadInt32();
            break;
          }
          case 48: {
            Drainage = input.ReadInt32();
            break;
          }
          case 56: {
            Volcanism = input.ReadInt32();
            break;
          }
          case 64: {
            Savagery = input.ReadInt32();
            break;
          }
          case 72: {
            Salinity = input.ReadInt32();
            break;
          }
          case 82: {
            if (riverTiles_ == null) {
              RiverTiles = new global::RemoteFortressReader.RiverTile();
            }
            input.ReadMessage(RiverTiles);
            break;
          }
          case 88: {
            WaterElevation = input.ReadInt32();
            break;
          }
          case 98: {
            if (surfaceMaterial_ == null) {
              SurfaceMaterial = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(SurfaceMaterial);
            break;
          }
          case 106: {
            plantMaterials_.AddEntriesFrom(input, _repeated_plantMaterials_codec);
            break;
          }
          case 114: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 122: {
            stoneMaterials_.AddEntriesFrom(input, _repeated_stoneMaterials_codec);
            break;
          }
          case 130: {
            treeMaterials_.AddEntriesFrom(input, _repeated_treeMaterials_codec);
            break;
          }
          case 136: {
            Snow = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Elevation = input.ReadInt32();
            break;
          }
          case 16: {
            Rainfall = input.ReadInt32();
            break;
          }
          case 24: {
            Vegetation = input.ReadInt32();
            break;
          }
          case 32: {
            Temperature = input.ReadInt32();
            break;
          }
          case 40: {
            Evilness = input.ReadInt32();
            break;
          }
          case 48: {
            Drainage = input.ReadInt32();
            break;
          }
          case 56: {
            Volcanism = input.ReadInt32();
            break;
          }
          case 64: {
            Savagery = input.ReadInt32();
            break;
          }
          case 72: {
            Salinity = input.ReadInt32();
            break;
          }
          case 82: {
            if (riverTiles_ == null) {
              RiverTiles = new global::RemoteFortressReader.RiverTile();
            }
            input.ReadMessage(RiverTiles);
            break;
          }
          case 88: {
            WaterElevation = input.ReadInt32();
            break;
          }
          case 98: {
            if (surfaceMaterial_ == null) {
              SurfaceMaterial = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(SurfaceMaterial);
            break;
          }
          case 106: {
            plantMaterials_.AddEntriesFrom(ref input, _repeated_plantMaterials_codec);
            break;
          }
          case 114: {
            buildings_.AddEntriesFrom(ref input, _repeated_buildings_codec);
            break;
          }
          case 122: {
            stoneMaterials_.AddEntriesFrom(ref input, _repeated_stoneMaterials_codec);
            break;
          }
          case 130: {
            treeMaterials_.AddEntriesFrom(ref input, _repeated_treeMaterials_codec);
            break;
          }
          case 136: {
            Snow = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegionMap : pb::IMessage<RegionMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegionMap> _parser = new pb::MessageParser<RegionMap>(() => new RegionMap());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegionMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMap(RegionMap other) : this() {
      _hasBits0 = other._hasBits0;
      mapX_ = other.mapX_;
      mapY_ = other.mapY_;
      name_ = other.name_;
      nameEnglish_ = other.nameEnglish_;
      tiles_ = other.tiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMap Clone() {
      return new RegionMap(this);
    }

    /// <summary>Field number for the "map_x" field.</summary>
    public const int MapXFieldNumber = 1;
    private readonly static int MapXDefaultValue = 0;

    private int mapX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapX {
      get { if ((_hasBits0 & 1) != 0) { return mapX_; } else { return MapXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapX_ = value;
      }
    }
    /// <summary>Gets whether the "map_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "map_y" field.</summary>
    public const int MapYFieldNumber = 2;
    private readonly static int MapYDefaultValue = 0;

    private int mapY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapY {
      get { if ((_hasBits0 & 2) != 0) { return mapY_; } else { return MapYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mapY_ = value;
      }
    }
    /// <summary>Gets whether the "map_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "map_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "name_english" field.</summary>
    public const int NameEnglishFieldNumber = 4;
    private readonly static pb::ByteString NameEnglishDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nameEnglish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString NameEnglish {
      get { return nameEnglish_ ?? NameEnglishDefaultValue; }
      set {
        nameEnglish_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name_english" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNameEnglish {
      get { return nameEnglish_ != null; }
    }
    /// <summary>Clears the value of the "name_english" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNameEnglish() {
      nameEnglish_ = null;
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.RegionTile> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(42, global::RemoteFortressReader.RegionTile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.RegionTile> tiles_ = new pbc::RepeatedField<global::RemoteFortressReader.RegionTile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.RegionTile> Tiles {
      get { return tiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegionMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegionMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapX != other.MapX) return false;
      if (MapY != other.MapY) return false;
      if (Name != other.Name) return false;
      if (NameEnglish != other.NameEnglish) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapX) hash ^= MapX.GetHashCode();
      if (HasMapY) hash ^= MapY.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasNameEnglish) hash ^= NameEnglish.GetHashCode();
      hash ^= tiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapX) {
        output.WriteRawTag(8);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(16);
        output.WriteInt32(MapY);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (HasNameEnglish) {
        output.WriteRawTag(34);
        output.WriteBytes(NameEnglish);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapX) {
        output.WriteRawTag(8);
        output.WriteInt32(MapX);
      }
      if (HasMapY) {
        output.WriteRawTag(16);
        output.WriteInt32(MapY);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (HasNameEnglish) {
        output.WriteRawTag(34);
        output.WriteBytes(NameEnglish);
      }
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapX);
      }
      if (HasMapY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapY);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasNameEnglish) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NameEnglish);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegionMap other) {
      if (other == null) {
        return;
      }
      if (other.HasMapX) {
        MapX = other.MapX;
      }
      if (other.HasMapY) {
        MapY = other.MapY;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasNameEnglish) {
        NameEnglish = other.NameEnglish;
      }
      tiles_.Add(other.tiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapX = input.ReadInt32();
            break;
          }
          case 16: {
            MapY = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            NameEnglish = input.ReadBytes();
            break;
          }
          case 42: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapX = input.ReadInt32();
            break;
          }
          case 16: {
            MapY = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            NameEnglish = input.ReadBytes();
            break;
          }
          case 42: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegionMaps : pb::IMessage<RegionMaps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegionMaps> _parser = new pb::MessageParser<RegionMaps>(() => new RegionMaps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegionMaps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMaps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMaps(RegionMaps other) : this() {
      worldMaps_ = other.worldMaps_.Clone();
      regionMaps_ = other.regionMaps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegionMaps Clone() {
      return new RegionMaps(this);
    }

    /// <summary>Field number for the "world_maps" field.</summary>
    public const int WorldMapsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.WorldMap> _repeated_worldMaps_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.WorldMap.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.WorldMap> worldMaps_ = new pbc::RepeatedField<global::RemoteFortressReader.WorldMap>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.WorldMap> WorldMaps {
      get { return worldMaps_; }
    }

    /// <summary>Field number for the "region_maps" field.</summary>
    public const int RegionMaps_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.RegionMap> _repeated_regionMaps_codec
        = pb::FieldCodec.ForMessage(18, global::RemoteFortressReader.RegionMap.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.RegionMap> regionMaps_ = new pbc::RepeatedField<global::RemoteFortressReader.RegionMap>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.RegionMap> RegionMaps_ {
      get { return regionMaps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegionMaps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegionMaps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!worldMaps_.Equals(other.worldMaps_)) return false;
      if(!regionMaps_.Equals(other.regionMaps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= worldMaps_.GetHashCode();
      hash ^= regionMaps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      worldMaps_.WriteTo(output, _repeated_worldMaps_codec);
      regionMaps_.WriteTo(output, _repeated_regionMaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      worldMaps_.WriteTo(ref output, _repeated_worldMaps_codec);
      regionMaps_.WriteTo(ref output, _repeated_regionMaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += worldMaps_.CalculateSize(_repeated_worldMaps_codec);
      size += regionMaps_.CalculateSize(_repeated_regionMaps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegionMaps other) {
      if (other == null) {
        return;
      }
      worldMaps_.Add(other.worldMaps_);
      regionMaps_.Add(other.regionMaps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            worldMaps_.AddEntriesFrom(input, _repeated_worldMaps_codec);
            break;
          }
          case 18: {
            regionMaps_.AddEntriesFrom(input, _repeated_regionMaps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            worldMaps_.AddEntriesFrom(ref input, _repeated_worldMaps_codec);
            break;
          }
          case 18: {
            regionMaps_.AddEntriesFrom(ref input, _repeated_regionMaps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PatternDescriptor : pb::IMessage<PatternDescriptor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PatternDescriptor> _parser = new pb::MessageParser<PatternDescriptor>(() => new PatternDescriptor());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PatternDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatternDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatternDescriptor(PatternDescriptor other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      colors_ = other.colors_.Clone();
      pattern_ = other.pattern_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatternDescriptor Clone() {
      return new PatternDescriptor(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "colors" field.</summary>
    public const int ColorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ColorDefinition> _repeated_colors_codec
        = pb::FieldCodec.ForMessage(18, global::RemoteFortressReader.ColorDefinition.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ColorDefinition> colors_ = new pbc::RepeatedField<global::RemoteFortressReader.ColorDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ColorDefinition> Colors {
      get { return colors_; }
    }

    /// <summary>Field number for the "pattern" field.</summary>
    public const int PatternFieldNumber = 3;
    private readonly static global::RemoteFortressReader.PatternType PatternDefaultValue = global::RemoteFortressReader.PatternType.Monotone;

    private global::RemoteFortressReader.PatternType pattern_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.PatternType Pattern {
      get { if ((_hasBits0 & 1) != 0) { return pattern_; } else { return PatternDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pattern_ = value;
      }
    }
    /// <summary>Gets whether the "pattern" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPattern {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pattern" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPattern() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PatternDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PatternDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!colors_.Equals(other.colors_)) return false;
      if (Pattern != other.Pattern) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      hash ^= colors_.GetHashCode();
      if (HasPattern) hash ^= Pattern.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      colors_.WriteTo(output, _repeated_colors_codec);
      if (HasPattern) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Pattern);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      colors_.WriteTo(ref output, _repeated_colors_codec);
      if (HasPattern) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Pattern);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      size += colors_.CalculateSize(_repeated_colors_codec);
      if (HasPattern) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Pattern);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PatternDescriptor other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      colors_.Add(other.colors_);
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            colors_.AddEntriesFrom(input, _repeated_colors_codec);
            break;
          }
          case 24: {
            Pattern = (global::RemoteFortressReader.PatternType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            colors_.AddEntriesFrom(ref input, _repeated_colors_codec);
            break;
          }
          case 24: {
            Pattern = (global::RemoteFortressReader.PatternType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ColorModifierRaw : pb::IMessage<ColorModifierRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColorModifierRaw> _parser = new pb::MessageParser<ColorModifierRaw>(() => new ColorModifierRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColorModifierRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorModifierRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorModifierRaw(ColorModifierRaw other) : this() {
      _hasBits0 = other._hasBits0;
      patterns_ = other.patterns_.Clone();
      bodyPartId_ = other.bodyPartId_.Clone();
      tissueLayerId_ = other.tissueLayerId_.Clone();
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      part_ = other.part_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColorModifierRaw Clone() {
      return new ColorModifierRaw(this);
    }

    /// <summary>Field number for the "patterns" field.</summary>
    public const int PatternsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.PatternDescriptor> _repeated_patterns_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.PatternDescriptor.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.PatternDescriptor> patterns_ = new pbc::RepeatedField<global::RemoteFortressReader.PatternDescriptor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.PatternDescriptor> Patterns {
      get { return patterns_; }
    }

    /// <summary>Field number for the "body_part_id" field.</summary>
    public const int BodyPartIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_bodyPartId_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> bodyPartId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BodyPartId {
      get { return bodyPartId_; }
    }

    /// <summary>Field number for the "tissue_layer_id" field.</summary>
    public const int TissueLayerIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_tissueLayerId_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> tissueLayerId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TissueLayerId {
      get { return tissueLayerId_; }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 4;
    private readonly static int StartDateDefaultValue = 0;

    private int startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartDate {
      get { if ((_hasBits0 & 1) != 0) { return startDate_; } else { return StartDateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startDate_ = value;
      }
    }
    /// <summary>Gets whether the "start_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartDate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartDate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 5;
    private readonly static int EndDateDefaultValue = 0;

    private int endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndDate {
      get { if ((_hasBits0 & 2) != 0) { return endDate_; } else { return EndDateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endDate_ = value;
      }
    }
    /// <summary>Gets whether the "end_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndDate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndDate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "part" field.</summary>
    public const int PartFieldNumber = 6;
    private readonly static pb::ByteString PartDefaultValue = pb::ByteString.Empty;

    private pb::ByteString part_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Part {
      get { return part_ ?? PartDefaultValue; }
      set {
        part_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "part" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPart {
      get { return part_ != null; }
    }
    /// <summary>Clears the value of the "part" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPart() {
      part_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColorModifierRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColorModifierRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!patterns_.Equals(other.patterns_)) return false;
      if(!bodyPartId_.Equals(other.bodyPartId_)) return false;
      if(!tissueLayerId_.Equals(other.tissueLayerId_)) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (Part != other.Part) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= patterns_.GetHashCode();
      hash ^= bodyPartId_.GetHashCode();
      hash ^= tissueLayerId_.GetHashCode();
      if (HasStartDate) hash ^= StartDate.GetHashCode();
      if (HasEndDate) hash ^= EndDate.GetHashCode();
      if (HasPart) hash ^= Part.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      patterns_.WriteTo(output, _repeated_patterns_codec);
      bodyPartId_.WriteTo(output, _repeated_bodyPartId_codec);
      tissueLayerId_.WriteTo(output, _repeated_tissueLayerId_codec);
      if (HasStartDate) {
        output.WriteRawTag(32);
        output.WriteInt32(StartDate);
      }
      if (HasEndDate) {
        output.WriteRawTag(40);
        output.WriteInt32(EndDate);
      }
      if (HasPart) {
        output.WriteRawTag(50);
        output.WriteBytes(Part);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      patterns_.WriteTo(ref output, _repeated_patterns_codec);
      bodyPartId_.WriteTo(ref output, _repeated_bodyPartId_codec);
      tissueLayerId_.WriteTo(ref output, _repeated_tissueLayerId_codec);
      if (HasStartDate) {
        output.WriteRawTag(32);
        output.WriteInt32(StartDate);
      }
      if (HasEndDate) {
        output.WriteRawTag(40);
        output.WriteInt32(EndDate);
      }
      if (HasPart) {
        output.WriteRawTag(50);
        output.WriteBytes(Part);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += patterns_.CalculateSize(_repeated_patterns_codec);
      size += bodyPartId_.CalculateSize(_repeated_bodyPartId_codec);
      size += tissueLayerId_.CalculateSize(_repeated_tissueLayerId_codec);
      if (HasStartDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartDate);
      }
      if (HasEndDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndDate);
      }
      if (HasPart) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Part);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColorModifierRaw other) {
      if (other == null) {
        return;
      }
      patterns_.Add(other.patterns_);
      bodyPartId_.Add(other.bodyPartId_);
      tissueLayerId_.Add(other.tissueLayerId_);
      if (other.HasStartDate) {
        StartDate = other.StartDate;
      }
      if (other.HasEndDate) {
        EndDate = other.EndDate;
      }
      if (other.HasPart) {
        Part = other.Part;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            patterns_.AddEntriesFrom(input, _repeated_patterns_codec);
            break;
          }
          case 18:
          case 16: {
            bodyPartId_.AddEntriesFrom(input, _repeated_bodyPartId_codec);
            break;
          }
          case 26:
          case 24: {
            tissueLayerId_.AddEntriesFrom(input, _repeated_tissueLayerId_codec);
            break;
          }
          case 32: {
            StartDate = input.ReadInt32();
            break;
          }
          case 40: {
            EndDate = input.ReadInt32();
            break;
          }
          case 50: {
            Part = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            patterns_.AddEntriesFrom(ref input, _repeated_patterns_codec);
            break;
          }
          case 18:
          case 16: {
            bodyPartId_.AddEntriesFrom(ref input, _repeated_bodyPartId_codec);
            break;
          }
          case 26:
          case 24: {
            tissueLayerId_.AddEntriesFrom(ref input, _repeated_tissueLayerId_codec);
            break;
          }
          case 32: {
            StartDate = input.ReadInt32();
            break;
          }
          case 40: {
            EndDate = input.ReadInt32();
            break;
          }
          case 50: {
            Part = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BodyPartLayerRaw : pb::IMessage<BodyPartLayerRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BodyPartLayerRaw> _parser = new pb::MessageParser<BodyPartLayerRaw>(() => new BodyPartLayerRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BodyPartLayerRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartLayerRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartLayerRaw(BodyPartLayerRaw other) : this() {
      _hasBits0 = other._hasBits0;
      layerName_ = other.layerName_;
      tissueId_ = other.tissueId_;
      layerDepth_ = other.layerDepth_;
      bpModifiers_ = other.bpModifiers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartLayerRaw Clone() {
      return new BodyPartLayerRaw(this);
    }

    /// <summary>Field number for the "layer_name" field.</summary>
    public const int LayerNameFieldNumber = 1;
    private readonly static pb::ByteString LayerNameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString layerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LayerName {
      get { return layerName_ ?? LayerNameDefaultValue; }
      set {
        layerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layer_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayerName {
      get { return layerName_ != null; }
    }
    /// <summary>Clears the value of the "layer_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayerName() {
      layerName_ = null;
    }

    /// <summary>Field number for the "tissue_id" field.</summary>
    public const int TissueIdFieldNumber = 2;
    private readonly static int TissueIdDefaultValue = 0;

    private int tissueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TissueId {
      get { if ((_hasBits0 & 1) != 0) { return tissueId_; } else { return TissueIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tissueId_ = value;
      }
    }
    /// <summary>Gets whether the "tissue_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTissueId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tissue_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTissueId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "layer_depth" field.</summary>
    public const int LayerDepthFieldNumber = 3;
    private readonly static int LayerDepthDefaultValue = 0;

    private int layerDepth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LayerDepth {
      get { if ((_hasBits0 & 2) != 0) { return layerDepth_; } else { return LayerDepthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        layerDepth_ = value;
      }
    }
    /// <summary>Gets whether the "layer_depth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayerDepth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "layer_depth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayerDepth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bp_modifiers" field.</summary>
    public const int BpModifiersFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_bpModifiers_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> bpModifiers_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BpModifiers {
      get { return bpModifiers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BodyPartLayerRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BodyPartLayerRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LayerName != other.LayerName) return false;
      if (TissueId != other.TissueId) return false;
      if (LayerDepth != other.LayerDepth) return false;
      if(!bpModifiers_.Equals(other.bpModifiers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLayerName) hash ^= LayerName.GetHashCode();
      if (HasTissueId) hash ^= TissueId.GetHashCode();
      if (HasLayerDepth) hash ^= LayerDepth.GetHashCode();
      hash ^= bpModifiers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLayerName) {
        output.WriteRawTag(10);
        output.WriteBytes(LayerName);
      }
      if (HasTissueId) {
        output.WriteRawTag(16);
        output.WriteInt32(TissueId);
      }
      if (HasLayerDepth) {
        output.WriteRawTag(24);
        output.WriteInt32(LayerDepth);
      }
      bpModifiers_.WriteTo(output, _repeated_bpModifiers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLayerName) {
        output.WriteRawTag(10);
        output.WriteBytes(LayerName);
      }
      if (HasTissueId) {
        output.WriteRawTag(16);
        output.WriteInt32(TissueId);
      }
      if (HasLayerDepth) {
        output.WriteRawTag(24);
        output.WriteInt32(LayerDepth);
      }
      bpModifiers_.WriteTo(ref output, _repeated_bpModifiers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLayerName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LayerName);
      }
      if (HasTissueId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TissueId);
      }
      if (HasLayerDepth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LayerDepth);
      }
      size += bpModifiers_.CalculateSize(_repeated_bpModifiers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BodyPartLayerRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasLayerName) {
        LayerName = other.LayerName;
      }
      if (other.HasTissueId) {
        TissueId = other.TissueId;
      }
      if (other.HasLayerDepth) {
        LayerDepth = other.LayerDepth;
      }
      bpModifiers_.Add(other.bpModifiers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LayerName = input.ReadBytes();
            break;
          }
          case 16: {
            TissueId = input.ReadInt32();
            break;
          }
          case 24: {
            LayerDepth = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            bpModifiers_.AddEntriesFrom(input, _repeated_bpModifiers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LayerName = input.ReadBytes();
            break;
          }
          case 16: {
            TissueId = input.ReadInt32();
            break;
          }
          case 24: {
            LayerDepth = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            bpModifiers_.AddEntriesFrom(ref input, _repeated_bpModifiers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BodyPartRaw : pb::IMessage<BodyPartRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BodyPartRaw> _parser = new pb::MessageParser<BodyPartRaw>(() => new BodyPartRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BodyPartRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartRaw(BodyPartRaw other) : this() {
      _hasBits0 = other._hasBits0;
      token_ = other.token_;
      category_ = other.category_;
      parent_ = other.parent_;
      flags_ = other.flags_.Clone();
      layers_ = other.layers_.Clone();
      relsize_ = other.relsize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyPartRaw Clone() {
      return new BodyPartRaw(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private readonly static pb::ByteString CategoryDefaultValue = pb::ByteString.Empty;

    private pb::ByteString category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Category {
      get { return category_ ?? CategoryDefaultValue; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "category" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCategory {
      get { return category_ != null; }
    }
    /// <summary>Clears the value of the "category" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCategory() {
      category_ = null;
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 3;
    private readonly static int ParentDefaultValue = 0;

    private int parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Parent {
      get { if ((_hasBits0 & 1) != 0) { return parent_; } else { return ParentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        parent_ = value;
      }
    }
    /// <summary>Gets whether the "parent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasParent {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "parent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearParent() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    private static readonly pb::FieldCodec<bool> _repeated_flags_codec
        = pb::FieldCodec.ForBool(32);
    private readonly pbc::RepeatedField<bool> flags_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Flags {
      get { return flags_; }
    }

    /// <summary>Field number for the "layers" field.</summary>
    public const int LayersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BodyPartLayerRaw> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(42, global::RemoteFortressReader.BodyPartLayerRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BodyPartLayerRaw> layers_ = new pbc::RepeatedField<global::RemoteFortressReader.BodyPartLayerRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BodyPartLayerRaw> Layers {
      get { return layers_; }
    }

    /// <summary>Field number for the "relsize" field.</summary>
    public const int RelsizeFieldNumber = 6;
    private readonly static int RelsizeDefaultValue = 0;

    private int relsize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Relsize {
      get { if ((_hasBits0 & 2) != 0) { return relsize_; } else { return RelsizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        relsize_ = value;
      }
    }
    /// <summary>Gets whether the "relsize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelsize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "relsize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelsize() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BodyPartRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BodyPartRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Category != other.Category) return false;
      if (Parent != other.Parent) return false;
      if(!flags_.Equals(other.flags_)) return false;
      if(!layers_.Equals(other.layers_)) return false;
      if (Relsize != other.Relsize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasCategory) hash ^= Category.GetHashCode();
      if (HasParent) hash ^= Parent.GetHashCode();
      hash ^= flags_.GetHashCode();
      hash ^= layers_.GetHashCode();
      if (HasRelsize) hash ^= Relsize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasCategory) {
        output.WriteRawTag(18);
        output.WriteBytes(Category);
      }
      if (HasParent) {
        output.WriteRawTag(24);
        output.WriteInt32(Parent);
      }
      flags_.WriteTo(output, _repeated_flags_codec);
      layers_.WriteTo(output, _repeated_layers_codec);
      if (HasRelsize) {
        output.WriteRawTag(48);
        output.WriteInt32(Relsize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasCategory) {
        output.WriteRawTag(18);
        output.WriteBytes(Category);
      }
      if (HasParent) {
        output.WriteRawTag(24);
        output.WriteInt32(Parent);
      }
      flags_.WriteTo(ref output, _repeated_flags_codec);
      layers_.WriteTo(ref output, _repeated_layers_codec);
      if (HasRelsize) {
        output.WriteRawTag(48);
        output.WriteInt32(Relsize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (HasCategory) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Category);
      }
      if (HasParent) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Parent);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      size += layers_.CalculateSize(_repeated_layers_codec);
      if (HasRelsize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Relsize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BodyPartRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasCategory) {
        Category = other.Category;
      }
      if (other.HasParent) {
        Parent = other.Parent;
      }
      flags_.Add(other.flags_);
      layers_.Add(other.layers_);
      if (other.HasRelsize) {
        Relsize = other.Relsize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 18: {
            Category = input.ReadBytes();
            break;
          }
          case 24: {
            Parent = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
          case 42: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
          case 48: {
            Relsize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 18: {
            Category = input.ReadBytes();
            break;
          }
          case 24: {
            Parent = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
          case 42: {
            layers_.AddEntriesFrom(ref input, _repeated_layers_codec);
            break;
          }
          case 48: {
            Relsize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpAppearanceModifier : pb::IMessage<BpAppearanceModifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpAppearanceModifier> _parser = new pb::MessageParser<BpAppearanceModifier>(() => new BpAppearanceModifier());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BpAppearanceModifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BpAppearanceModifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BpAppearanceModifier(BpAppearanceModifier other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      modMin_ = other.modMin_;
      modMax_ = other.modMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BpAppearanceModifier Clone() {
      return new BpAppearanceModifier(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static pb::ByteString TypeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "mod_min" field.</summary>
    public const int ModMinFieldNumber = 2;
    private readonly static int ModMinDefaultValue = 0;

    private int modMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModMin {
      get { if ((_hasBits0 & 1) != 0) { return modMin_; } else { return ModMinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        modMin_ = value;
      }
    }
    /// <summary>Gets whether the "mod_min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mod_min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mod_max" field.</summary>
    public const int ModMaxFieldNumber = 3;
    private readonly static int ModMaxDefaultValue = 0;

    private int modMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModMax {
      get { if ((_hasBits0 & 2) != 0) { return modMax_; } else { return ModMaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        modMax_ = value;
      }
    }
    /// <summary>Gets whether the "mod_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mod_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModMax() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BpAppearanceModifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BpAppearanceModifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ModMin != other.ModMin) return false;
      if (ModMax != other.ModMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasModMin) hash ^= ModMin.GetHashCode();
      if (HasModMax) hash ^= ModMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteBytes(Type);
      }
      if (HasModMin) {
        output.WriteRawTag(16);
        output.WriteInt32(ModMin);
      }
      if (HasModMax) {
        output.WriteRawTag(24);
        output.WriteInt32(ModMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteBytes(Type);
      }
      if (HasModMin) {
        output.WriteRawTag(16);
        output.WriteInt32(ModMin);
      }
      if (HasModMax) {
        output.WriteRawTag(24);
        output.WriteInt32(ModMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Type);
      }
      if (HasModMin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModMin);
      }
      if (HasModMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BpAppearanceModifier other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasModMin) {
        ModMin = other.ModMin;
      }
      if (other.HasModMax) {
        ModMax = other.ModMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadBytes();
            break;
          }
          case 16: {
            ModMin = input.ReadInt32();
            break;
          }
          case 24: {
            ModMax = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadBytes();
            break;
          }
          case 16: {
            ModMin = input.ReadInt32();
            break;
          }
          case 24: {
            ModMax = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TissueRaw : pb::IMessage<TissueRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TissueRaw> _parser = new pb::MessageParser<TissueRaw>(() => new TissueRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TissueRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TissueRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TissueRaw(TissueRaw other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      subordinateToTissue_ = other.subordinateToTissue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TissueRaw Clone() {
      return new TissueRaw(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 3;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "subordinate_to_tissue" field.</summary>
    public const int SubordinateToTissueFieldNumber = 4;
    private readonly static pb::ByteString SubordinateToTissueDefaultValue = pb::ByteString.Empty;

    private pb::ByteString subordinateToTissue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SubordinateToTissue {
      get { return subordinateToTissue_ ?? SubordinateToTissueDefaultValue; }
      set {
        subordinateToTissue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subordinate_to_tissue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubordinateToTissue {
      get { return subordinateToTissue_ != null; }
    }
    /// <summary>Clears the value of the "subordinate_to_tissue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubordinateToTissue() {
      subordinateToTissue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TissueRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TissueRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (SubordinateToTissue != other.SubordinateToTissue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (HasSubordinateToTissue) hash ^= SubordinateToTissue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteBytes(Name);
      }
      if (material_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Material);
      }
      if (HasSubordinateToTissue) {
        output.WriteRawTag(34);
        output.WriteBytes(SubordinateToTissue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteBytes(Name);
      }
      if (material_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Material);
      }
      if (HasSubordinateToTissue) {
        output.WriteRawTag(34);
        output.WriteBytes(SubordinateToTissue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (HasSubordinateToTissue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SubordinateToTissue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TissueRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.HasSubordinateToTissue) {
        SubordinateToTissue = other.SubordinateToTissue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            Name = input.ReadBytes();
            break;
          }
          case 26: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 34: {
            SubordinateToTissue = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            Name = input.ReadBytes();
            break;
          }
          case 26: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 34: {
            SubordinateToTissue = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CasteRaw : pb::IMessage<CasteRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CasteRaw> _parser = new pb::MessageParser<CasteRaw>(() => new CasteRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CasteRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CasteRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CasteRaw(CasteRaw other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      casteId_ = other.casteId_;
      casteName_ = other.casteName_.Clone();
      babyName_ = other.babyName_.Clone();
      childName_ = other.childName_.Clone();
      gender_ = other.gender_;
      bodyParts_ = other.bodyParts_.Clone();
      totalRelsize_ = other.totalRelsize_;
      modifiers_ = other.modifiers_.Clone();
      modifierIdx_ = other.modifierIdx_.Clone();
      partIdx_ = other.partIdx_.Clone();
      layerIdx_ = other.layerIdx_.Clone();
      bodyAppearanceModifiers_ = other.bodyAppearanceModifiers_.Clone();
      colorModifiers_ = other.colorModifiers_.Clone();
      description_ = other.description_;
      adultSize_ = other.adultSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CasteRaw Clone() {
      return new CasteRaw(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "caste_id" field.</summary>
    public const int CasteIdFieldNumber = 2;
    private readonly static pb::ByteString CasteIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString casteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CasteId {
      get { return casteId_ ?? CasteIdDefaultValue; }
      set {
        casteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caste_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCasteId {
      get { return casteId_ != null; }
    }
    /// <summary>Clears the value of the "caste_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCasteId() {
      casteId_ = null;
    }

    /// <summary>Field number for the "caste_name" field.</summary>
    public const int CasteNameFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_casteName_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> casteName_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> CasteName {
      get { return casteName_; }
    }

    /// <summary>Field number for the "baby_name" field.</summary>
    public const int BabyNameFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_babyName_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> babyName_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> BabyName {
      get { return babyName_; }
    }

    /// <summary>Field number for the "child_name" field.</summary>
    public const int ChildNameFieldNumber = 5;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_childName_codec
        = pb::FieldCodec.ForBytes(42);
    private readonly pbc::RepeatedField<pb::ByteString> childName_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> ChildName {
      get { return childName_; }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 6;
    private readonly static int GenderDefaultValue = 0;

    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Gender {
      get { if ((_hasBits0 & 2) != 0) { return gender_; } else { return GenderDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gender_ = value;
      }
    }
    /// <summary>Gets whether the "gender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGender {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGender() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "body_parts" field.</summary>
    public const int BodyPartsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BodyPartRaw> _repeated_bodyParts_codec
        = pb::FieldCodec.ForMessage(58, global::RemoteFortressReader.BodyPartRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BodyPartRaw> bodyParts_ = new pbc::RepeatedField<global::RemoteFortressReader.BodyPartRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BodyPartRaw> BodyParts {
      get { return bodyParts_; }
    }

    /// <summary>Field number for the "total_relsize" field.</summary>
    public const int TotalRelsizeFieldNumber = 8;
    private readonly static int TotalRelsizeDefaultValue = 0;

    private int totalRelsize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalRelsize {
      get { if ((_hasBits0 & 4) != 0) { return totalRelsize_; } else { return TotalRelsizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalRelsize_ = value;
      }
    }
    /// <summary>Gets whether the "total_relsize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalRelsize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_relsize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalRelsize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 9;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BpAppearanceModifier> _repeated_modifiers_codec
        = pb::FieldCodec.ForMessage(74, global::RemoteFortressReader.BpAppearanceModifier.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier> modifiers_ = new pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier> Modifiers {
      get { return modifiers_; }
    }

    /// <summary>Field number for the "modifier_idx" field.</summary>
    public const int ModifierIdxFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_modifierIdx_codec
        = pb::FieldCodec.ForInt32(80);
    private readonly pbc::RepeatedField<int> modifierIdx_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ModifierIdx {
      get { return modifierIdx_; }
    }

    /// <summary>Field number for the "part_idx" field.</summary>
    public const int PartIdxFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_partIdx_codec
        = pb::FieldCodec.ForInt32(88);
    private readonly pbc::RepeatedField<int> partIdx_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PartIdx {
      get { return partIdx_; }
    }

    /// <summary>Field number for the "layer_idx" field.</summary>
    public const int LayerIdxFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_layerIdx_codec
        = pb::FieldCodec.ForInt32(96);
    private readonly pbc::RepeatedField<int> layerIdx_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LayerIdx {
      get { return layerIdx_; }
    }

    /// <summary>Field number for the "body_appearance_modifiers" field.</summary>
    public const int BodyAppearanceModifiersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.BpAppearanceModifier> _repeated_bodyAppearanceModifiers_codec
        = pb::FieldCodec.ForMessage(106, global::RemoteFortressReader.BpAppearanceModifier.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier> bodyAppearanceModifiers_ = new pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.BpAppearanceModifier> BodyAppearanceModifiers {
      get { return bodyAppearanceModifiers_; }
    }

    /// <summary>Field number for the "color_modifiers" field.</summary>
    public const int ColorModifiersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ColorModifierRaw> _repeated_colorModifiers_codec
        = pb::FieldCodec.ForMessage(114, global::RemoteFortressReader.ColorModifierRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ColorModifierRaw> colorModifiers_ = new pbc::RepeatedField<global::RemoteFortressReader.ColorModifierRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ColorModifierRaw> ColorModifiers {
      get { return colorModifiers_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 15;
    private readonly static pb::ByteString DescriptionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "adult_size" field.</summary>
    public const int AdultSizeFieldNumber = 16;
    private readonly static int AdultSizeDefaultValue = 0;

    private int adultSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AdultSize {
      get { if ((_hasBits0 & 8) != 0) { return adultSize_; } else { return AdultSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        adultSize_ = value;
      }
    }
    /// <summary>Gets whether the "adult_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdultSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "adult_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdultSize() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CasteRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CasteRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (CasteId != other.CasteId) return false;
      if(!casteName_.Equals(other.casteName_)) return false;
      if(!babyName_.Equals(other.babyName_)) return false;
      if(!childName_.Equals(other.childName_)) return false;
      if (Gender != other.Gender) return false;
      if(!bodyParts_.Equals(other.bodyParts_)) return false;
      if (TotalRelsize != other.TotalRelsize) return false;
      if(!modifiers_.Equals(other.modifiers_)) return false;
      if(!modifierIdx_.Equals(other.modifierIdx_)) return false;
      if(!partIdx_.Equals(other.partIdx_)) return false;
      if(!layerIdx_.Equals(other.layerIdx_)) return false;
      if(!bodyAppearanceModifiers_.Equals(other.bodyAppearanceModifiers_)) return false;
      if(!colorModifiers_.Equals(other.colorModifiers_)) return false;
      if (Description != other.Description) return false;
      if (AdultSize != other.AdultSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasCasteId) hash ^= CasteId.GetHashCode();
      hash ^= casteName_.GetHashCode();
      hash ^= babyName_.GetHashCode();
      hash ^= childName_.GetHashCode();
      if (HasGender) hash ^= Gender.GetHashCode();
      hash ^= bodyParts_.GetHashCode();
      if (HasTotalRelsize) hash ^= TotalRelsize.GetHashCode();
      hash ^= modifiers_.GetHashCode();
      hash ^= modifierIdx_.GetHashCode();
      hash ^= partIdx_.GetHashCode();
      hash ^= layerIdx_.GetHashCode();
      hash ^= bodyAppearanceModifiers_.GetHashCode();
      hash ^= colorModifiers_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasAdultSize) hash ^= AdultSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasCasteId) {
        output.WriteRawTag(18);
        output.WriteBytes(CasteId);
      }
      casteName_.WriteTo(output, _repeated_casteName_codec);
      babyName_.WriteTo(output, _repeated_babyName_codec);
      childName_.WriteTo(output, _repeated_childName_codec);
      if (HasGender) {
        output.WriteRawTag(48);
        output.WriteInt32(Gender);
      }
      bodyParts_.WriteTo(output, _repeated_bodyParts_codec);
      if (HasTotalRelsize) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalRelsize);
      }
      modifiers_.WriteTo(output, _repeated_modifiers_codec);
      modifierIdx_.WriteTo(output, _repeated_modifierIdx_codec);
      partIdx_.WriteTo(output, _repeated_partIdx_codec);
      layerIdx_.WriteTo(output, _repeated_layerIdx_codec);
      bodyAppearanceModifiers_.WriteTo(output, _repeated_bodyAppearanceModifiers_codec);
      colorModifiers_.WriteTo(output, _repeated_colorModifiers_codec);
      if (HasDescription) {
        output.WriteRawTag(122);
        output.WriteBytes(Description);
      }
      if (HasAdultSize) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AdultSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasCasteId) {
        output.WriteRawTag(18);
        output.WriteBytes(CasteId);
      }
      casteName_.WriteTo(ref output, _repeated_casteName_codec);
      babyName_.WriteTo(ref output, _repeated_babyName_codec);
      childName_.WriteTo(ref output, _repeated_childName_codec);
      if (HasGender) {
        output.WriteRawTag(48);
        output.WriteInt32(Gender);
      }
      bodyParts_.WriteTo(ref output, _repeated_bodyParts_codec);
      if (HasTotalRelsize) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalRelsize);
      }
      modifiers_.WriteTo(ref output, _repeated_modifiers_codec);
      modifierIdx_.WriteTo(ref output, _repeated_modifierIdx_codec);
      partIdx_.WriteTo(ref output, _repeated_partIdx_codec);
      layerIdx_.WriteTo(ref output, _repeated_layerIdx_codec);
      bodyAppearanceModifiers_.WriteTo(ref output, _repeated_bodyAppearanceModifiers_codec);
      colorModifiers_.WriteTo(ref output, _repeated_colorModifiers_codec);
      if (HasDescription) {
        output.WriteRawTag(122);
        output.WriteBytes(Description);
      }
      if (HasAdultSize) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AdultSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasCasteId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CasteId);
      }
      size += casteName_.CalculateSize(_repeated_casteName_codec);
      size += babyName_.CalculateSize(_repeated_babyName_codec);
      size += childName_.CalculateSize(_repeated_childName_codec);
      if (HasGender) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      size += bodyParts_.CalculateSize(_repeated_bodyParts_codec);
      if (HasTotalRelsize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRelsize);
      }
      size += modifiers_.CalculateSize(_repeated_modifiers_codec);
      size += modifierIdx_.CalculateSize(_repeated_modifierIdx_codec);
      size += partIdx_.CalculateSize(_repeated_partIdx_codec);
      size += layerIdx_.CalculateSize(_repeated_layerIdx_codec);
      size += bodyAppearanceModifiers_.CalculateSize(_repeated_bodyAppearanceModifiers_codec);
      size += colorModifiers_.CalculateSize(_repeated_colorModifiers_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Description);
      }
      if (HasAdultSize) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AdultSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CasteRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasCasteId) {
        CasteId = other.CasteId;
      }
      casteName_.Add(other.casteName_);
      babyName_.Add(other.babyName_);
      childName_.Add(other.childName_);
      if (other.HasGender) {
        Gender = other.Gender;
      }
      bodyParts_.Add(other.bodyParts_);
      if (other.HasTotalRelsize) {
        TotalRelsize = other.TotalRelsize;
      }
      modifiers_.Add(other.modifiers_);
      modifierIdx_.Add(other.modifierIdx_);
      partIdx_.Add(other.partIdx_);
      layerIdx_.Add(other.layerIdx_);
      bodyAppearanceModifiers_.Add(other.bodyAppearanceModifiers_);
      colorModifiers_.Add(other.colorModifiers_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasAdultSize) {
        AdultSize = other.AdultSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            CasteId = input.ReadBytes();
            break;
          }
          case 26: {
            casteName_.AddEntriesFrom(input, _repeated_casteName_codec);
            break;
          }
          case 34: {
            babyName_.AddEntriesFrom(input, _repeated_babyName_codec);
            break;
          }
          case 42: {
            childName_.AddEntriesFrom(input, _repeated_childName_codec);
            break;
          }
          case 48: {
            Gender = input.ReadInt32();
            break;
          }
          case 58: {
            bodyParts_.AddEntriesFrom(input, _repeated_bodyParts_codec);
            break;
          }
          case 64: {
            TotalRelsize = input.ReadInt32();
            break;
          }
          case 74: {
            modifiers_.AddEntriesFrom(input, _repeated_modifiers_codec);
            break;
          }
          case 82:
          case 80: {
            modifierIdx_.AddEntriesFrom(input, _repeated_modifierIdx_codec);
            break;
          }
          case 90:
          case 88: {
            partIdx_.AddEntriesFrom(input, _repeated_partIdx_codec);
            break;
          }
          case 98:
          case 96: {
            layerIdx_.AddEntriesFrom(input, _repeated_layerIdx_codec);
            break;
          }
          case 106: {
            bodyAppearanceModifiers_.AddEntriesFrom(input, _repeated_bodyAppearanceModifiers_codec);
            break;
          }
          case 114: {
            colorModifiers_.AddEntriesFrom(input, _repeated_colorModifiers_codec);
            break;
          }
          case 122: {
            Description = input.ReadBytes();
            break;
          }
          case 128: {
            AdultSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            CasteId = input.ReadBytes();
            break;
          }
          case 26: {
            casteName_.AddEntriesFrom(ref input, _repeated_casteName_codec);
            break;
          }
          case 34: {
            babyName_.AddEntriesFrom(ref input, _repeated_babyName_codec);
            break;
          }
          case 42: {
            childName_.AddEntriesFrom(ref input, _repeated_childName_codec);
            break;
          }
          case 48: {
            Gender = input.ReadInt32();
            break;
          }
          case 58: {
            bodyParts_.AddEntriesFrom(ref input, _repeated_bodyParts_codec);
            break;
          }
          case 64: {
            TotalRelsize = input.ReadInt32();
            break;
          }
          case 74: {
            modifiers_.AddEntriesFrom(ref input, _repeated_modifiers_codec);
            break;
          }
          case 82:
          case 80: {
            modifierIdx_.AddEntriesFrom(ref input, _repeated_modifierIdx_codec);
            break;
          }
          case 90:
          case 88: {
            partIdx_.AddEntriesFrom(ref input, _repeated_partIdx_codec);
            break;
          }
          case 98:
          case 96: {
            layerIdx_.AddEntriesFrom(ref input, _repeated_layerIdx_codec);
            break;
          }
          case 106: {
            bodyAppearanceModifiers_.AddEntriesFrom(ref input, _repeated_bodyAppearanceModifiers_codec);
            break;
          }
          case 114: {
            colorModifiers_.AddEntriesFrom(ref input, _repeated_colorModifiers_codec);
            break;
          }
          case 122: {
            Description = input.ReadBytes();
            break;
          }
          case 128: {
            AdultSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatureRaw : pb::IMessage<CreatureRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureRaw> _parser = new pb::MessageParser<CreatureRaw>(() => new CreatureRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRaw(CreatureRaw other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      creatureId_ = other.creatureId_;
      name_ = other.name_.Clone();
      generalBabyName_ = other.generalBabyName_.Clone();
      generalChildName_ = other.generalChildName_.Clone();
      creatureTile_ = other.creatureTile_;
      creatureSoldierTile_ = other.creatureSoldierTile_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      adultsize_ = other.adultsize_;
      caste_ = other.caste_.Clone();
      tissues_ = other.tissues_.Clone();
      flags_ = other.flags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRaw Clone() {
      return new CreatureRaw(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "creature_id" field.</summary>
    public const int CreatureIdFieldNumber = 2;
    private readonly static pb::ByteString CreatureIdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString creatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CreatureId {
      get { return creatureId_ ?? CreatureIdDefaultValue; }
      set {
        creatureId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "creature_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatureId {
      get { return creatureId_ != null; }
    }
    /// <summary>Clears the value of the "creature_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatureId() {
      creatureId_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_name_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> name_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Name {
      get { return name_; }
    }

    /// <summary>Field number for the "general_baby_name" field.</summary>
    public const int GeneralBabyNameFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_generalBabyName_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> generalBabyName_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> GeneralBabyName {
      get { return generalBabyName_; }
    }

    /// <summary>Field number for the "general_child_name" field.</summary>
    public const int GeneralChildNameFieldNumber = 5;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_generalChildName_codec
        = pb::FieldCodec.ForBytes(42);
    private readonly pbc::RepeatedField<pb::ByteString> generalChildName_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> GeneralChildName {
      get { return generalChildName_; }
    }

    /// <summary>Field number for the "creature_tile" field.</summary>
    public const int CreatureTileFieldNumber = 6;
    private readonly static int CreatureTileDefaultValue = 0;

    private int creatureTile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreatureTile {
      get { if ((_hasBits0 & 2) != 0) { return creatureTile_; } else { return CreatureTileDefaultValue; } }
      set {
        _hasBits0 |= 2;
        creatureTile_ = value;
      }
    }
    /// <summary>Gets whether the "creature_tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatureTile {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "creature_tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatureTile() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "creature_soldier_tile" field.</summary>
    public const int CreatureSoldierTileFieldNumber = 7;
    private readonly static int CreatureSoldierTileDefaultValue = 0;

    private int creatureSoldierTile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreatureSoldierTile {
      get { if ((_hasBits0 & 4) != 0) { return creatureSoldierTile_; } else { return CreatureSoldierTileDefaultValue; } }
      set {
        _hasBits0 |= 4;
        creatureSoldierTile_ = value;
      }
    }
    /// <summary>Gets whether the "creature_soldier_tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatureSoldierTile {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "creature_soldier_tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatureSoldierTile() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 8;
    private global::RemoteFortressReader.ColorDefinition color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ColorDefinition Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "adultsize" field.</summary>
    public const int AdultsizeFieldNumber = 9;
    private readonly static int AdultsizeDefaultValue = 0;

    private int adultsize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Adultsize {
      get { if ((_hasBits0 & 8) != 0) { return adultsize_; } else { return AdultsizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        adultsize_ = value;
      }
    }
    /// <summary>Gets whether the "adultsize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdultsize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "adultsize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdultsize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "caste" field.</summary>
    public const int CasteFieldNumber = 10;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.CasteRaw> _repeated_caste_codec
        = pb::FieldCodec.ForMessage(82, global::RemoteFortressReader.CasteRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.CasteRaw> caste_ = new pbc::RepeatedField<global::RemoteFortressReader.CasteRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.CasteRaw> Caste {
      get { return caste_; }
    }

    /// <summary>Field number for the "tissues" field.</summary>
    public const int TissuesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.TissueRaw> _repeated_tissues_codec
        = pb::FieldCodec.ForMessage(90, global::RemoteFortressReader.TissueRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.TissueRaw> tissues_ = new pbc::RepeatedField<global::RemoteFortressReader.TissueRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.TissueRaw> Tissues {
      get { return tissues_; }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 12;
    private static readonly pb::FieldCodec<bool> _repeated_flags_codec
        = pb::FieldCodec.ForBool(96);
    private readonly pbc::RepeatedField<bool> flags_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Flags {
      get { return flags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (CreatureId != other.CreatureId) return false;
      if(!name_.Equals(other.name_)) return false;
      if(!generalBabyName_.Equals(other.generalBabyName_)) return false;
      if(!generalChildName_.Equals(other.generalChildName_)) return false;
      if (CreatureTile != other.CreatureTile) return false;
      if (CreatureSoldierTile != other.CreatureSoldierTile) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (Adultsize != other.Adultsize) return false;
      if(!caste_.Equals(other.caste_)) return false;
      if(!tissues_.Equals(other.tissues_)) return false;
      if(!flags_.Equals(other.flags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasCreatureId) hash ^= CreatureId.GetHashCode();
      hash ^= name_.GetHashCode();
      hash ^= generalBabyName_.GetHashCode();
      hash ^= generalChildName_.GetHashCode();
      if (HasCreatureTile) hash ^= CreatureTile.GetHashCode();
      if (HasCreatureSoldierTile) hash ^= CreatureSoldierTile.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasAdultsize) hash ^= Adultsize.GetHashCode();
      hash ^= caste_.GetHashCode();
      hash ^= tissues_.GetHashCode();
      hash ^= flags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasCreatureId) {
        output.WriteRawTag(18);
        output.WriteBytes(CreatureId);
      }
      name_.WriteTo(output, _repeated_name_codec);
      generalBabyName_.WriteTo(output, _repeated_generalBabyName_codec);
      generalChildName_.WriteTo(output, _repeated_generalChildName_codec);
      if (HasCreatureTile) {
        output.WriteRawTag(48);
        output.WriteInt32(CreatureTile);
      }
      if (HasCreatureSoldierTile) {
        output.WriteRawTag(56);
        output.WriteInt32(CreatureSoldierTile);
      }
      if (color_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Color);
      }
      if (HasAdultsize) {
        output.WriteRawTag(72);
        output.WriteInt32(Adultsize);
      }
      caste_.WriteTo(output, _repeated_caste_codec);
      tissues_.WriteTo(output, _repeated_tissues_codec);
      flags_.WriteTo(output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasCreatureId) {
        output.WriteRawTag(18);
        output.WriteBytes(CreatureId);
      }
      name_.WriteTo(ref output, _repeated_name_codec);
      generalBabyName_.WriteTo(ref output, _repeated_generalBabyName_codec);
      generalChildName_.WriteTo(ref output, _repeated_generalChildName_codec);
      if (HasCreatureTile) {
        output.WriteRawTag(48);
        output.WriteInt32(CreatureTile);
      }
      if (HasCreatureSoldierTile) {
        output.WriteRawTag(56);
        output.WriteInt32(CreatureSoldierTile);
      }
      if (color_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Color);
      }
      if (HasAdultsize) {
        output.WriteRawTag(72);
        output.WriteInt32(Adultsize);
      }
      caste_.WriteTo(ref output, _repeated_caste_codec);
      tissues_.WriteTo(ref output, _repeated_tissues_codec);
      flags_.WriteTo(ref output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasCreatureId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CreatureId);
      }
      size += name_.CalculateSize(_repeated_name_codec);
      size += generalBabyName_.CalculateSize(_repeated_generalBabyName_codec);
      size += generalChildName_.CalculateSize(_repeated_generalChildName_codec);
      if (HasCreatureTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreatureTile);
      }
      if (HasCreatureSoldierTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreatureSoldierTile);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasAdultsize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Adultsize);
      }
      size += caste_.CalculateSize(_repeated_caste_codec);
      size += tissues_.CalculateSize(_repeated_tissues_codec);
      size += flags_.CalculateSize(_repeated_flags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasCreatureId) {
        CreatureId = other.CreatureId;
      }
      name_.Add(other.name_);
      generalBabyName_.Add(other.generalBabyName_);
      generalChildName_.Add(other.generalChildName_);
      if (other.HasCreatureTile) {
        CreatureTile = other.CreatureTile;
      }
      if (other.HasCreatureSoldierTile) {
        CreatureSoldierTile = other.CreatureSoldierTile;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::RemoteFortressReader.ColorDefinition();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasAdultsize) {
        Adultsize = other.Adultsize;
      }
      caste_.Add(other.caste_);
      tissues_.Add(other.tissues_);
      flags_.Add(other.flags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            CreatureId = input.ReadBytes();
            break;
          }
          case 26: {
            name_.AddEntriesFrom(input, _repeated_name_codec);
            break;
          }
          case 34: {
            generalBabyName_.AddEntriesFrom(input, _repeated_generalBabyName_codec);
            break;
          }
          case 42: {
            generalChildName_.AddEntriesFrom(input, _repeated_generalChildName_codec);
            break;
          }
          case 48: {
            CreatureTile = input.ReadInt32();
            break;
          }
          case 56: {
            CreatureSoldierTile = input.ReadInt32();
            break;
          }
          case 66: {
            if (color_ == null) {
              Color = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Color);
            break;
          }
          case 72: {
            Adultsize = input.ReadInt32();
            break;
          }
          case 82: {
            caste_.AddEntriesFrom(input, _repeated_caste_codec);
            break;
          }
          case 90: {
            tissues_.AddEntriesFrom(input, _repeated_tissues_codec);
            break;
          }
          case 98:
          case 96: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            CreatureId = input.ReadBytes();
            break;
          }
          case 26: {
            name_.AddEntriesFrom(ref input, _repeated_name_codec);
            break;
          }
          case 34: {
            generalBabyName_.AddEntriesFrom(ref input, _repeated_generalBabyName_codec);
            break;
          }
          case 42: {
            generalChildName_.AddEntriesFrom(ref input, _repeated_generalChildName_codec);
            break;
          }
          case 48: {
            CreatureTile = input.ReadInt32();
            break;
          }
          case 56: {
            CreatureSoldierTile = input.ReadInt32();
            break;
          }
          case 66: {
            if (color_ == null) {
              Color = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Color);
            break;
          }
          case 72: {
            Adultsize = input.ReadInt32();
            break;
          }
          case 82: {
            caste_.AddEntriesFrom(ref input, _repeated_caste_codec);
            break;
          }
          case 90: {
            tissues_.AddEntriesFrom(ref input, _repeated_tissues_codec);
            break;
          }
          case 98:
          case 96: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatureRawList : pb::IMessage<CreatureRawList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureRawList> _parser = new pb::MessageParser<CreatureRawList>(() => new CreatureRawList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureRawList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRawList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRawList(CreatureRawList other) : this() {
      creatureRaws_ = other.creatureRaws_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureRawList Clone() {
      return new CreatureRawList(this);
    }

    /// <summary>Field number for the "creature_raws" field.</summary>
    public const int CreatureRawsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.CreatureRaw> _repeated_creatureRaws_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.CreatureRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.CreatureRaw> creatureRaws_ = new pbc::RepeatedField<global::RemoteFortressReader.CreatureRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.CreatureRaw> CreatureRaws {
      get { return creatureRaws_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureRawList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureRawList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!creatureRaws_.Equals(other.creatureRaws_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= creatureRaws_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      creatureRaws_.WriteTo(output, _repeated_creatureRaws_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      creatureRaws_.WriteTo(ref output, _repeated_creatureRaws_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += creatureRaws_.CalculateSize(_repeated_creatureRaws_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureRawList other) {
      if (other == null) {
        return;
      }
      creatureRaws_.Add(other.creatureRaws_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            creatureRaws_.AddEntriesFrom(input, _repeated_creatureRaws_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            creatureRaws_.AddEntriesFrom(ref input, _repeated_creatureRaws_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Army : pb::IMessage<Army>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Army> _parser = new pb::MessageParser<Army>(() => new Army());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Army> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Army() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Army(Army other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      leader_ = other.leader_ != null ? other.leader_.Clone() : null;
      members_ = other.members_.Clone();
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Army Clone() {
      return new Army(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 2;
    private readonly static int PosXDefaultValue = 0;

    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosX {
      get { if ((_hasBits0 & 2) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 3;
    private readonly static int PosYDefaultValue = 0;

    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosY {
      get { if ((_hasBits0 & 4) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos_z" field.</summary>
    public const int PosZFieldNumber = 4;
    private readonly static int PosZDefaultValue = 0;

    private int posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosZ {
      get { if ((_hasBits0 & 8) != 0) { return posZ_; } else { return PosZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        posZ_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 5;
    private global::RemoteFortressReader.UnitDefinition leader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.UnitDefinition Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.UnitDefinition> _repeated_members_codec
        = pb::FieldCodec.ForMessage(50, global::RemoteFortressReader.UnitDefinition.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition> members_ = new pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.UnitDefinition> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 7;
    private readonly static uint FlagsDefaultValue = 0;

    private uint flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { if ((_hasBits0 & 16) != 0) { return flags_; } else { return FlagsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        flags_ = value;
      }
    }
    /// <summary>Gets whether the "flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Army);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Army other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (PosZ != other.PosZ) return false;
      if (!object.Equals(Leader, other.Leader)) return false;
      if(!members_.Equals(other.members_)) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPosX) hash ^= PosX.GetHashCode();
      if (HasPosY) hash ^= PosY.GetHashCode();
      if (HasPosZ) hash ^= PosZ.GetHashCode();
      if (leader_ != null) hash ^= Leader.GetHashCode();
      hash ^= members_.GetHashCode();
      if (HasFlags) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPosX) {
        output.WriteRawTag(16);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(24);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(32);
        output.WriteInt32(PosZ);
      }
      if (leader_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Leader);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (HasFlags) {
        output.WriteRawTag(56);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPosX) {
        output.WriteRawTag(16);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(24);
        output.WriteInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(32);
        output.WriteInt32(PosZ);
      }
      if (leader_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Leader);
      }
      members_.WriteTo(ref output, _repeated_members_codec);
      if (HasFlags) {
        output.WriteRawTag(56);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (HasPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (HasPosZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosZ);
      }
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (HasFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Army other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasPosZ) {
        PosZ = other.PosZ;
      }
      if (other.leader_ != null) {
        if (leader_ == null) {
          Leader = new global::RemoteFortressReader.UnitDefinition();
        }
        Leader.MergeFrom(other.Leader);
      }
      members_.Add(other.members_);
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PosX = input.ReadInt32();
            break;
          }
          case 24: {
            PosY = input.ReadInt32();
            break;
          }
          case 32: {
            PosZ = input.ReadInt32();
            break;
          }
          case 42: {
            if (leader_ == null) {
              Leader = new global::RemoteFortressReader.UnitDefinition();
            }
            input.ReadMessage(Leader);
            break;
          }
          case 50: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 56: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PosX = input.ReadInt32();
            break;
          }
          case 24: {
            PosY = input.ReadInt32();
            break;
          }
          case 32: {
            PosZ = input.ReadInt32();
            break;
          }
          case 42: {
            if (leader_ == null) {
              Leader = new global::RemoteFortressReader.UnitDefinition();
            }
            input.ReadMessage(Leader);
            break;
          }
          case 50: {
            members_.AddEntriesFrom(ref input, _repeated_members_codec);
            break;
          }
          case 56: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmyList : pb::IMessage<ArmyList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmyList> _parser = new pb::MessageParser<ArmyList>(() => new ArmyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArmyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArmyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArmyList(ArmyList other) : this() {
      armies_ = other.armies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArmyList Clone() {
      return new ArmyList(this);
    }

    /// <summary>Field number for the "armies" field.</summary>
    public const int ArmiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Army> _repeated_armies_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.Army.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Army> armies_ = new pbc::RepeatedField<global::RemoteFortressReader.Army>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Army> Armies {
      get { return armies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArmyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArmyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!armies_.Equals(other.armies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= armies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      armies_.WriteTo(output, _repeated_armies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      armies_.WriteTo(ref output, _repeated_armies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += armies_.CalculateSize(_repeated_armies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArmyList other) {
      if (other == null) {
        return;
      }
      armies_.Add(other.armies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            armies_.AddEntriesFrom(input, _repeated_armies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            armies_.AddEntriesFrom(ref input, _repeated_armies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GrowthPrint : pb::IMessage<GrowthPrint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrowthPrint> _parser = new pb::MessageParser<GrowthPrint>(() => new GrowthPrint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrowthPrint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrowthPrint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrowthPrint(GrowthPrint other) : this() {
      _hasBits0 = other._hasBits0;
      priority_ = other.priority_;
      color_ = other.color_;
      timingStart_ = other.timingStart_;
      timingEnd_ = other.timingEnd_;
      tile_ = other.tile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrowthPrint Clone() {
      return new GrowthPrint(this);
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 1;
    private readonly static int PriorityDefaultValue = 0;

    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { if ((_hasBits0 & 1) != 0) { return priority_; } else { return PriorityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        priority_ = value;
      }
    }
    /// <summary>Gets whether the "priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriority {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriority() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private readonly static int ColorDefaultValue = 0;

    private int color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Color {
      get { if ((_hasBits0 & 2) != 0) { return color_; } else { return ColorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        color_ = value;
      }
    }
    /// <summary>Gets whether the "color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "timing_start" field.</summary>
    public const int TimingStartFieldNumber = 3;
    private readonly static int TimingStartDefaultValue = 0;

    private int timingStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimingStart {
      get { if ((_hasBits0 & 4) != 0) { return timingStart_; } else { return TimingStartDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timingStart_ = value;
      }
    }
    /// <summary>Gets whether the "timing_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimingStart {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "timing_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimingStart() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "timing_end" field.</summary>
    public const int TimingEndFieldNumber = 4;
    private readonly static int TimingEndDefaultValue = 0;

    private int timingEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimingEnd {
      get { if ((_hasBits0 & 8) != 0) { return timingEnd_; } else { return TimingEndDefaultValue; } }
      set {
        _hasBits0 |= 8;
        timingEnd_ = value;
      }
    }
    /// <summary>Gets whether the "timing_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimingEnd {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "timing_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimingEnd() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tile" field.</summary>
    public const int TileFieldNumber = 5;
    private readonly static int TileDefaultValue = 0;

    private int tile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tile {
      get { if ((_hasBits0 & 16) != 0) { return tile_; } else { return TileDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tile_ = value;
      }
    }
    /// <summary>Gets whether the "tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTile {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTile() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrowthPrint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrowthPrint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Priority != other.Priority) return false;
      if (Color != other.Color) return false;
      if (TimingStart != other.TimingStart) return false;
      if (TimingEnd != other.TimingEnd) return false;
      if (Tile != other.Tile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPriority) hash ^= Priority.GetHashCode();
      if (HasColor) hash ^= Color.GetHashCode();
      if (HasTimingStart) hash ^= TimingStart.GetHashCode();
      if (HasTimingEnd) hash ^= TimingEnd.GetHashCode();
      if (HasTile) hash ^= Tile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPriority) {
        output.WriteRawTag(8);
        output.WriteInt32(Priority);
      }
      if (HasColor) {
        output.WriteRawTag(16);
        output.WriteInt32(Color);
      }
      if (HasTimingStart) {
        output.WriteRawTag(24);
        output.WriteInt32(TimingStart);
      }
      if (HasTimingEnd) {
        output.WriteRawTag(32);
        output.WriteInt32(TimingEnd);
      }
      if (HasTile) {
        output.WriteRawTag(40);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPriority) {
        output.WriteRawTag(8);
        output.WriteInt32(Priority);
      }
      if (HasColor) {
        output.WriteRawTag(16);
        output.WriteInt32(Color);
      }
      if (HasTimingStart) {
        output.WriteRawTag(24);
        output.WriteInt32(TimingStart);
      }
      if (HasTimingEnd) {
        output.WriteRawTag(32);
        output.WriteInt32(TimingEnd);
      }
      if (HasTile) {
        output.WriteRawTag(40);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPriority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (HasColor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
      }
      if (HasTimingStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimingStart);
      }
      if (HasTimingEnd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimingEnd);
      }
      if (HasTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrowthPrint other) {
      if (other == null) {
        return;
      }
      if (other.HasPriority) {
        Priority = other.Priority;
      }
      if (other.HasColor) {
        Color = other.Color;
      }
      if (other.HasTimingStart) {
        TimingStart = other.TimingStart;
      }
      if (other.HasTimingEnd) {
        TimingEnd = other.TimingEnd;
      }
      if (other.HasTile) {
        Tile = other.Tile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Priority = input.ReadInt32();
            break;
          }
          case 16: {
            Color = input.ReadInt32();
            break;
          }
          case 24: {
            TimingStart = input.ReadInt32();
            break;
          }
          case 32: {
            TimingEnd = input.ReadInt32();
            break;
          }
          case 40: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Priority = input.ReadInt32();
            break;
          }
          case 16: {
            Color = input.ReadInt32();
            break;
          }
          case 24: {
            TimingStart = input.ReadInt32();
            break;
          }
          case 32: {
            TimingEnd = input.ReadInt32();
            break;
          }
          case 40: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TreeGrowth : pb::IMessage<TreeGrowth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreeGrowth> _parser = new pb::MessageParser<TreeGrowth>(() => new TreeGrowth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreeGrowth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeGrowth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeGrowth(TreeGrowth other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      id_ = other.id_;
      name_ = other.name_;
      mat_ = other.mat_ != null ? other.mat_.Clone() : null;
      prints_ = other.prints_.Clone();
      timingStart_ = other.timingStart_;
      timingEnd_ = other.timingEnd_;
      twigs_ = other.twigs_;
      lightBranches_ = other.lightBranches_;
      heavyBranches_ = other.heavyBranches_;
      trunk_ = other.trunk_;
      roots_ = other.roots_;
      cap_ = other.cap_;
      sapling_ = other.sapling_;
      trunkHeightStart_ = other.trunkHeightStart_;
      trunkHeightEnd_ = other.trunkHeightEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreeGrowth Clone() {
      return new TreeGrowth(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "mat" field.</summary>
    public const int MatFieldNumber = 4;
    private global::RemoteFortressReader.MatPair mat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Mat {
      get { return mat_; }
      set {
        mat_ = value;
      }
    }

    /// <summary>Field number for the "prints" field.</summary>
    public const int PrintsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.GrowthPrint> _repeated_prints_codec
        = pb::FieldCodec.ForMessage(42, global::RemoteFortressReader.GrowthPrint.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.GrowthPrint> prints_ = new pbc::RepeatedField<global::RemoteFortressReader.GrowthPrint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.GrowthPrint> Prints {
      get { return prints_; }
    }

    /// <summary>Field number for the "timing_start" field.</summary>
    public const int TimingStartFieldNumber = 6;
    private readonly static int TimingStartDefaultValue = 0;

    private int timingStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimingStart {
      get { if ((_hasBits0 & 2) != 0) { return timingStart_; } else { return TimingStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timingStart_ = value;
      }
    }
    /// <summary>Gets whether the "timing_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimingStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timing_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimingStart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "timing_end" field.</summary>
    public const int TimingEndFieldNumber = 7;
    private readonly static int TimingEndDefaultValue = 0;

    private int timingEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimingEnd {
      get { if ((_hasBits0 & 4) != 0) { return timingEnd_; } else { return TimingEndDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timingEnd_ = value;
      }
    }
    /// <summary>Gets whether the "timing_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimingEnd {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "timing_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimingEnd() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "twigs" field.</summary>
    public const int TwigsFieldNumber = 8;
    private readonly static bool TwigsDefaultValue = false;

    private bool twigs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Twigs {
      get { if ((_hasBits0 & 8) != 0) { return twigs_; } else { return TwigsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        twigs_ = value;
      }
    }
    /// <summary>Gets whether the "twigs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwigs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "twigs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwigs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "light_branches" field.</summary>
    public const int LightBranchesFieldNumber = 9;
    private readonly static bool LightBranchesDefaultValue = false;

    private bool lightBranches_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LightBranches {
      get { if ((_hasBits0 & 16) != 0) { return lightBranches_; } else { return LightBranchesDefaultValue; } }
      set {
        _hasBits0 |= 16;
        lightBranches_ = value;
      }
    }
    /// <summary>Gets whether the "light_branches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLightBranches {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "light_branches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLightBranches() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "heavy_branches" field.</summary>
    public const int HeavyBranchesFieldNumber = 10;
    private readonly static bool HeavyBranchesDefaultValue = false;

    private bool heavyBranches_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HeavyBranches {
      get { if ((_hasBits0 & 32) != 0) { return heavyBranches_; } else { return HeavyBranchesDefaultValue; } }
      set {
        _hasBits0 |= 32;
        heavyBranches_ = value;
      }
    }
    /// <summary>Gets whether the "heavy_branches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeavyBranches {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "heavy_branches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeavyBranches() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "trunk" field.</summary>
    public const int TrunkFieldNumber = 11;
    private readonly static bool TrunkDefaultValue = false;

    private bool trunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Trunk {
      get { if ((_hasBits0 & 64) != 0) { return trunk_; } else { return TrunkDefaultValue; } }
      set {
        _hasBits0 |= 64;
        trunk_ = value;
      }
    }
    /// <summary>Gets whether the "trunk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrunk {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "trunk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrunk() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "roots" field.</summary>
    public const int RootsFieldNumber = 12;
    private readonly static bool RootsDefaultValue = false;

    private bool roots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Roots {
      get { if ((_hasBits0 & 128) != 0) { return roots_; } else { return RootsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        roots_ = value;
      }
    }
    /// <summary>Gets whether the "roots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoots {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "roots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoots() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "cap" field.</summary>
    public const int CapFieldNumber = 13;
    private readonly static bool CapDefaultValue = false;

    private bool cap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cap {
      get { if ((_hasBits0 & 256) != 0) { return cap_; } else { return CapDefaultValue; } }
      set {
        _hasBits0 |= 256;
        cap_ = value;
      }
    }
    /// <summary>Gets whether the "cap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCap {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "cap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCap() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "sapling" field.</summary>
    public const int SaplingFieldNumber = 14;
    private readonly static bool SaplingDefaultValue = false;

    private bool sapling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Sapling {
      get { if ((_hasBits0 & 512) != 0) { return sapling_; } else { return SaplingDefaultValue; } }
      set {
        _hasBits0 |= 512;
        sapling_ = value;
      }
    }
    /// <summary>Gets whether the "sapling" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSapling {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "sapling" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSapling() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "trunk_height_start" field.</summary>
    public const int TrunkHeightStartFieldNumber = 15;
    private readonly static int TrunkHeightStartDefaultValue = 0;

    private int trunkHeightStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrunkHeightStart {
      get { if ((_hasBits0 & 1024) != 0) { return trunkHeightStart_; } else { return TrunkHeightStartDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        trunkHeightStart_ = value;
      }
    }
    /// <summary>Gets whether the "trunk_height_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrunkHeightStart {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "trunk_height_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrunkHeightStart() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "trunk_height_end" field.</summary>
    public const int TrunkHeightEndFieldNumber = 16;
    private readonly static int TrunkHeightEndDefaultValue = 0;

    private int trunkHeightEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrunkHeightEnd {
      get { if ((_hasBits0 & 2048) != 0) { return trunkHeightEnd_; } else { return TrunkHeightEndDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        trunkHeightEnd_ = value;
      }
    }
    /// <summary>Gets whether the "trunk_height_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrunkHeightEnd {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "trunk_height_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrunkHeightEnd() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreeGrowth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreeGrowth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Mat, other.Mat)) return false;
      if(!prints_.Equals(other.prints_)) return false;
      if (TimingStart != other.TimingStart) return false;
      if (TimingEnd != other.TimingEnd) return false;
      if (Twigs != other.Twigs) return false;
      if (LightBranches != other.LightBranches) return false;
      if (HeavyBranches != other.HeavyBranches) return false;
      if (Trunk != other.Trunk) return false;
      if (Roots != other.Roots) return false;
      if (Cap != other.Cap) return false;
      if (Sapling != other.Sapling) return false;
      if (TrunkHeightStart != other.TrunkHeightStart) return false;
      if (TrunkHeightEnd != other.TrunkHeightEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (mat_ != null) hash ^= Mat.GetHashCode();
      hash ^= prints_.GetHashCode();
      if (HasTimingStart) hash ^= TimingStart.GetHashCode();
      if (HasTimingEnd) hash ^= TimingEnd.GetHashCode();
      if (HasTwigs) hash ^= Twigs.GetHashCode();
      if (HasLightBranches) hash ^= LightBranches.GetHashCode();
      if (HasHeavyBranches) hash ^= HeavyBranches.GetHashCode();
      if (HasTrunk) hash ^= Trunk.GetHashCode();
      if (HasRoots) hash ^= Roots.GetHashCode();
      if (HasCap) hash ^= Cap.GetHashCode();
      if (HasSapling) hash ^= Sapling.GetHashCode();
      if (HasTrunkHeightStart) hash ^= TrunkHeightStart.GetHashCode();
      if (HasTrunkHeightEnd) hash ^= TrunkHeightEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (mat_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mat);
      }
      prints_.WriteTo(output, _repeated_prints_codec);
      if (HasTimingStart) {
        output.WriteRawTag(48);
        output.WriteInt32(TimingStart);
      }
      if (HasTimingEnd) {
        output.WriteRawTag(56);
        output.WriteInt32(TimingEnd);
      }
      if (HasTwigs) {
        output.WriteRawTag(64);
        output.WriteBool(Twigs);
      }
      if (HasLightBranches) {
        output.WriteRawTag(72);
        output.WriteBool(LightBranches);
      }
      if (HasHeavyBranches) {
        output.WriteRawTag(80);
        output.WriteBool(HeavyBranches);
      }
      if (HasTrunk) {
        output.WriteRawTag(88);
        output.WriteBool(Trunk);
      }
      if (HasRoots) {
        output.WriteRawTag(96);
        output.WriteBool(Roots);
      }
      if (HasCap) {
        output.WriteRawTag(104);
        output.WriteBool(Cap);
      }
      if (HasSapling) {
        output.WriteRawTag(112);
        output.WriteBool(Sapling);
      }
      if (HasTrunkHeightStart) {
        output.WriteRawTag(120);
        output.WriteInt32(TrunkHeightStart);
      }
      if (HasTrunkHeightEnd) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TrunkHeightEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      if (mat_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mat);
      }
      prints_.WriteTo(ref output, _repeated_prints_codec);
      if (HasTimingStart) {
        output.WriteRawTag(48);
        output.WriteInt32(TimingStart);
      }
      if (HasTimingEnd) {
        output.WriteRawTag(56);
        output.WriteInt32(TimingEnd);
      }
      if (HasTwigs) {
        output.WriteRawTag(64);
        output.WriteBool(Twigs);
      }
      if (HasLightBranches) {
        output.WriteRawTag(72);
        output.WriteBool(LightBranches);
      }
      if (HasHeavyBranches) {
        output.WriteRawTag(80);
        output.WriteBool(HeavyBranches);
      }
      if (HasTrunk) {
        output.WriteRawTag(88);
        output.WriteBool(Trunk);
      }
      if (HasRoots) {
        output.WriteRawTag(96);
        output.WriteBool(Roots);
      }
      if (HasCap) {
        output.WriteRawTag(104);
        output.WriteBool(Cap);
      }
      if (HasSapling) {
        output.WriteRawTag(112);
        output.WriteBool(Sapling);
      }
      if (HasTrunkHeightStart) {
        output.WriteRawTag(120);
        output.WriteInt32(TrunkHeightStart);
      }
      if (HasTrunkHeightEnd) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TrunkHeightEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (mat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mat);
      }
      size += prints_.CalculateSize(_repeated_prints_codec);
      if (HasTimingStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimingStart);
      }
      if (HasTimingEnd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimingEnd);
      }
      if (HasTwigs) {
        size += 1 + 1;
      }
      if (HasLightBranches) {
        size += 1 + 1;
      }
      if (HasHeavyBranches) {
        size += 1 + 1;
      }
      if (HasTrunk) {
        size += 1 + 1;
      }
      if (HasRoots) {
        size += 1 + 1;
      }
      if (HasCap) {
        size += 1 + 1;
      }
      if (HasSapling) {
        size += 1 + 1;
      }
      if (HasTrunkHeightStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrunkHeightStart);
      }
      if (HasTrunkHeightEnd) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TrunkHeightEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreeGrowth other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.mat_ != null) {
        if (mat_ == null) {
          Mat = new global::RemoteFortressReader.MatPair();
        }
        Mat.MergeFrom(other.Mat);
      }
      prints_.Add(other.prints_);
      if (other.HasTimingStart) {
        TimingStart = other.TimingStart;
      }
      if (other.HasTimingEnd) {
        TimingEnd = other.TimingEnd;
      }
      if (other.HasTwigs) {
        Twigs = other.Twigs;
      }
      if (other.HasLightBranches) {
        LightBranches = other.LightBranches;
      }
      if (other.HasHeavyBranches) {
        HeavyBranches = other.HeavyBranches;
      }
      if (other.HasTrunk) {
        Trunk = other.Trunk;
      }
      if (other.HasRoots) {
        Roots = other.Roots;
      }
      if (other.HasCap) {
        Cap = other.Cap;
      }
      if (other.HasSapling) {
        Sapling = other.Sapling;
      }
      if (other.HasTrunkHeightStart) {
        TrunkHeightStart = other.TrunkHeightStart;
      }
      if (other.HasTrunkHeightEnd) {
        TrunkHeightEnd = other.TrunkHeightEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            if (mat_ == null) {
              Mat = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Mat);
            break;
          }
          case 42: {
            prints_.AddEntriesFrom(input, _repeated_prints_codec);
            break;
          }
          case 48: {
            TimingStart = input.ReadInt32();
            break;
          }
          case 56: {
            TimingEnd = input.ReadInt32();
            break;
          }
          case 64: {
            Twigs = input.ReadBool();
            break;
          }
          case 72: {
            LightBranches = input.ReadBool();
            break;
          }
          case 80: {
            HeavyBranches = input.ReadBool();
            break;
          }
          case 88: {
            Trunk = input.ReadBool();
            break;
          }
          case 96: {
            Roots = input.ReadBool();
            break;
          }
          case 104: {
            Cap = input.ReadBool();
            break;
          }
          case 112: {
            Sapling = input.ReadBool();
            break;
          }
          case 120: {
            TrunkHeightStart = input.ReadInt32();
            break;
          }
          case 128: {
            TrunkHeightEnd = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            if (mat_ == null) {
              Mat = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Mat);
            break;
          }
          case 42: {
            prints_.AddEntriesFrom(ref input, _repeated_prints_codec);
            break;
          }
          case 48: {
            TimingStart = input.ReadInt32();
            break;
          }
          case 56: {
            TimingEnd = input.ReadInt32();
            break;
          }
          case 64: {
            Twigs = input.ReadBool();
            break;
          }
          case 72: {
            LightBranches = input.ReadBool();
            break;
          }
          case 80: {
            HeavyBranches = input.ReadBool();
            break;
          }
          case 88: {
            Trunk = input.ReadBool();
            break;
          }
          case 96: {
            Roots = input.ReadBool();
            break;
          }
          case 104: {
            Cap = input.ReadBool();
            break;
          }
          case 112: {
            Sapling = input.ReadBool();
            break;
          }
          case 120: {
            TrunkHeightStart = input.ReadInt32();
            break;
          }
          case 128: {
            TrunkHeightEnd = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantRaw : pb::IMessage<PlantRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantRaw> _parser = new pb::MessageParser<PlantRaw>(() => new PlantRaw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRaw(PlantRaw other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      id_ = other.id_;
      name_ = other.name_;
      growths_ = other.growths_.Clone();
      tile_ = other.tile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRaw Clone() {
      return new PlantRaw(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "growths" field.</summary>
    public const int GrowthsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.TreeGrowth> _repeated_growths_codec
        = pb::FieldCodec.ForMessage(34, global::RemoteFortressReader.TreeGrowth.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.TreeGrowth> growths_ = new pbc::RepeatedField<global::RemoteFortressReader.TreeGrowth>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.TreeGrowth> Growths {
      get { return growths_; }
    }

    /// <summary>Field number for the "tile" field.</summary>
    public const int TileFieldNumber = 5;
    private readonly static int TileDefaultValue = 0;

    private int tile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tile {
      get { if ((_hasBits0 & 2) != 0) { return tile_; } else { return TileDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tile_ = value;
      }
    }
    /// <summary>Gets whether the "tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTile {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTile() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!growths_.Equals(other.growths_)) return false;
      if (Tile != other.Tile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= growths_.GetHashCode();
      if (HasTile) hash ^= Tile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      growths_.WriteTo(output, _repeated_growths_codec);
      if (HasTile) {
        output.WriteRawTag(40);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteBytes(Name);
      }
      growths_.WriteTo(ref output, _repeated_growths_codec);
      if (HasTile) {
        output.WriteRawTag(40);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      size += growths_.CalculateSize(_repeated_growths_codec);
      if (HasTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantRaw other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      growths_.Add(other.growths_);
      if (other.HasTile) {
        Tile = other.Tile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            growths_.AddEntriesFrom(input, _repeated_growths_codec);
            break;
          }
          case 40: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadBytes();
            break;
          }
          case 34: {
            growths_.AddEntriesFrom(ref input, _repeated_growths_codec);
            break;
          }
          case 40: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlantRawList : pb::IMessage<PlantRawList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlantRawList> _parser = new pb::MessageParser<PlantRawList>(() => new PlantRawList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlantRawList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRawList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRawList(PlantRawList other) : this() {
      plantRaws_ = other.plantRaws_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlantRawList Clone() {
      return new PlantRawList(this);
    }

    /// <summary>Field number for the "plant_raws" field.</summary>
    public const int PlantRawsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.PlantRaw> _repeated_plantRaws_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.PlantRaw.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.PlantRaw> plantRaws_ = new pbc::RepeatedField<global::RemoteFortressReader.PlantRaw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.PlantRaw> PlantRaws {
      get { return plantRaws_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlantRawList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlantRawList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plantRaws_.Equals(other.plantRaws_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plantRaws_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plantRaws_.WriteTo(output, _repeated_plantRaws_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plantRaws_.WriteTo(ref output, _repeated_plantRaws_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += plantRaws_.CalculateSize(_repeated_plantRaws_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlantRawList other) {
      if (other == null) {
        return;
      }
      plantRaws_.Add(other.plantRaws_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plantRaws_.AddEntriesFrom(input, _repeated_plantRaws_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plantRaws_.AddEntriesFrom(ref input, _repeated_plantRaws_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScreenTile : pb::IMessage<ScreenTile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScreenTile> _parser = new pb::MessageParser<ScreenTile>(() => new ScreenTile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScreenTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenTile(ScreenTile other) : this() {
      _hasBits0 = other._hasBits0;
      character_ = other.character_;
      foreground_ = other.foreground_;
      background_ = other.background_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenTile Clone() {
      return new ScreenTile(this);
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 1;
    private readonly static uint CharacterDefaultValue = 0;

    private uint character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Character {
      get { if ((_hasBits0 & 1) != 0) { return character_; } else { return CharacterDefaultValue; } }
      set {
        _hasBits0 |= 1;
        character_ = value;
      }
    }
    /// <summary>Gets whether the "character" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCharacter {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "character" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCharacter() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "foreground" field.</summary>
    public const int ForegroundFieldNumber = 2;
    private readonly static uint ForegroundDefaultValue = 0;

    private uint foreground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Foreground {
      get { if ((_hasBits0 & 2) != 0) { return foreground_; } else { return ForegroundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        foreground_ = value;
      }
    }
    /// <summary>Gets whether the "foreground" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForeground {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "foreground" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForeground() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 3;
    private readonly static uint BackgroundDefaultValue = 0;

    private uint background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Background {
      get { if ((_hasBits0 & 4) != 0) { return background_; } else { return BackgroundDefaultValue; } }
      set {
        _hasBits0 |= 4;
        background_ = value;
      }
    }
    /// <summary>Gets whether the "background" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBackground {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "background" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBackground() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScreenTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScreenTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Character != other.Character) return false;
      if (Foreground != other.Foreground) return false;
      if (Background != other.Background) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCharacter) hash ^= Character.GetHashCode();
      if (HasForeground) hash ^= Foreground.GetHashCode();
      if (HasBackground) hash ^= Background.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCharacter) {
        output.WriteRawTag(8);
        output.WriteUInt32(Character);
      }
      if (HasForeground) {
        output.WriteRawTag(16);
        output.WriteUInt32(Foreground);
      }
      if (HasBackground) {
        output.WriteRawTag(24);
        output.WriteUInt32(Background);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCharacter) {
        output.WriteRawTag(8);
        output.WriteUInt32(Character);
      }
      if (HasForeground) {
        output.WriteRawTag(16);
        output.WriteUInt32(Foreground);
      }
      if (HasBackground) {
        output.WriteRawTag(24);
        output.WriteUInt32(Background);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCharacter) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Character);
      }
      if (HasForeground) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Foreground);
      }
      if (HasBackground) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Background);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScreenTile other) {
      if (other == null) {
        return;
      }
      if (other.HasCharacter) {
        Character = other.Character;
      }
      if (other.HasForeground) {
        Foreground = other.Foreground;
      }
      if (other.HasBackground) {
        Background = other.Background;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Character = input.ReadUInt32();
            break;
          }
          case 16: {
            Foreground = input.ReadUInt32();
            break;
          }
          case 24: {
            Background = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Character = input.ReadUInt32();
            break;
          }
          case 16: {
            Foreground = input.ReadUInt32();
            break;
          }
          case 24: {
            Background = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScreenCapture : pb::IMessage<ScreenCapture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScreenCapture> _parser = new pb::MessageParser<ScreenCapture>(() => new ScreenCapture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScreenCapture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenCapture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenCapture(ScreenCapture other) : this() {
      _hasBits0 = other._hasBits0;
      width_ = other.width_;
      height_ = other.height_;
      tiles_ = other.tiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScreenCapture Clone() {
      return new ScreenCapture(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ScreenTile> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(26, global::RemoteFortressReader.ScreenTile.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ScreenTile> tiles_ = new pbc::RepeatedField<global::RemoteFortressReader.ScreenTile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ScreenTile> Tiles {
      get { return tiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScreenCapture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScreenCapture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      hash ^= tiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScreenCapture other) {
      if (other == null) {
        return;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      tiles_.Add(other.tiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyboardEvent : pb::IMessage<KeyboardEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyboardEvent> _parser = new pb::MessageParser<KeyboardEvent>(() => new KeyboardEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyboardEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyboardEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyboardEvent(KeyboardEvent other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      which_ = other.which_;
      state_ = other.state_;
      scancode_ = other.scancode_;
      sym_ = other.sym_;
      mod_ = other.mod_;
      unicode_ = other.unicode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyboardEvent Clone() {
      return new KeyboardEvent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "which" field.</summary>
    public const int WhichFieldNumber = 2;
    private readonly static uint WhichDefaultValue = 0;

    private uint which_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Which {
      get { if ((_hasBits0 & 2) != 0) { return which_; } else { return WhichDefaultValue; } }
      set {
        _hasBits0 |= 2;
        which_ = value;
      }
    }
    /// <summary>Gets whether the "which" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWhich {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "which" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWhich() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { if ((_hasBits0 & 4) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "scancode" field.</summary>
    public const int ScancodeFieldNumber = 4;
    private readonly static uint ScancodeDefaultValue = 0;

    private uint scancode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scancode {
      get { if ((_hasBits0 & 8) != 0) { return scancode_; } else { return ScancodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        scancode_ = value;
      }
    }
    /// <summary>Gets whether the "scancode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScancode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "scancode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScancode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "sym" field.</summary>
    public const int SymFieldNumber = 5;
    private readonly static uint SymDefaultValue = 0;

    private uint sym_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sym {
      get { if ((_hasBits0 & 16) != 0) { return sym_; } else { return SymDefaultValue; } }
      set {
        _hasBits0 |= 16;
        sym_ = value;
      }
    }
    /// <summary>Gets whether the "sym" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSym {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "sym" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSym() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "mod" field.</summary>
    public const int ModFieldNumber = 6;
    private readonly static uint ModDefaultValue = 0;

    private uint mod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mod {
      get { if ((_hasBits0 & 32) != 0) { return mod_; } else { return ModDefaultValue; } }
      set {
        _hasBits0 |= 32;
        mod_ = value;
      }
    }
    /// <summary>Gets whether the "mod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMod {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "mod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMod() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "unicode" field.</summary>
    public const int UnicodeFieldNumber = 7;
    private readonly static uint UnicodeDefaultValue = 0;

    private uint unicode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Unicode {
      get { if ((_hasBits0 & 64) != 0) { return unicode_; } else { return UnicodeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        unicode_ = value;
      }
    }
    /// <summary>Gets whether the "unicode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnicode {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "unicode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnicode() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyboardEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyboardEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Which != other.Which) return false;
      if (State != other.State) return false;
      if (Scancode != other.Scancode) return false;
      if (Sym != other.Sym) return false;
      if (Mod != other.Mod) return false;
      if (Unicode != other.Unicode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasWhich) hash ^= Which.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasScancode) hash ^= Scancode.GetHashCode();
      if (HasSym) hash ^= Sym.GetHashCode();
      if (HasMod) hash ^= Mod.GetHashCode();
      if (HasUnicode) hash ^= Unicode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (HasWhich) {
        output.WriteRawTag(16);
        output.WriteUInt32(Which);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (HasScancode) {
        output.WriteRawTag(32);
        output.WriteUInt32(Scancode);
      }
      if (HasSym) {
        output.WriteRawTag(40);
        output.WriteUInt32(Sym);
      }
      if (HasMod) {
        output.WriteRawTag(48);
        output.WriteUInt32(Mod);
      }
      if (HasUnicode) {
        output.WriteRawTag(56);
        output.WriteUInt32(Unicode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (HasWhich) {
        output.WriteRawTag(16);
        output.WriteUInt32(Which);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (HasScancode) {
        output.WriteRawTag(32);
        output.WriteUInt32(Scancode);
      }
      if (HasSym) {
        output.WriteRawTag(40);
        output.WriteUInt32(Sym);
      }
      if (HasMod) {
        output.WriteRawTag(48);
        output.WriteUInt32(Mod);
      }
      if (HasUnicode) {
        output.WriteRawTag(56);
        output.WriteUInt32(Unicode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (HasWhich) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Which);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (HasScancode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scancode);
      }
      if (HasSym) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sym);
      }
      if (HasMod) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mod);
      }
      if (HasUnicode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Unicode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyboardEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasWhich) {
        Which = other.Which;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasScancode) {
        Scancode = other.Scancode;
      }
      if (other.HasSym) {
        Sym = other.Sym;
      }
      if (other.HasMod) {
        Mod = other.Mod;
      }
      if (other.HasUnicode) {
        Unicode = other.Unicode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Which = input.ReadUInt32();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
          case 32: {
            Scancode = input.ReadUInt32();
            break;
          }
          case 40: {
            Sym = input.ReadUInt32();
            break;
          }
          case 48: {
            Mod = input.ReadUInt32();
            break;
          }
          case 56: {
            Unicode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Which = input.ReadUInt32();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
          case 32: {
            Scancode = input.ReadUInt32();
            break;
          }
          case 40: {
            Sym = input.ReadUInt32();
            break;
          }
          case 48: {
            Mod = input.ReadUInt32();
            break;
          }
          case 56: {
            Unicode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DigCommand : pb::IMessage<DigCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DigCommand> _parser = new pb::MessageParser<DigCommand>(() => new DigCommand());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DigCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DigCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DigCommand(DigCommand other) : this() {
      _hasBits0 = other._hasBits0;
      designation_ = other.designation_;
      locations_ = other.locations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DigCommand Clone() {
      return new DigCommand(this);
    }

    /// <summary>Field number for the "designation" field.</summary>
    public const int DesignationFieldNumber = 1;
    private readonly static global::RemoteFortressReader.TileDigDesignation DesignationDefaultValue = global::RemoteFortressReader.TileDigDesignation.NoDig;

    private global::RemoteFortressReader.TileDigDesignation designation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.TileDigDesignation Designation {
      get { if ((_hasBits0 & 1) != 0) { return designation_; } else { return DesignationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        designation_ = value;
      }
    }
    /// <summary>Gets whether the "designation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesignation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "designation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesignation() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Coord> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(18, global::RemoteFortressReader.Coord.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Coord> locations_ = new pbc::RepeatedField<global::RemoteFortressReader.Coord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Coord> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DigCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DigCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Designation != other.Designation) return false;
      if(!locations_.Equals(other.locations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDesignation) hash ^= Designation.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDesignation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Designation);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDesignation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Designation);
      }
      locations_.WriteTo(ref output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDesignation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Designation);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DigCommand other) {
      if (other == null) {
        return;
      }
      if (other.HasDesignation) {
        Designation = other.Designation;
      }
      locations_.Add(other.locations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Designation = (global::RemoteFortressReader.TileDigDesignation) input.ReadEnum();
            break;
          }
          case 18: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Designation = (global::RemoteFortressReader.TileDigDesignation) input.ReadEnum();
            break;
          }
          case 18: {
            locations_.AddEntriesFrom(ref input, _repeated_locations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SingleBool : pb::IMessage<SingleBool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SingleBool> _parser = new pb::MessageParser<SingleBool>(() => new SingleBool());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SingleBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SingleBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SingleBool(SingleBool other) : this() {
      _hasBits0 = other._hasBits0;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SingleBool Clone() {
      return new SingleBool(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private readonly static bool ValueDefaultValue = false;

    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "Value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SingleBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SingleBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SingleBool other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VersionInfo : pb::IMessage<VersionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VersionInfo> _parser = new pb::MessageParser<VersionInfo>(() => new VersionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VersionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionInfo(VersionInfo other) : this() {
      dwarfFortressVersion_ = other.dwarfFortressVersion_;
      dfhackVersion_ = other.dfhackVersion_;
      remoteFortressReaderVersion_ = other.remoteFortressReaderVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionInfo Clone() {
      return new VersionInfo(this);
    }

    /// <summary>Field number for the "dwarf_fortress_version" field.</summary>
    public const int DwarfFortressVersionFieldNumber = 1;
    private readonly static pb::ByteString DwarfFortressVersionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString dwarfFortressVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DwarfFortressVersion {
      get { return dwarfFortressVersion_ ?? DwarfFortressVersionDefaultValue; }
      set {
        dwarfFortressVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dwarf_fortress_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDwarfFortressVersion {
      get { return dwarfFortressVersion_ != null; }
    }
    /// <summary>Clears the value of the "dwarf_fortress_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDwarfFortressVersion() {
      dwarfFortressVersion_ = null;
    }

    /// <summary>Field number for the "dfhack_version" field.</summary>
    public const int DfhackVersionFieldNumber = 2;
    private readonly static pb::ByteString DfhackVersionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString dfhackVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DfhackVersion {
      get { return dfhackVersion_ ?? DfhackVersionDefaultValue; }
      set {
        dfhackVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dfhack_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDfhackVersion {
      get { return dfhackVersion_ != null; }
    }
    /// <summary>Clears the value of the "dfhack_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDfhackVersion() {
      dfhackVersion_ = null;
    }

    /// <summary>Field number for the "remote_fortress_reader_version" field.</summary>
    public const int RemoteFortressReaderVersionFieldNumber = 3;
    private readonly static pb::ByteString RemoteFortressReaderVersionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString remoteFortressReaderVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RemoteFortressReaderVersion {
      get { return remoteFortressReaderVersion_ ?? RemoteFortressReaderVersionDefaultValue; }
      set {
        remoteFortressReaderVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "remote_fortress_reader_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoteFortressReaderVersion {
      get { return remoteFortressReaderVersion_ != null; }
    }
    /// <summary>Clears the value of the "remote_fortress_reader_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoteFortressReaderVersion() {
      remoteFortressReaderVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VersionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VersionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DwarfFortressVersion != other.DwarfFortressVersion) return false;
      if (DfhackVersion != other.DfhackVersion) return false;
      if (RemoteFortressReaderVersion != other.RemoteFortressReaderVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDwarfFortressVersion) hash ^= DwarfFortressVersion.GetHashCode();
      if (HasDfhackVersion) hash ^= DfhackVersion.GetHashCode();
      if (HasRemoteFortressReaderVersion) hash ^= RemoteFortressReaderVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDwarfFortressVersion) {
        output.WriteRawTag(10);
        output.WriteBytes(DwarfFortressVersion);
      }
      if (HasDfhackVersion) {
        output.WriteRawTag(18);
        output.WriteBytes(DfhackVersion);
      }
      if (HasRemoteFortressReaderVersion) {
        output.WriteRawTag(26);
        output.WriteBytes(RemoteFortressReaderVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDwarfFortressVersion) {
        output.WriteRawTag(10);
        output.WriteBytes(DwarfFortressVersion);
      }
      if (HasDfhackVersion) {
        output.WriteRawTag(18);
        output.WriteBytes(DfhackVersion);
      }
      if (HasRemoteFortressReaderVersion) {
        output.WriteRawTag(26);
        output.WriteBytes(RemoteFortressReaderVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDwarfFortressVersion) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DwarfFortressVersion);
      }
      if (HasDfhackVersion) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DfhackVersion);
      }
      if (HasRemoteFortressReaderVersion) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RemoteFortressReaderVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VersionInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasDwarfFortressVersion) {
        DwarfFortressVersion = other.DwarfFortressVersion;
      }
      if (other.HasDfhackVersion) {
        DfhackVersion = other.DfhackVersion;
      }
      if (other.HasRemoteFortressReaderVersion) {
        RemoteFortressReaderVersion = other.RemoteFortressReaderVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DwarfFortressVersion = input.ReadBytes();
            break;
          }
          case 18: {
            DfhackVersion = input.ReadBytes();
            break;
          }
          case 26: {
            RemoteFortressReaderVersion = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DwarfFortressVersion = input.ReadBytes();
            break;
          }
          case 18: {
            DfhackVersion = input.ReadBytes();
            break;
          }
          case 26: {
            RemoteFortressReaderVersion = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRequest : pb::IMessage<ListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRequest> _parser = new pb::MessageParser<ListRequest>(() => new ListRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRequest(ListRequest other) : this() {
      _hasBits0 = other._hasBits0;
      listStart_ = other.listStart_;
      listEnd_ = other.listEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRequest Clone() {
      return new ListRequest(this);
    }

    /// <summary>Field number for the "list_start" field.</summary>
    public const int ListStartFieldNumber = 1;
    private readonly static int ListStartDefaultValue = 0;

    private int listStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ListStart {
      get { if ((_hasBits0 & 1) != 0) { return listStart_; } else { return ListStartDefaultValue; } }
      set {
        _hasBits0 |= 1;
        listStart_ = value;
      }
    }
    /// <summary>Gets whether the "list_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasListStart {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "list_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearListStart() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "list_end" field.</summary>
    public const int ListEndFieldNumber = 2;
    private readonly static int ListEndDefaultValue = 0;

    private int listEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ListEnd {
      get { if ((_hasBits0 & 2) != 0) { return listEnd_; } else { return ListEndDefaultValue; } }
      set {
        _hasBits0 |= 2;
        listEnd_ = value;
      }
    }
    /// <summary>Gets whether the "list_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasListEnd {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "list_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearListEnd() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListStart != other.ListStart) return false;
      if (ListEnd != other.ListEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasListStart) hash ^= ListStart.GetHashCode();
      if (HasListEnd) hash ^= ListEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasListStart) {
        output.WriteRawTag(8);
        output.WriteInt32(ListStart);
      }
      if (HasListEnd) {
        output.WriteRawTag(16);
        output.WriteInt32(ListEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasListStart) {
        output.WriteRawTag(8);
        output.WriteInt32(ListStart);
      }
      if (HasListEnd) {
        output.WriteRawTag(16);
        output.WriteInt32(ListEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasListStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ListStart);
      }
      if (HasListEnd) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ListEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasListStart) {
        ListStart = other.ListStart;
      }
      if (other.HasListEnd) {
        ListEnd = other.ListEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ListStart = input.ReadInt32();
            break;
          }
          case 16: {
            ListEnd = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ListStart = input.ReadInt32();
            break;
          }
          case 16: {
            ListEnd = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Report : pb::IMessage<Report>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report(Report other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      text_ = other.text_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      duration_ = other.duration_;
      continuation_ = other.continuation_;
      unconscious_ = other.unconscious_;
      announcement_ = other.announcement_;
      repeatCount_ = other.repeatCount_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      id_ = other.id_;
      year_ = other.year_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static pb::ByteString TextDefaultValue = pb::ByteString.Empty;

    private pb::ByteString text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::RemoteFortressReader.ColorDefinition color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ColorDefinition Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private readonly static int DurationDefaultValue = 0;

    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Duration {
      get { if ((_hasBits0 & 2) != 0) { return duration_; } else { return DurationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        duration_ = value;
      }
    }
    /// <summary>Gets whether the "duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDuration {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDuration() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 5;
    private readonly static bool ContinuationDefaultValue = false;

    private bool continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Continuation {
      get { if ((_hasBits0 & 4) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContinuation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContinuation() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "unconscious" field.</summary>
    public const int UnconsciousFieldNumber = 6;
    private readonly static bool UnconsciousDefaultValue = false;

    private bool unconscious_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unconscious {
      get { if ((_hasBits0 & 8) != 0) { return unconscious_; } else { return UnconsciousDefaultValue; } }
      set {
        _hasBits0 |= 8;
        unconscious_ = value;
      }
    }
    /// <summary>Gets whether the "unconscious" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnconscious {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "unconscious" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnconscious() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "announcement" field.</summary>
    public const int AnnouncementFieldNumber = 7;
    private readonly static bool AnnouncementDefaultValue = false;

    private bool announcement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Announcement {
      get { if ((_hasBits0 & 16) != 0) { return announcement_; } else { return AnnouncementDefaultValue; } }
      set {
        _hasBits0 |= 16;
        announcement_ = value;
      }
    }
    /// <summary>Gets whether the "announcement" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncement {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "announcement" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncement() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "repeat_count" field.</summary>
    public const int RepeatCountFieldNumber = 8;
    private readonly static int RepeatCountDefaultValue = 0;

    private int repeatCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RepeatCount {
      get { if ((_hasBits0 & 32) != 0) { return repeatCount_; } else { return RepeatCountDefaultValue; } }
      set {
        _hasBits0 |= 32;
        repeatCount_ = value;
      }
    }
    /// <summary>Gets whether the "repeat_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepeatCount {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "repeat_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepeatCount() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 9;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 10;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 64) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 11;
    private readonly static int YearDefaultValue = 0;

    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Year {
      get { if ((_hasBits0 & 128) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 128;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 12;
    private readonly static int TimeDefaultValue = 0;

    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time {
      get { if ((_hasBits0 & 256) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (Duration != other.Duration) return false;
      if (Continuation != other.Continuation) return false;
      if (Unconscious != other.Unconscious) return false;
      if (Announcement != other.Announcement) return false;
      if (RepeatCount != other.RepeatCount) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (Id != other.Id) return false;
      if (Year != other.Year) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasDuration) hash ^= Duration.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (HasUnconscious) hash ^= Unconscious.GetHashCode();
      if (HasAnnouncement) hash ^= Announcement.GetHashCode();
      if (HasRepeatCount) hash ^= RepeatCount.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteBytes(Text);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (HasDuration) {
        output.WriteRawTag(32);
        output.WriteInt32(Duration);
      }
      if (HasContinuation) {
        output.WriteRawTag(40);
        output.WriteBool(Continuation);
      }
      if (HasUnconscious) {
        output.WriteRawTag(48);
        output.WriteBool(Unconscious);
      }
      if (HasAnnouncement) {
        output.WriteRawTag(56);
        output.WriteBool(Announcement);
      }
      if (HasRepeatCount) {
        output.WriteRawTag(64);
        output.WriteInt32(RepeatCount);
      }
      if (pos_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Pos);
      }
      if (HasId) {
        output.WriteRawTag(80);
        output.WriteInt32(Id);
      }
      if (HasYear) {
        output.WriteRawTag(88);
        output.WriteInt32(Year);
      }
      if (HasTime) {
        output.WriteRawTag(96);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteBytes(Text);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (HasDuration) {
        output.WriteRawTag(32);
        output.WriteInt32(Duration);
      }
      if (HasContinuation) {
        output.WriteRawTag(40);
        output.WriteBool(Continuation);
      }
      if (HasUnconscious) {
        output.WriteRawTag(48);
        output.WriteBool(Unconscious);
      }
      if (HasAnnouncement) {
        output.WriteRawTag(56);
        output.WriteBool(Announcement);
      }
      if (HasRepeatCount) {
        output.WriteRawTag(64);
        output.WriteInt32(RepeatCount);
      }
      if (pos_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Pos);
      }
      if (HasId) {
        output.WriteRawTag(80);
        output.WriteInt32(Id);
      }
      if (HasYear) {
        output.WriteRawTag(88);
        output.WriteInt32(Year);
      }
      if (HasTime) {
        output.WriteRawTag(96);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Text);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasDuration) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (HasContinuation) {
        size += 1 + 1;
      }
      if (HasUnconscious) {
        size += 1 + 1;
      }
      if (HasAnnouncement) {
        size += 1 + 1;
      }
      if (HasRepeatCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RepeatCount);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::RemoteFortressReader.ColorDefinition();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      if (other.HasUnconscious) {
        Unconscious = other.Unconscious;
      }
      if (other.HasAnnouncement) {
        Announcement = other.Announcement;
      }
      if (other.HasRepeatCount) {
        RepeatCount = other.RepeatCount;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadBytes();
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Color);
            break;
          }
          case 32: {
            Duration = input.ReadInt32();
            break;
          }
          case 40: {
            Continuation = input.ReadBool();
            break;
          }
          case 48: {
            Unconscious = input.ReadBool();
            break;
          }
          case 56: {
            Announcement = input.ReadBool();
            break;
          }
          case 64: {
            RepeatCount = input.ReadInt32();
            break;
          }
          case 74: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 80: {
            Id = input.ReadInt32();
            break;
          }
          case 88: {
            Year = input.ReadInt32();
            break;
          }
          case 96: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadBytes();
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::RemoteFortressReader.ColorDefinition();
            }
            input.ReadMessage(Color);
            break;
          }
          case 32: {
            Duration = input.ReadInt32();
            break;
          }
          case 40: {
            Continuation = input.ReadBool();
            break;
          }
          case 48: {
            Unconscious = input.ReadBool();
            break;
          }
          case 56: {
            Announcement = input.ReadBool();
            break;
          }
          case 64: {
            RepeatCount = input.ReadInt32();
            break;
          }
          case 74: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 80: {
            Id = input.ReadInt32();
            break;
          }
          case 88: {
            Year = input.ReadInt32();
            break;
          }
          case 96: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Status : pb::IMessage<Status>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status(Status other) : this() {
      reports_ = other.reports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.Report> _repeated_reports_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.Report.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.Report> reports_ = new pbc::RepeatedField<global::RemoteFortressReader.Report>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.Report> Reports {
      get { return reports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reports_.Equals(other.reports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reports_.WriteTo(output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reports_.WriteTo(ref output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += reports_.CalculateSize(_repeated_reports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      reports_.Add(other.reports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reports_.AddEntriesFrom(input, _repeated_reports_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reports_.AddEntriesFrom(ref input, _repeated_reports_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShapeDescriptior : pb::IMessage<ShapeDescriptior>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShapeDescriptior> _parser = new pb::MessageParser<ShapeDescriptior>(() => new ShapeDescriptior());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShapeDescriptior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeDescriptior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeDescriptior(ShapeDescriptior other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      tile_ = other.tile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeDescriptior Clone() {
      return new ShapeDescriptior(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static pb::ByteString IdDefaultValue = pb::ByteString.Empty;

    private pb::ByteString id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "tile" field.</summary>
    public const int TileFieldNumber = 2;
    private readonly static int TileDefaultValue = 0;

    private int tile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tile {
      get { if ((_hasBits0 & 1) != 0) { return tile_; } else { return TileDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tile_ = value;
      }
    }
    /// <summary>Gets whether the "tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTile {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTile() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShapeDescriptior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShapeDescriptior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Tile != other.Tile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasTile) hash ^= Tile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HasTile) {
        output.WriteRawTag(16);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HasTile) {
        output.WriteRawTag(16);
        output.WriteInt32(Tile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HasTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShapeDescriptior other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasTile) {
        Tile = other.Tile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 16: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 16: {
            Tile = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Language : pb::IMessage<Language>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Language> _parser = new pb::MessageParser<Language>(() => new Language());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Language> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language(Language other) : this() {
      shapes_ = other.shapes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language Clone() {
      return new Language(this);
    }

    /// <summary>Field number for the "shapes" field.</summary>
    public const int ShapesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ShapeDescriptior> _repeated_shapes_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.ShapeDescriptior.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ShapeDescriptior> shapes_ = new pbc::RepeatedField<global::RemoteFortressReader.ShapeDescriptior>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ShapeDescriptior> Shapes {
      get { return shapes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Language);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Language other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shapes_.Equals(other.shapes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shapes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shapes_.WriteTo(output, _repeated_shapes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shapes_.WriteTo(ref output, _repeated_shapes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += shapes_.CalculateSize(_repeated_shapes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Language other) {
      if (other == null) {
        return;
      }
      shapes_.Add(other.shapes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shapes_.AddEntriesFrom(input, _repeated_shapes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shapes_.AddEntriesFrom(ref input, _repeated_shapes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemImprovement : pb::IMessage<ItemImprovement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemImprovement> _parser = new pb::MessageParser<ItemImprovement>(() => new ItemImprovement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemImprovement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemImprovement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemImprovement(ItemImprovement other) : this() {
      _hasBits0 = other._hasBits0;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      shape_ = other.shape_;
      specificType_ = other.specificType_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemImprovement Clone() {
      return new ItemImprovement(this);
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 1;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 3;
    private readonly static int ShapeDefaultValue = 0;

    private int shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Shape {
      get { if ((_hasBits0 & 1) != 0) { return shape_; } else { return ShapeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        shape_ = value;
      }
    }
    /// <summary>Gets whether the "shape" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShape {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "shape" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShape() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "specific_type" field.</summary>
    public const int SpecificTypeFieldNumber = 4;
    private readonly static int SpecificTypeDefaultValue = 0;

    private int specificType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpecificType {
      get { if ((_hasBits0 & 2) != 0) { return specificType_; } else { return SpecificTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        specificType_ = value;
      }
    }
    /// <summary>Gets whether the "specific_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecificType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "specific_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecificType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 5;
    private global::RemoteFortressReader.ArtImage image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImage Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemImprovement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemImprovement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Material, other.Material)) return false;
      if (Shape != other.Shape) return false;
      if (SpecificType != other.SpecificType) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (material_ != null) hash ^= Material.GetHashCode();
      if (HasShape) hash ^= Shape.GetHashCode();
      if (HasSpecificType) hash ^= SpecificType.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (material_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Material);
      }
      if (HasShape) {
        output.WriteRawTag(24);
        output.WriteInt32(Shape);
      }
      if (HasSpecificType) {
        output.WriteRawTag(32);
        output.WriteInt32(SpecificType);
      }
      if (image_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Image);
      }
      if (HasType) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (material_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Material);
      }
      if (HasShape) {
        output.WriteRawTag(24);
        output.WriteInt32(Shape);
      }
      if (HasSpecificType) {
        output.WriteRawTag(32);
        output.WriteInt32(SpecificType);
      }
      if (image_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Image);
      }
      if (HasType) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (HasShape) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Shape);
      }
      if (HasSpecificType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpecificType);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemImprovement other) {
      if (other == null) {
        return;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.HasShape) {
        Shape = other.Shape;
      }
      if (other.HasSpecificType) {
        SpecificType = other.SpecificType;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::RemoteFortressReader.ArtImage();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 24: {
            Shape = input.ReadInt32();
            break;
          }
          case 32: {
            SpecificType = input.ReadInt32();
            break;
          }
          case 42: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 24: {
            Shape = input.ReadInt32();
            break;
          }
          case 32: {
            SpecificType = input.ReadInt32();
            break;
          }
          case 42: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArtImageElement : pb::IMessage<ArtImageElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtImageElement> _parser = new pb::MessageParser<ArtImageElement>(() => new ArtImageElement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArtImageElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageElement(ArtImageElement other) : this() {
      _hasBits0 = other._hasBits0;
      count_ = other.count_;
      type_ = other.type_;
      creatureItem_ = other.creatureItem_ != null ? other.creatureItem_.Clone() : null;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageElement Clone() {
      return new ArtImageElement(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::RemoteFortressReader.ArtImageElementType TypeDefaultValue = global::RemoteFortressReader.ArtImageElementType.ImageCreature;

    private global::RemoteFortressReader.ArtImageElementType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImageElementType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "creature_item" field.</summary>
    public const int CreatureItemFieldNumber = 3;
    private global::RemoteFortressReader.MatPair creatureItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair CreatureItem {
      get { return creatureItem_; }
      set {
        creatureItem_ = value;
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 5;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 6;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 4) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArtImageElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArtImageElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(CreatureItem, other.CreatureItem)) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (creatureItem_ != null) hash ^= CreatureItem.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (creatureItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatureItem);
      }
      if (material_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Material);
      }
      if (HasId) {
        output.WriteRawTag(48);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (creatureItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatureItem);
      }
      if (material_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Material);
      }
      if (HasId) {
        output.WriteRawTag(48);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (creatureItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatureItem);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArtImageElement other) {
      if (other == null) {
        return;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.creatureItem_ != null) {
        if (creatureItem_ == null) {
          CreatureItem = new global::RemoteFortressReader.MatPair();
        }
        CreatureItem.MergeFrom(other.CreatureItem);
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::RemoteFortressReader.ArtImageElementType) input.ReadEnum();
            break;
          }
          case 26: {
            if (creatureItem_ == null) {
              CreatureItem = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(CreatureItem);
            break;
          }
          case 42: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 48: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::RemoteFortressReader.ArtImageElementType) input.ReadEnum();
            break;
          }
          case 26: {
            if (creatureItem_ == null) {
              CreatureItem = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(CreatureItem);
            break;
          }
          case 42: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 48: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArtImageProperty : pb::IMessage<ArtImageProperty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtImageProperty> _parser = new pb::MessageParser<ArtImageProperty>(() => new ArtImageProperty());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArtImageProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageProperty(ArtImageProperty other) : this() {
      _hasBits0 = other._hasBits0;
      subject_ = other.subject_;
      object_ = other.object_;
      verb_ = other.verb_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImageProperty Clone() {
      return new ArtImageProperty(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 1;
    private readonly static int SubjectDefaultValue = 0;

    private int subject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Subject {
      get { if ((_hasBits0 & 1) != 0) { return subject_; } else { return SubjectDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subject_ = value;
      }
    }
    /// <summary>Gets whether the "subject" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubject {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subject" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubject() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 2;
    private readonly static int ObjectDefaultValue = 0;

    private int object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Object {
      get { if ((_hasBits0 & 2) != 0) { return object_; } else { return ObjectDefaultValue; } }
      set {
        _hasBits0 |= 2;
        object_ = value;
      }
    }
    /// <summary>Gets whether the "object" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasObject {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "object" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearObject() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 3;
    private readonly static global::RemoteFortressReader.ArtImageVerb VerbDefaultValue = global::RemoteFortressReader.ArtImageVerb.VerbWithering;

    private global::RemoteFortressReader.ArtImageVerb verb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImageVerb Verb {
      get { if ((_hasBits0 & 4) != 0) { return verb_; } else { return VerbDefaultValue; } }
      set {
        _hasBits0 |= 4;
        verb_ = value;
      }
    }
    /// <summary>Gets whether the "verb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerb {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "verb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerb() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static global::RemoteFortressReader.ArtImagePropertyType TypeDefaultValue = global::RemoteFortressReader.ArtImagePropertyType.TransitiveVerb;

    private global::RemoteFortressReader.ArtImagePropertyType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImagePropertyType Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArtImageProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArtImageProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subject != other.Subject) return false;
      if (Object != other.Object) return false;
      if (Verb != other.Verb) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubject) hash ^= Subject.GetHashCode();
      if (HasObject) hash ^= Object.GetHashCode();
      if (HasVerb) hash ^= Verb.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubject) {
        output.WriteRawTag(8);
        output.WriteInt32(Subject);
      }
      if (HasObject) {
        output.WriteRawTag(16);
        output.WriteInt32(Object);
      }
      if (HasVerb) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Verb);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubject) {
        output.WriteRawTag(8);
        output.WriteInt32(Subject);
      }
      if (HasObject) {
        output.WriteRawTag(16);
        output.WriteInt32(Object);
      }
      if (HasVerb) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Verb);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSubject) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subject);
      }
      if (HasObject) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Object);
      }
      if (HasVerb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Verb);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArtImageProperty other) {
      if (other == null) {
        return;
      }
      if (other.HasSubject) {
        Subject = other.Subject;
      }
      if (other.HasObject) {
        Object = other.Object;
      }
      if (other.HasVerb) {
        Verb = other.Verb;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Subject = input.ReadInt32();
            break;
          }
          case 16: {
            Object = input.ReadInt32();
            break;
          }
          case 24: {
            Verb = (global::RemoteFortressReader.ArtImageVerb) input.ReadEnum();
            break;
          }
          case 32: {
            Type = (global::RemoteFortressReader.ArtImagePropertyType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Subject = input.ReadInt32();
            break;
          }
          case 16: {
            Object = input.ReadInt32();
            break;
          }
          case 24: {
            Verb = (global::RemoteFortressReader.ArtImageVerb) input.ReadEnum();
            break;
          }
          case 32: {
            Type = (global::RemoteFortressReader.ArtImagePropertyType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArtImage : pb::IMessage<ArtImage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtImage> _parser = new pb::MessageParser<ArtImage>(() => new ArtImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArtImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImage(ArtImage other) : this() {
      elements_ = other.elements_.Clone();
      id_ = other.id_ != null ? other.id_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArtImage Clone() {
      return new ArtImage(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ArtImageElement> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::RemoteFortressReader.ArtImageElement.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ArtImageElement> elements_ = new pbc::RepeatedField<global::RemoteFortressReader.ArtImageElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ArtImageElement> Elements {
      get { return elements_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private global::RemoteFortressReader.MatPair id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::RemoteFortressReader.ArtImageProperty> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(26, global::RemoteFortressReader.ArtImageProperty.Parser);
    private readonly pbc::RepeatedField<global::RemoteFortressReader.ArtImageProperty> properties_ = new pbc::RepeatedField<global::RemoteFortressReader.ArtImageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RemoteFortressReader.ArtImageProperty> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArtImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArtImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      if (!object.Equals(Id, other.Id)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elements_.WriteTo(output, _repeated_elements_codec);
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elements_.WriteTo(ref output, _repeated_elements_codec);
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      properties_.WriteTo(ref output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArtImage other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::RemoteFortressReader.MatPair();
        }
        Id.MergeFrom(other.Id);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(ref input, _repeated_properties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Engraving : pb::IMessage<Engraving>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Engraving> _parser = new pb::MessageParser<Engraving>(() => new Engraving());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Engraving> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Engraving() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Engraving(Engraving other) : this() {
      _hasBits0 = other._hasBits0;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      quality_ = other.quality_;
      tile_ = other.tile_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      floor_ = other.floor_;
      west_ = other.west_;
      east_ = other.east_;
      north_ = other.north_;
      south_ = other.south_;
      hidden_ = other.hidden_;
      northwest_ = other.northwest_;
      northeast_ = other.northeast_;
      southwest_ = other.southwest_;
      southeast_ = other.southeast_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Engraving Clone() {
      return new Engraving(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 2;
    private readonly static int QualityDefaultValue = 0;

    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quality {
      get { if ((_hasBits0 & 1) != 0) { return quality_; } else { return QualityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        quality_ = value;
      }
    }
    /// <summary>Gets whether the "quality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuality {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuality() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tile" field.</summary>
    public const int TileFieldNumber = 3;
    private readonly static int TileDefaultValue = 0;

    private int tile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tile {
      get { if ((_hasBits0 & 2) != 0) { return tile_; } else { return TileDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tile_ = value;
      }
    }
    /// <summary>Gets whether the "tile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTile {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTile() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 4;
    private global::RemoteFortressReader.ArtImage image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.ArtImage Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "floor" field.</summary>
    public const int FloorFieldNumber = 5;
    private readonly static bool FloorDefaultValue = false;

    private bool floor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Floor {
      get { if ((_hasBits0 & 4) != 0) { return floor_; } else { return FloorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        floor_ = value;
      }
    }
    /// <summary>Gets whether the "floor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFloor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "floor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFloor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "west" field.</summary>
    public const int WestFieldNumber = 6;
    private readonly static bool WestDefaultValue = false;

    private bool west_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool West {
      get { if ((_hasBits0 & 8) != 0) { return west_; } else { return WestDefaultValue; } }
      set {
        _hasBits0 |= 8;
        west_ = value;
      }
    }
    /// <summary>Gets whether the "west" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWest {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "west" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWest() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "east" field.</summary>
    public const int EastFieldNumber = 7;
    private readonly static bool EastDefaultValue = false;

    private bool east_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool East {
      get { if ((_hasBits0 & 16) != 0) { return east_; } else { return EastDefaultValue; } }
      set {
        _hasBits0 |= 16;
        east_ = value;
      }
    }
    /// <summary>Gets whether the "east" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEast {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "east" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEast() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "north" field.</summary>
    public const int NorthFieldNumber = 8;
    private readonly static bool NorthDefaultValue = false;

    private bool north_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool North {
      get { if ((_hasBits0 & 32) != 0) { return north_; } else { return NorthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        north_ = value;
      }
    }
    /// <summary>Gets whether the "north" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNorth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "north" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNorth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "south" field.</summary>
    public const int SouthFieldNumber = 9;
    private readonly static bool SouthDefaultValue = false;

    private bool south_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool South {
      get { if ((_hasBits0 & 64) != 0) { return south_; } else { return SouthDefaultValue; } }
      set {
        _hasBits0 |= 64;
        south_ = value;
      }
    }
    /// <summary>Gets whether the "south" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSouth {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "south" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSouth() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 10;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hidden {
      get { if ((_hasBits0 & 128) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHidden {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHidden() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "northwest" field.</summary>
    public const int NorthwestFieldNumber = 11;
    private readonly static bool NorthwestDefaultValue = false;

    private bool northwest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Northwest {
      get { if ((_hasBits0 & 256) != 0) { return northwest_; } else { return NorthwestDefaultValue; } }
      set {
        _hasBits0 |= 256;
        northwest_ = value;
      }
    }
    /// <summary>Gets whether the "northwest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNorthwest {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "northwest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNorthwest() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "northeast" field.</summary>
    public const int NortheastFieldNumber = 12;
    private readonly static bool NortheastDefaultValue = false;

    private bool northeast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Northeast {
      get { if ((_hasBits0 & 512) != 0) { return northeast_; } else { return NortheastDefaultValue; } }
      set {
        _hasBits0 |= 512;
        northeast_ = value;
      }
    }
    /// <summary>Gets whether the "northeast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNortheast {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "northeast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNortheast() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "southwest" field.</summary>
    public const int SouthwestFieldNumber = 13;
    private readonly static bool SouthwestDefaultValue = false;

    private bool southwest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Southwest {
      get { if ((_hasBits0 & 1024) != 0) { return southwest_; } else { return SouthwestDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        southwest_ = value;
      }
    }
    /// <summary>Gets whether the "southwest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSouthwest {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "southwest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSouthwest() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "southeast" field.</summary>
    public const int SoutheastFieldNumber = 14;
    private readonly static bool SoutheastDefaultValue = false;

    private bool southeast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Southeast {
      get { if ((_hasBits0 & 2048) != 0) { return southeast_; } else { return SoutheastDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        southeast_ = value;
      }
    }
    /// <summary>Gets whether the "southeast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoutheast {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "southeast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoutheast() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Engraving);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Engraving other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos, other.Pos)) return false;
      if (Quality != other.Quality) return false;
      if (Tile != other.Tile) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (Floor != other.Floor) return false;
      if (West != other.West) return false;
      if (East != other.East) return false;
      if (North != other.North) return false;
      if (South != other.South) return false;
      if (Hidden != other.Hidden) return false;
      if (Northwest != other.Northwest) return false;
      if (Northeast != other.Northeast) return false;
      if (Southwest != other.Southwest) return false;
      if (Southeast != other.Southeast) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasQuality) hash ^= Quality.GetHashCode();
      if (HasTile) hash ^= Tile.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasFloor) hash ^= Floor.GetHashCode();
      if (HasWest) hash ^= West.GetHashCode();
      if (HasEast) hash ^= East.GetHashCode();
      if (HasNorth) hash ^= North.GetHashCode();
      if (HasSouth) hash ^= South.GetHashCode();
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (HasNorthwest) hash ^= Northwest.GetHashCode();
      if (HasNortheast) hash ^= Northeast.GetHashCode();
      if (HasSouthwest) hash ^= Southwest.GetHashCode();
      if (HasSoutheast) hash ^= Southeast.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasQuality) {
        output.WriteRawTag(16);
        output.WriteInt32(Quality);
      }
      if (HasTile) {
        output.WriteRawTag(24);
        output.WriteInt32(Tile);
      }
      if (image_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Image);
      }
      if (HasFloor) {
        output.WriteRawTag(40);
        output.WriteBool(Floor);
      }
      if (HasWest) {
        output.WriteRawTag(48);
        output.WriteBool(West);
      }
      if (HasEast) {
        output.WriteRawTag(56);
        output.WriteBool(East);
      }
      if (HasNorth) {
        output.WriteRawTag(64);
        output.WriteBool(North);
      }
      if (HasSouth) {
        output.WriteRawTag(72);
        output.WriteBool(South);
      }
      if (HasHidden) {
        output.WriteRawTag(80);
        output.WriteBool(Hidden);
      }
      if (HasNorthwest) {
        output.WriteRawTag(88);
        output.WriteBool(Northwest);
      }
      if (HasNortheast) {
        output.WriteRawTag(96);
        output.WriteBool(Northeast);
      }
      if (HasSouthwest) {
        output.WriteRawTag(104);
        output.WriteBool(Southwest);
      }
      if (HasSoutheast) {
        output.WriteRawTag(112);
        output.WriteBool(Southeast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasQuality) {
        output.WriteRawTag(16);
        output.WriteInt32(Quality);
      }
      if (HasTile) {
        output.WriteRawTag(24);
        output.WriteInt32(Tile);
      }
      if (image_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Image);
      }
      if (HasFloor) {
        output.WriteRawTag(40);
        output.WriteBool(Floor);
      }
      if (HasWest) {
        output.WriteRawTag(48);
        output.WriteBool(West);
      }
      if (HasEast) {
        output.WriteRawTag(56);
        output.WriteBool(East);
      }
      if (HasNorth) {
        output.WriteRawTag(64);
        output.WriteBool(North);
      }
      if (HasSouth) {
        output.WriteRawTag(72);
        output.WriteBool(South);
      }
      if (HasHidden) {
        output.WriteRawTag(80);
        output.WriteBool(Hidden);
      }
      if (HasNorthwest) {
        output.WriteRawTag(88);
        output.WriteBool(Northwest);
      }
      if (HasNortheast) {
        output.WriteRawTag(96);
        output.WriteBool(Northeast);
      }
      if (HasSouthwest) {
        output.WriteRawTag(104);
        output.WriteBool(Southwest);
      }
      if (HasSoutheast) {
        output.WriteRawTag(112);
        output.WriteBool(Southeast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasQuality) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (HasTile) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tile);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasFloor) {
        size += 1 + 1;
      }
      if (HasWest) {
        size += 1 + 1;
      }
      if (HasEast) {
        size += 1 + 1;
      }
      if (HasNorth) {
        size += 1 + 1;
      }
      if (HasSouth) {
        size += 1 + 1;
      }
      if (HasHidden) {
        size += 1 + 1;
      }
      if (HasNorthwest) {
        size += 1 + 1;
      }
      if (HasNortheast) {
        size += 1 + 1;
      }
      if (HasSouthwest) {
        size += 1 + 1;
      }
      if (HasSoutheast) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Engraving other) {
      if (other == null) {
        return;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasQuality) {
        Quality = other.Quality;
      }
      if (other.HasTile) {
        Tile = other.Tile;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::RemoteFortressReader.ArtImage();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasFloor) {
        Floor = other.Floor;
      }
      if (other.HasWest) {
        West = other.West;
      }
      if (other.HasEast) {
        East = other.East;
      }
      if (other.HasNorth) {
        North = other.North;
      }
      if (other.HasSouth) {
        South = other.South;
      }
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      if (other.HasNorthwest) {
        Northwest = other.Northwest;
      }
      if (other.HasNortheast) {
        Northeast = other.Northeast;
      }
      if (other.HasSouthwest) {
        Southwest = other.Southwest;
      }
      if (other.HasSoutheast) {
        Southeast = other.Southeast;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 16: {
            Quality = input.ReadInt32();
            break;
          }
          case 24: {
            Tile = input.ReadInt32();
            break;
          }
          case 34: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
          case 40: {
            Floor = input.ReadBool();
            break;
          }
          case 48: {
            West = input.ReadBool();
            break;
          }
          case 56: {
            East = input.ReadBool();
            break;
          }
          case 64: {
            North = input.ReadBool();
            break;
          }
          case 72: {
            South = input.ReadBool();
            break;
          }
          case 80: {
            Hidden = input.ReadBool();
            break;
          }
          case 88: {
            Northwest = input.ReadBool();
            break;
          }
          case 96: {
            Northeast = input.ReadBool();
            break;
          }
          case 104: {
            Southwest = input.ReadBool();
            break;
          }
          case 112: {
            Southeast = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 16: {
            Quality = input.ReadInt32();
            break;
          }
          case 24: {
            Tile = input.ReadInt32();
            break;
          }
          case 34: {
            if (image_ == null) {
              Image = new global::RemoteFortressReader.ArtImage();
            }
            input.ReadMessage(Image);
            break;
          }
          case 40: {
            Floor = input.ReadBool();
            break;
          }
          case 48: {
            West = input.ReadBool();
            break;
          }
          case 56: {
            East = input.ReadBool();
            break;
          }
          case 64: {
            North = input.ReadBool();
            break;
          }
          case 72: {
            South = input.ReadBool();
            break;
          }
          case 80: {
            Hidden = input.ReadBool();
            break;
          }
          case 88: {
            Northwest = input.ReadBool();
            break;
          }
          case 96: {
            Northeast = input.ReadBool();
            break;
          }
          case 104: {
            Southwest = input.ReadBool();
            break;
          }
          case 112: {
            Southeast = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FlowInfo : pb::IMessage<FlowInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlowInfo> _parser = new pb::MessageParser<FlowInfo>(() => new FlowInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlowInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowInfo(FlowInfo other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      type_ = other.type_;
      density_ = other.density_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dest_ = other.dest_ != null ? other.dest_.Clone() : null;
      expanding_ = other.expanding_;
      reuse_ = other.reuse_;
      guideId_ = other.guideId_;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowInfo Clone() {
      return new FlowInfo(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private readonly static int IndexDefaultValue = 0;

    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::RemoteFortressReader.FlowType TypeDefaultValue = global::RemoteFortressReader.FlowType.Miasma;

    private global::RemoteFortressReader.FlowType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.FlowType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "density" field.</summary>
    public const int DensityFieldNumber = 3;
    private readonly static int DensityDefaultValue = 0;

    private int density_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Density {
      get { if ((_hasBits0 & 4) != 0) { return density_; } else { return DensityDefaultValue; } }
      set {
        _hasBits0 |= 4;
        density_ = value;
      }
    }
    /// <summary>Gets whether the "density" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDensity {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "density" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDensity() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 4;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dest" field.</summary>
    public const int DestFieldNumber = 5;
    private global::RemoteFortressReader.Coord dest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Dest {
      get { return dest_; }
      set {
        dest_ = value;
      }
    }

    /// <summary>Field number for the "expanding" field.</summary>
    public const int ExpandingFieldNumber = 6;
    private readonly static bool ExpandingDefaultValue = false;

    private bool expanding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Expanding {
      get { if ((_hasBits0 & 8) != 0) { return expanding_; } else { return ExpandingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        expanding_ = value;
      }
    }
    /// <summary>Gets whether the "expanding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpanding {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "expanding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpanding() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "reuse" field.</summary>
    public const int ReuseFieldNumber = 7;
    private readonly static bool ReuseDefaultValue = false;

    private bool reuse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reuse {
      get { if ((_hasBits0 & 16) != 0) { return reuse_; } else { return ReuseDefaultValue; } }
      set {
        _hasBits0 |= 16;
        reuse_ = value;
      }
    }
    /// <summary>Gets whether the "reuse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReuse {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "reuse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReuse() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "guide_id" field.</summary>
    public const int GuideIdFieldNumber = 8;
    private readonly static int GuideIdDefaultValue = 0;

    private int guideId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuideId {
      get { if ((_hasBits0 & 32) != 0) { return guideId_; } else { return GuideIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        guideId_ = value;
      }
    }
    /// <summary>Gets whether the "guide_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuideId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "guide_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuideId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 9;
    private global::RemoteFortressReader.MatPair material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 10;
    private global::RemoteFortressReader.MatPair item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.MatPair Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlowInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlowInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Type != other.Type) return false;
      if (Density != other.Density) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dest, other.Dest)) return false;
      if (Expanding != other.Expanding) return false;
      if (Reuse != other.Reuse) return false;
      if (GuideId != other.GuideId) return false;
      if (!object.Equals(Material, other.Material)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasDensity) hash ^= Density.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dest_ != null) hash ^= Dest.GetHashCode();
      if (HasExpanding) hash ^= Expanding.GetHashCode();
      if (HasReuse) hash ^= Reuse.GetHashCode();
      if (HasGuideId) hash ^= GuideId.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasDensity) {
        output.WriteRawTag(24);
        output.WriteInt32(Density);
      }
      if (pos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pos);
      }
      if (dest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Dest);
      }
      if (HasExpanding) {
        output.WriteRawTag(48);
        output.WriteBool(Expanding);
      }
      if (HasReuse) {
        output.WriteRawTag(56);
        output.WriteBool(Reuse);
      }
      if (HasGuideId) {
        output.WriteRawTag(64);
        output.WriteInt32(GuideId);
      }
      if (material_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Material);
      }
      if (item_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasDensity) {
        output.WriteRawTag(24);
        output.WriteInt32(Density);
      }
      if (pos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pos);
      }
      if (dest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Dest);
      }
      if (HasExpanding) {
        output.WriteRawTag(48);
        output.WriteBool(Expanding);
      }
      if (HasReuse) {
        output.WriteRawTag(56);
        output.WriteBool(Reuse);
      }
      if (HasGuideId) {
        output.WriteRawTag(64);
        output.WriteInt32(GuideId);
      }
      if (material_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Material);
      }
      if (item_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasDensity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Density);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dest);
      }
      if (HasExpanding) {
        size += 1 + 1;
      }
      if (HasReuse) {
        size += 1 + 1;
      }
      if (HasGuideId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideId);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlowInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasDensity) {
        Density = other.Density;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dest_ != null) {
        if (dest_ == null) {
          Dest = new global::RemoteFortressReader.Coord();
        }
        Dest.MergeFrom(other.Dest);
      }
      if (other.HasExpanding) {
        Expanding = other.Expanding;
      }
      if (other.HasReuse) {
        Reuse = other.Reuse;
      }
      if (other.HasGuideId) {
        GuideId = other.GuideId;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::RemoteFortressReader.MatPair();
        }
        Material.MergeFrom(other.Material);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::RemoteFortressReader.MatPair();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::RemoteFortressReader.FlowType) input.ReadEnum();
            break;
          }
          case 24: {
            Density = input.ReadInt32();
            break;
          }
          case 34: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 42: {
            if (dest_ == null) {
              Dest = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Dest);
            break;
          }
          case 48: {
            Expanding = input.ReadBool();
            break;
          }
          case 56: {
            Reuse = input.ReadBool();
            break;
          }
          case 64: {
            GuideId = input.ReadInt32();
            break;
          }
          case 74: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 82: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::RemoteFortressReader.FlowType) input.ReadEnum();
            break;
          }
          case 24: {
            Density = input.ReadInt32();
            break;
          }
          case 34: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 42: {
            if (dest_ == null) {
              Dest = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Dest);
            break;
          }
          case 48: {
            Expanding = input.ReadBool();
            break;
          }
          case 56: {
            Reuse = input.ReadBool();
            break;
          }
          case 64: {
            GuideId = input.ReadInt32();
            break;
          }
          case 74: {
            if (material_ == null) {
              Material = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Material);
            break;
          }
          case 82: {
            if (item_ == null) {
              Item = new global::RemoteFortressReader.MatPair();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Wave : pb::IMessage<Wave>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Wave> _parser = new pb::MessageParser<Wave>(() => new Wave());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Wave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteFortressReader.RemoteFortressReaderReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Wave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Wave(Wave other) : this() {
      dest_ = other.dest_ != null ? other.dest_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Wave Clone() {
      return new Wave(this);
    }

    /// <summary>Field number for the "dest" field.</summary>
    public const int DestFieldNumber = 1;
    private global::RemoteFortressReader.Coord dest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Dest {
      get { return dest_; }
      set {
        dest_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::RemoteFortressReader.Coord pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RemoteFortressReader.Coord Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Wave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Wave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dest, other.Dest)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dest_ != null) hash ^= Dest.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Dest);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Dest);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dest);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Wave other) {
      if (other == null) {
        return;
      }
      if (other.dest_ != null) {
        if (dest_ == null) {
          Dest = new global::RemoteFortressReader.Coord();
        }
        Dest.MergeFrom(other.Dest);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::RemoteFortressReader.Coord();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dest_ == null) {
              Dest = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Dest);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dest_ == null) {
              Dest = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Dest);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::RemoteFortressReader.Coord();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
